import{_ as a,c as e,o as s,N as n}from"./chunks/framework.3a9190c5.js";const b=JSON.parse('{"title":"如何为 smartraiden 贡献代码","description":"","frontmatter":{"title":"如何为 smartraiden 贡献代码","date":"2018-09-13T00:45:47.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/ethereum/如何为 smartraiden 贡献代码.md"}'),t={name:"blockchain/ethereum/如何为 smartraiden 贡献代码.md"},r=n(`<h1 id="如何为-smartraiden-贡献代码" tabindex="-1">如何为 smartRaiden 贡献代码 <a class="header-anchor" href="#如何为-smartraiden-贡献代码" aria-label="Permalink to &quot;如何为 smartRaiden 贡献代码&quot;">​</a></h1><h2 id="_1-fork-项目" tabindex="-1">1.Fork 项目 <a class="header-anchor" href="#_1-fork-项目" aria-label="Permalink to &quot;1.Fork 项目&quot;">​</a></h2><p>登录 github 账号,并访问<a href="https://github.com/SmartMeshFoundation/SmartRaiden,%E7%84%B6%E5%90%8E%E7%82%B9%E5%87%BB%E5%8F%B3%E4%B8%8A%E8%A7%92%E7%9A%84" target="_blank" rel="noreferrer">https://github.com/SmartMeshFoundation/SmartRaiden,然后点击右上角的</a> fork 按钮,等待几秒钟以后就可以在你自己的 github 账号下看到 smartraiden.</p><h2 id="_2-clone-项目到本地" tabindex="-1">2. Clone 项目到本地 <a class="header-anchor" href="#_2-clone-项目到本地" aria-label="Permalink to &quot;2. Clone 项目到本地&quot;">​</a></h2><p>你应该 clone自己账号下的 SmartRaiden, 具体到我的,就应该是<a href="https://github.com/nkbai/SmartRaiden.git" target="_blank" rel="noreferrer">https://github.com/nkbai/SmartRaiden.git</a></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cd $GOPATH/src/github.com/SmartMeshFoundation</span></span>
<span class="line"><span style="color:#A6ACCD;">git clone https://github.com/nkbai/SmartRaiden.git</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>注意代码是不能放到 github.com/nkbai/SmartRaiden 的,否则 go 会编译不过去</p><h2 id="_3-提交" tabindex="-1">3. 提交 <a class="header-anchor" href="#_3-提交" aria-label="Permalink to &quot;3. 提交&quot;">​</a></h2><p>接下来你就可以修改代码,然后提交到 github, 这过程和维护你自己的 github 项目没有什么区别. 一旦 push 到 github, 这时候你可以创建 PR. <img alt="new pr" data-src="https://img2018.cnblogs.com/blog/124391/201809/124391-20180910123234918-451255451.png" loading="lazy" class="lazy"></p><h2 id="_4-代码同步" tabindex="-1">4. 代码同步 <a class="header-anchor" href="#_4-代码同步" aria-label="Permalink to &quot;4. 代码同步&quot;">​</a></h2><p>需要添加 remote, 才能保持SmartMeshFoundation/SmartRaiden和 nkbai/SmartRaiden 的同步.</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git remote add upstream https://github.com/SmartMeshFoundation/SmartRaiden.git</span></span>
<span class="line"><span style="color:#A6ACCD;">git remote -v</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>需要同步代码时:</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git fetch upstream</span></span>
<span class="line"><span style="color:#A6ACCD;">git merge upstream/master</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,14),i=[r];function l(o,p,c,d,m,h){return s(),e("div",null,i)}const _=a(t,[["render",l]]);export{b as __pageData,_ as default};
