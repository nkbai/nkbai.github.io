import{_ as s,c as n,o as a,N as l}from"./chunks/framework.3a9190c5.js";const F=JSON.parse('{"title":"我对 smartplasma 的理解","description":"","frontmatter":{"title":"我对 smartplasma 的理解","date":"2018-09-19T06:08:37.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/ethereum/我对 smartplasma 的理解.md"}'),p={name:"blockchain/ethereum/我对 smartplasma 的理解.md"},e=l(`<h1 id="plasma-cash-合约解读" tabindex="-1">Plasma Cash 合约解读 <a class="header-anchor" href="#plasma-cash-合约解读" aria-label="Permalink to &quot;Plasma Cash 合约解读&quot;">​</a></h1><ul><li><a href="#plasma-cash-合约解读">Plasma Cash 合约解读</a><ul><li><a href="#1-合约代码">1. 合约代码</a></li><li><a href="#2-合约文件简单介绍">2. 合约文件简单介绍</a></li><li><a href="#3-plasma-cash-的基础数据结构">3. Plasma Cash 的基础数据结构</a><ul><li><a href="#31-plasma-cash-中的资产">3.1 Plasma Cash 中的资产</a></li><li><a href="#32-plasma-cash中的交易">3.2 Plasma Cash中的交易</a></li><li><a href="#33-plasma-cash-中的-block">3.3 Plasma Cash 中的 Block</a></li><li><a href="#34-plasma-cash-中资产的回归主链以太坊">3.4 Plasma Cash 中资产的回归主链以太坊</a><ul><li><a href="#341-\b资产拥有证明">3.4.1 \b资产拥有证明</a></li><li><a href="#342-等待其他人来挑战我">3.4.2 等待其他人来挑战我</a></li><li><a href="#343-挑战期过了-bob-拿回资产-uid">3.4.3 挑战期过了, Bob 拿回资产 uid</a></li></ul></li></ul></li><li><a href="#4-plasma-cash-中的退出示例">4. Plasma Cash 中的退出示例</a></li><li><a href="#5-其他问题">5. 其他问题</a> Plasma 由 V 神在2017年8月提出,希望通过链下交易来大幅提高以太坊的 TPS.</li></ul></li></ul><p>每条 Plasma 链都会将有关交易顺序的消息换算成一个哈希值存储在根链上。比特币和以太坊都属于根链——这两条区块链具有很高的安全性，并且通过去中心化保证了（安全性和活性）。</p><p>Plasma 设计模型有两个主要的分支：Plasma MVP 和 Plasma Cash 。这里我们来研究 SmartPlasma 实现的 Plasma Cash 合约,并通过合约分析来回答大家关于 Plasma Cash 的一系列疑问.</p><h2 id="_1-合约代码" tabindex="-1">1. 合约代码 <a class="header-anchor" href="#_1-合约代码" aria-label="Permalink to &quot;1. 合约代码&quot;">​</a></h2><p>SmartPlasma的合约代码肯定会不断升级,我针对他们在今天(2018-09-14)最新版本进行分析,这份代码目前保存在我的 github 上<a href="https://github.com/nkbai/blog/tree/master/smartplasma/contracts" target="_blank" rel="noreferrer"> plasma cash</a>.</p><h2 id="_2-合约文件简单介绍" tabindex="-1">2. 合约文件简单介绍 <a class="header-anchor" href="#_2-合约文件简单介绍" aria-label="Permalink to &quot;2. 合约文件简单介绍&quot;">​</a></h2><p>文件夹中有不少与 Plasma Cash 无关的合约,这里只关注直接与 Plasma Cash 相关合约,像 ERC20Token 相关合约就忽略,自行查看.</p><ul><li>Mediator.sol 是 Plasma Cash 链中资产的进出口</li><li>RootChain.sol 处理 Plasma Cash 子链(相对于以太坊而言)中的交易以及打包等</li><li>libraries/MerkleProof.sol 是子链中交易用到的默克尔树,用于子链参与方进行欺诈证明 fraud proof.</li><li>libraris/RLP.sol RLP编码支持,可以暂时忽略,子链中所有的交易都是用RLP 编码的.</li><li>libraries/PlasmaLib.sol 生成 uid 的辅助函数</li><li>ECRecovery.sol 签名验证</li><li>datastructures/Transaction.sol 描述交易的数据结构</li></ul><h2 id="_3-plasma-cash-的基础数据结构" tabindex="-1">3. Plasma Cash 的基础数据结构 <a class="header-anchor" href="#_3-plasma-cash-的基础数据结构" aria-label="Permalink to &quot;3. Plasma Cash 的基础数据结构&quot;">​</a></h2><p>Plasma Cash 是一种子链结构,可以认为 Plasma Cash 是以太坊的一个是基于 =一种简化的UTXO模型的子链.</p><h3 id="_3-1-plasma-cash-中的资产" tabindex="-1">3.1 Plasma Cash 中的资产 <a class="header-anchor" href="#_3-1-plasma-cash-中的资产" aria-label="Permalink to &quot;3.1 Plasma Cash 中的资产&quot;">​</a></h3><p>Plasma Cash 中的资产都来自于以太坊,但是一旦进入 Plasma Cash 就会拥有唯一的 ID,并且不可分割. 可以参考 <a href="https://github.com/nkbai/blog/blob/master/smartplasma/contracts/Mediator.sol" target="_blank" rel="noreferrer">Mediator.sol</a>的deposit函数. Mediator就是 Plasma Cash 资产存放的地方.</p><div class="language-solidity line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">/** </span><span style="color:#C792EA;font-style:italic;">@dev</span><span style="color:#676E95;font-style:italic;"> Adds deposits on Smart Plasma.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">currency</span><span style="color:#676E95;font-style:italic;"> Currency address.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">amount</span><span style="color:#676E95;font-style:italic;"> Amount amount of currency.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deposit</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">currency</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">uint</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">amount</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">amount </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        Token token </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Token</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">currency</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        token</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">transferFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg.sender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this,</span><span style="color:#A6ACCD;"> amount</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/// deposit test1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> uid </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> rootChain</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deposit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg.sender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> currency</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> amount</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/// deposit test2</span></span>
<span class="line"><span style="color:#A6ACCD;">        cash</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">entry</span><span style="color:#89DDFF;">({</span></span>
<span class="line"><span style="color:#A6ACCD;">            currency</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> currency</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> amount</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>通过合约可以看出进入 Plasma Cash 的资产必须是 ERC20 Token,这些资产实际上是存在 Mediator 这个合约上,然后由 RootChain 为其分配一个唯一的 ID, 也就是 uid. 这个 uid 代表着什么 token, 有多少个.</p><h3 id="_3-2-plasma-cash中的交易" tabindex="-1">3.2 Plasma Cash中的交易 <a class="header-anchor" href="#_3-2-plasma-cash中的交易" aria-label="Permalink to &quot;3.2 Plasma Cash中的交易&quot;">​</a></h3><p>关键代码在<a href="https://github.com/nkbai/blog/blob/master/smartplasma/contracts/libraries/datastructures/Transaction.sol" target="_blank" rel="noreferrer"> Transaction.sol</a>中.</p><div class="language-solidity line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Tx</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint</span><span style="color:#A6ACCD;"> prevBlock</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint</span><span style="color:#A6ACCD;"> uid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint</span><span style="color:#A6ACCD;"> amount</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">address</span><span style="color:#A6ACCD;"> newOwner</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint</span><span style="color:#A6ACCD;"> nonce</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">address</span><span style="color:#A6ACCD;"> signer</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这里可能不太明显,需要解释才能看出来这是一个 UTXO 交易的模型. 这里面的amount 和 hash 实际上都有点啰唆,可以忽略. 那么剩下的成员需要来解释.</p><p><code>prevBlock</code>就是 UTXO 中的输入,来自于哪块. 至于为什么没有像比特币一样的OutPoint 结构,也就是 TxHash+Index, 后续会讲到. <code>uid</code> 就是交易的资产 ID <code>newOwner</code> 交易输出给谁, 这里也不支持像 比特币一样的脚本. <code>nonce</code> 是这笔资产的第多少次交易,在双花证明中有重要作用. <code>signer</code>必须由资产原拥有者的签名.</p><p><code>amount</code> 不重要,是因为资产不可分割,导致这里的 Amount 不会随交易发生而发生变化. 而 <code>hash</code> 则是可以直接计算出来.</p><h3 id="_3-3-plasma-cash-中的-block" tabindex="-1">3.3 Plasma Cash 中的 Block <a class="header-anchor" href="#_3-3-plasma-cash-中的-block" aria-label="Permalink to &quot;3.3 Plasma Cash 中的 Block&quot;">​</a></h3><p>如果一般区块链中的 Block 一样,他是交易的集合.但是不同于一般链的是,这里面的矿工(不一定是 Operator)不仅需要维护好子链,还需要周期性的将每一个 Block 对应的默克尔树根保存到以太坊中,这个工作只能有 Operator 来完成. 具体代码可见<a href="https://github.com/nkbai/blog/blob/master/smartplasma/contracts/RootChain.sol" target="_blank" rel="noreferrer"> RootChain.sol</a>的.</p><div class="language-solidity line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">newBlock</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">hash</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onlyOperator</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        blockNumber </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> blockNumber</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">uint256</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">        childChain</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">blockNumber</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">NewBlock</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">hash</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>交易证据提交者只能是 Operator, 也就是合约的创建者. 这个 Operator 既可以是普通账户,这时他就是这个子链的管理员.也可以是一份合约,那么就可以通过合约来规定子链的出块规则.</p><h3 id="_3-4-plasma-cash-中资产的回归主链以太坊" tabindex="-1">3.4 Plasma Cash 中资产的回归主链以太坊 <a class="header-anchor" href="#_3-4-plasma-cash-中资产的回归主链以太坊" aria-label="Permalink to &quot;3.4 Plasma Cash 中资产的回归主链以太坊&quot;">​</a></h3><p>当资产在 Plasma 中交易一段时间以后,持有者Bob如果想退出Plasma Cash 子链,那么\b就需要向以太坊合约也就是 RootChain\b证明,他确实拥有这一笔\b\b资产.</p><h4 id="_3-4-1-资产拥有证明" tabindex="-1">3.4.1 \b资产拥有证明 <a class="header-anchor" href="#_3-4-1-资产拥有证明" aria-label="Permalink to &quot;3.4.1 \b资产拥有证明&quot;">​</a></h4><p>这个思路和 UTXO 的思路是一样的,Bob能证明这笔资产是从哪里转给我的即可.\b具体见<a href="./.html">RootChain.sol</a>中的<code>startExit</code>函数. 其思路非常简单,证明</p><ul><li>这笔资产来自哪里(在哪 M块中转移到了 Alice 手中)</li><li>经过 Alice 签名转移给了Bob(在N块中 Alice 做了签名给我) 具体看代码 startExit</li></ul><div class="language-solidity line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/** </span><span style="color:#C792EA;font-style:italic;">@dev</span><span style="color:#676E95;font-style:italic;"> Starts the procedure for withdrawal of the deposit from the system.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTx</span><span style="color:#676E95;font-style:italic;"> Penultimate deposit transaction.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTxProof</span><span style="color:#676E95;font-style:italic;"> Proof of inclusion of a penultimate transaction in a Smart Plasma block.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTxBlockNum</span><span style="color:#676E95;font-style:italic;"> The number of the block in which the penultimate transaction is included.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTx</span><span style="color:#676E95;font-style:italic;"> Last deposit transaction.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTxProof</span><span style="color:#676E95;font-style:italic;"> Proof of inclusion of a last transaction in a Smart Plasma block.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTxBlockNum</span><span style="color:#676E95;font-style:italic;"> The number of the block in which the last transaction is included.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">startExit</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTx</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTxProof</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint256</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTxBlockNum</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTx</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTxProof</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint256</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTxBlockNum</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Transaction</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx </span><span style="color:#C792EA;">memory</span><span style="color:#A6ACCD;"> prevDecodedTx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> previousTx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createTx</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        Transaction</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx </span><span style="color:#C792EA;">memory</span><span style="color:#A6ACCD;"> decodedTx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> lastTx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createTx</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">// 证明在 prevBlock的时候 Alice 拥有资产 uid</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">previousTxBlockNum </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prevBlock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">//amount 不变,证明\b资产不可分割</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">amount </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">amount</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">//Alice 确实签名转移给了我,并且交易是相邻的两笔交易</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">newOwner </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">signer</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nonce </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nonce</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">uint256</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)));</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//紧挨着的两笔交易</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">//我是 Bob, 我要来拿走这笔资产</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg.sender </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">newOwner</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">wallet</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">bytes32</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">)]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> prevTxHash </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> prevBlockRoot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> childChain</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">previousTxBlockNum</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> txHash </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> blockRoot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> childChain</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">lastTxBlockNum</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            prevTxHash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">verifyProof</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">                prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                prevBlockRoot</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                previousTxProof</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            txHash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">verifyProof</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">                decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                blockRoot</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                lastTxProof</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">/// Record the exit tx.</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">exits</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">state </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">challengesLength</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        exits</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">exit</span><span style="color:#89DDFF;">({</span></span>
<span class="line"><span style="color:#A6ACCD;">            state</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            exitTime</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> now</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">challengePeriod</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">            exitTxBlkNum</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> lastTxBlockNum</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            exitTx</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> lastTx</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            txBeforeExitTxBlkNum</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> previousTxBlockNum</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            txBeforeExitTx</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> previousTx</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">StartExit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> previousTxBlockNum</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> lastTxBlockNum</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><p>代码的前一半都是在用来证明在<code>lastTxBlockNum</code>的时候,资产 uid 归B\bob所有. 然后后一半就是提出来,Bob想把资产 uid 提走. 我的这个想法会暂时保存在合约中,等待别人来挑战.</p><h4 id="_3-4-2-等待其他人来挑战我" tabindex="-1">3.4.2 等待其他人来挑战我 <a class="header-anchor" href="#_3-4-2-等待其他人来挑战我" aria-label="Permalink to &quot;3.4.2 等待其他人来挑战我&quot;">​</a></h4><p>有了以上信息, 就可以证明在 N 块时,这笔资产归Bob所用.但是这肯定不够,无法证明现在资产仍然属于Bob,也无法证明Alice 没有在 M 块以后再给别人. 更加不能证明在 M 块的时候 Alice 真的是 uid 的拥有者? 这些问题,\b看起来很难回答,其实思路也很简单. 这个思路和\b雷电网络中解决问题的办法是一样的, 让这笔资产的利益攸关者站出来举证. 比如: 如果 Carol能够举证这笔资产Bob 后来又转移给了 Carol, 那么实际上 Bob 就是在双花. 具体的挑战以及迎战代码比较复杂,但是这也是 Plasma Cash 的核心安全性所在.如果没有这些,所有的参与者都将无法保证自己的权益.</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//challengeExit 挑战资产uid 其实不属于 Bob</span></span>
<span class="line"><span style="color:#A6ACCD;">  /** @dev Challenges a exit.</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param uid Unique identifier of a deposit.</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param challengeTx Transaction that disputes an exit.</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param proof Proof of inclusion of the transaction in a Smart Plasma block.</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param challengeBlockNum The number of the block in which the transaction is included.</span></span>
<span class="line"><span style="color:#A6ACCD;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    function challengeExit(</span></span>
<span class="line"><span style="color:#A6ACCD;">        uint256 uid,</span></span>
<span class="line"><span style="color:#A6ACCD;">        bytes challengeTx,</span></span>
<span class="line"><span style="color:#A6ACCD;">        bytes proof,</span></span>
<span class="line"><span style="color:#A6ACCD;">        uint256 challengeBlockNum</span></span>
<span class="line"><span style="color:#A6ACCD;">    )</span></span>
<span class="line"><span style="color:#A6ACCD;">        public</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#A6ACCD;">        require(exits[uid].state == 2);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        Transaction.Tx memory exitDecodedTx = (exits[uid].exitTx).createTx();</span></span>
<span class="line"><span style="color:#A6ACCD;">        Transaction.Tx memory beforeExitDecodedTx = (exits[uid].txBeforeExitTx).createTx();</span></span>
<span class="line"><span style="color:#A6ACCD;">        Transaction.Tx memory challengeDecodedTx = challengeTx.createTx();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        require(exitDecodedTx.uid == challengeDecodedTx.uid);</span></span>
<span class="line"><span style="color:#A6ACCD;">        require(exitDecodedTx.amount == challengeDecodedTx.amount);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        bytes32 txHash = challengeDecodedTx.hash;</span></span>
<span class="line"><span style="color:#A6ACCD;">        bytes32 blockRoot = childChain[challengeBlockNum];</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        require(txHash.verifyProof(uid, blockRoot, proof));</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        // test challenge #1 &amp; test challenge #2 最后一笔交易后面又进行了其他交易, Bob 在进行双花</span></span>
<span class="line"><span style="color:#A6ACCD;">        if (exitDecodedTx.newOwner == challengeDecodedTx.signer &amp;&amp;</span></span>
<span class="line"><span style="color:#A6ACCD;">        exitDecodedTx.nonce &lt; challengeDecodedTx.nonce) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            delete exits[uid];</span></span>
<span class="line"><span style="color:#A6ACCD;">            return;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        // test challenge #3, 双花了,  Alice 给了两个人,并且\b挑战者 Carol的BlockNumer 更小,也就是发生的更早.</span></span>
<span class="line"><span style="color:#A6ACCD;">        if (challengeBlockNum &lt; exits[uid].exitTxBlkNum &amp;&amp;</span></span>
<span class="line"><span style="color:#A6ACCD;">            (beforeExitDecodedTx.newOwner == challengeDecodedTx.signer &amp;&amp;</span></span>
<span class="line"><span style="color:#A6ACCD;">            challengeDecodedTx.nonce &gt; beforeExitDecodedTx.nonce)) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            delete exits[uid];</span></span>
<span class="line"><span style="color:#A6ACCD;">            return;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        // test challenge #4   在 M块之前,还有一笔交易,Alice 需要证明自己在 M 块确实拥有 uid</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 这个更多的是防止这种情况 The operator can even start a withdrawal from an output created by an invalid transaction.</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 也就是 Operator 无中生有产生了一个 Tx, 然后花费此 Tx</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 而这实际上会伤害到 uid 真正持有人的利益,他一定会站出来说明此事</span></span>
<span class="line"><span style="color:#A6ACCD;">        if (challengeBlockNum &lt; exits[uid].txBeforeExitTxBlkNum ) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            exits[uid].state = 1;</span></span>
<span class="line"><span style="color:#A6ACCD;">            addChallenge(uid, challengeTx, challengeBlockNum);</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        require(exits[uid].state == 1);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        ChallengeExit(uid);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">/*</span></span>
<span class="line"><span style="color:#A6ACCD;">这个内容,我们显然没有,如何解决呢  plasma mvp</span></span>
<span class="line"><span style="color:#A6ACCD;">Confirmation Signatures</span></span>
<span class="line"><span style="color:#A6ACCD;">Now what happens if a transaction gets included after the bad transaction? This can totally happen if a user makes a transaction, the transaction is sent to the operator, and the operator puts an invalid transaction before the user’s valid transaction. Users could try to exit from the inputs to the transaction, but that exit could be challenged by revealing the signed spend.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">We deal with this scenario by requiring that transactions are invalid until they’re signed twice. Whenever a user makes a transaction, they’ll sign a first signature to have that transaction included in a block. Then, once the transaction is included in a valid block, the user will sign a second signature, called a confirmation signature. Users correctly following this rule will never sign a confirmation signature unless they know that their transaction was included in a valid block.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">We add an extra rule that exit challenges also have to provide the confirmation signature. Now, if the operator includes a user’s transaction after their invalid transaction, the user simply won’t sign a confirmation signature. A transaction included after an invalid transaction won’t have a confirmation signature, and therefore won’t be valid. Every correctly behaving user can therefore get their funds back.</span></span>
<span class="line"><span style="color:#A6ACCD;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;">//Bob应战,再次举证,实际上这个过程就是要不断的追加证据,将所有的交易连起来,最终证明 Alice 在 M块确实拥有 uid</span></span>
<span class="line"><span style="color:#A6ACCD;"> /** @dev Answers a challenge exit.</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param uid Unique identifier of a deposit.</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param challengeTx Transaction that disputes an exit.</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param respondTx Transaction that answers to a dispute transaction.</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param proof Proof of inclusion of the respond transaction in a Smart Plasma block.</span></span>
<span class="line"><span style="color:#A6ACCD;">     *  @param blockNum The number of the block in which the respond transaction is included.</span></span>
<span class="line"><span style="color:#A6ACCD;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    function respondChallengeExit(</span></span>
<span class="line"><span style="color:#A6ACCD;">        uint256 uid,</span></span>
<span class="line"><span style="color:#A6ACCD;">        bytes challengeTx,</span></span>
<span class="line"><span style="color:#A6ACCD;">        bytes respondTx,</span></span>
<span class="line"><span style="color:#A6ACCD;">        bytes proof,</span></span>
<span class="line"><span style="color:#A6ACCD;">        uint blockNum</span></span>
<span class="line"><span style="color:#A6ACCD;">    )</span></span>
<span class="line"><span style="color:#A6ACCD;">        public</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#A6ACCD;">        require(challengeExists(uid, challengeTx));</span></span>
<span class="line"><span style="color:#A6ACCD;">        require(exits[uid].state == 1);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        Transaction.Tx memory challengeDecodedTx = challengeTx.createTx();</span></span>
<span class="line"><span style="color:#A6ACCD;">        Transaction.Tx memory respondDecodedTx = respondTx.createTx();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        require(challengeDecodedTx.uid == respondDecodedTx.uid);</span></span>
<span class="line"><span style="color:#A6ACCD;">        require(challengeDecodedTx.amount == respondDecodedTx.amount);</span></span>
<span class="line"><span style="color:#A6ACCD;">        require(challengeDecodedTx.newOwner == respondDecodedTx.signer);</span></span>
<span class="line"><span style="color:#A6ACCD;">        require(challengeDecodedTx.nonce.add(uint256(1)) == respondDecodedTx.nonce);</span></span>
<span class="line"><span style="color:#A6ACCD;">        require(blockNum &lt; exits[uid].txBeforeExitTxBlkNum);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        bytes32 txHash = respondDecodedTx.hash;</span></span>
<span class="line"><span style="color:#A6ACCD;">        bytes32 blockRoot = childChain[blockNum];</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        require(txHash.verifyProof(uid, blockRoot, proof));</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        removeChallenge(uid, challengeTx);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        if (challengesLength(uid) == 0) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            exits[uid].state = 2;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        RespondChallengeExit(uid);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br></div></div><h4 id="_3-4-3-挑战期过了-bob-拿回资产-uid" tabindex="-1">3.4.3 挑战期过了, Bob 拿回资产 uid <a class="header-anchor" href="#_3-4-3-挑战期过了-bob-拿回资产-uid" aria-label="Permalink to &quot;3.4.3 挑战期过了, Bob 拿回资产 uid&quot;">​</a></h4><p>挑战期过后,Bob 在Mediator.sol 中提出将资产退回到以太坊中</p><div class="language-solidity line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/** </span><span style="color:#C792EA;font-style:italic;">@dev</span><span style="color:#676E95;font-style:italic;"> withdraws deposit from Smart Plasma.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">prevTx</span><span style="color:#676E95;font-style:italic;"> Penultimate deposit transaction.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">prevTxProof</span><span style="color:#676E95;font-style:italic;"> Proof of inclusion of a penultimate transaction in a Smart Plasma block.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">prevTxBlkNum</span><span style="color:#676E95;font-style:italic;"> The number of the block in which the penultimate transaction is included.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">txRaw</span><span style="color:#676E95;font-style:italic;"> lastTx Last deposit transaction.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">txProof</span><span style="color:#676E95;font-style:italic;"> Proof of inclusion of a last transaction in a Smart Plasma block.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">txBlkNum</span><span style="color:#676E95;font-style:italic;"> The number of the block in which the last transaction is included.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">withdraw</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">prevTx</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">prevTxProof</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">prevTxBlkNum</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">txRaw</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">txProof</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">txBlkNum</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> uid </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> rootChain</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">finishExit</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            msg.sender</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            prevTx</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            prevTxProof</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            prevTxBlkNum</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            txRaw</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            txProof</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            txBlkNum</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        entry invoice </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cash</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        Token token </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Token</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">invoice</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">currency</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        token</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">transfer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg.sender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> invoice</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">amount</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/// 真正的资产转移</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">delete</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cash</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">]);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>RootChain 再次验证</p><div class="language-solidity line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/** </span><span style="color:#C792EA;font-style:italic;">@dev</span><span style="color:#676E95;font-style:italic;"> Finishes the procedure for withdrawal of the deposit from the system.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *       Can only call the owner. Usually the owner is the mediator contract.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">account</span><span style="color:#676E95;font-style:italic;"> Account that initialized the deposit withdrawal.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTx</span><span style="color:#676E95;font-style:italic;"> Penultimate deposit transaction.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTxProof</span><span style="color:#676E95;font-style:italic;"> Proof of inclusion of a penultimate transaction in a Smart Plasma block.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTxBlockNum</span><span style="color:#676E95;font-style:italic;"> The number of the block in which the penultimate transaction is included.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTx</span><span style="color:#676E95;font-style:italic;"> Last deposit transaction.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTxProof</span><span style="color:#676E95;font-style:italic;"> Proof of inclusion of a last transaction in a Smart Plasma block.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     *  </span><span style="color:#C792EA;font-style:italic;">@param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTxBlockNum</span><span style="color:#676E95;font-style:italic;"> The number of the block in which the last transaction is included.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">finishExit</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">address</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">account</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTx</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTxProof</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint256</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">previousTxBlockNum</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTx</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTxProof</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">uint256</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">lastTxBlockNum</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">onlyOwner</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">returns</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">bytes32</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Transaction</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx </span><span style="color:#C792EA;">memory</span><span style="color:#A6ACCD;"> prevDecodedTx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> previousTx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createTx</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        Transaction</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx </span><span style="color:#C792EA;">memory</span><span style="color:#A6ACCD;"> decodedTx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> lastTx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createTx</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">previousTxBlockNum </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prevBlock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">amount </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">amount</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">newOwner </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">signer</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">account </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">newOwner</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> prevTxHash </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> prevBlockRoot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> childChain</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">previousTxBlockNum</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> txHash </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#A6ACCD;"> blockRoot </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> childChain</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">lastTxBlockNum</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            prevTxHash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">verifyProof</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">                prevDecodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                prevBlockRoot</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                previousTxProof</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            txHash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">verifyProof</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">                decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                blockRoot</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                lastTxProof</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">exits</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">exitTime </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> now</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//挑战期过了</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">exits</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">state </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//并且没有人挑战或者我都给出了合适的证据</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">require</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">challengesLength</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        exits</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">state </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">delete</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">wallet</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">bytes32</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">)]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">FinishExit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bytes32</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">decodedTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uid</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><h2 id="_4-plasma-cash-中的退出示例" tabindex="-1">4. Plasma Cash 中的退出示例 <a class="header-anchor" href="#_4-plasma-cash-中的退出示例" aria-label="Permalink to &quot;4. Plasma Cash 中的退出示例&quot;">​</a></h2><pre class="mermaid loading">sequenceDiagram
participant o as operator
participant u1 as alice
participant u2 as bob
participant u3 as carol
participant u4 as david
u1-&gt;&gt;rootchain: deposit asset to RootChain, get unique id asset1
o-&gt;&gt;rootchain: 生成 NewBlock 3, 记录此笔资产
u1-&gt;&gt;u2: transfer asset1 to bob
o-&gt;&gt;rootchain: 生成 NewBlock 7, 记录此笔交易
u1-&gt;&gt;u3: transfer asset1 to carol
o-&gt;&gt;rootchain: 生成 Newblock 11 记录此笔交易
u3-&gt;&gt;rootchain: 我要提现asset1到主链,提供asset1来自 alice,由 alice签名,发生在 11
u2-&gt;&gt;rootchain:  提出挑战,asset1应该属于我,提供 asset1 来自 alice,由 aice签名,发生在 7,rootchain 判定bob证据有效,拒绝carol提现
u2-&gt;&gt;u4: transfer asset1 to devid
o-&gt;&gt;rootchain:生成 Newblock 27,  记录此笔交易
u4-&gt;&gt;rootchain:提现 asset1,来自 bob,有 bob的签名,发生在 27
loop david wait for challenge
u4-&gt;&gt;u4:等待挑战期两周时间
end
u4-&gt;&gt; rootchain: withdraw,提现,将asset1从rootchain 转走</pre><p>@ import</p><h2 id="_5-其他问题" tabindex="-1">5. 其他问题 <a class="header-anchor" href="#_5-其他问题" aria-label="Permalink to &quot;5. 其他问题&quot;">​</a></h2><ul><li><ol><li>为什么 Plasma Cash 中的资产是不可分割的? <br> 进入 rootchain 的资产类似于比特币的 UTXO 模型,但是是不可分割的,这个可以通过交易验证时每次都要求 amount 不变可以得出.</li></ol></li><li><ol start="2"><li>operator 的作用是什么? <br> operator 负责将子链中的交易证据(默克尔树)提交证明到以太坊主链中.</li></ol></li><li><ol start="3"><li>operator 是否必须可信任的? <br> 是的. 虽然 operator 不能将他人资产随意转移,但是却可以阻止他人资产转移.也就是说无法从 Plasma 子链中退回到以太坊中. 当然这部分是可以改进,降低 operator 作恶带来的风险.</li></ol></li><li><ol start="4"><li>operator 是否可以是一个合约呢? <br> 是的. 如果 operator 是一个 Pos 共识合约,那么可以降低问题3中的风险</li></ol></li></ul>`,45),o=[e];function t(r,c,i,y,D,C){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{F as __pageData,b as default};
