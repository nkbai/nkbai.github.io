import{_ as n,c as l,o as t,x as s,a,N as e}from"./chunks/framework.3a9190c5.js";const B=JSON.parse('{"title":"一篇文章搞懂VRF","description":"","frontmatter":{"title":"一篇文章搞懂VRF","date":"2019-06-16T03:57:03.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/block_chain_core/vrf.md"}'),p={name:"blockchain/block_chain_core/vrf.md"},r=s("ul",null,[s("li",null,[s("a",{href:"#一篇文章搞懂vrf"},"一篇文章搞懂VRF")])],-1),i=s("ul",null,[s("li",null,[s("a",{href:"#一种错误的实现"},"一种错误的实现"),s("ul",null,[s("li",null,[s("a",{href:"#椭圆曲线签名算法原理"},"椭圆曲线签名算法原理"),s("ul",null,[s("li",null,[s("a",{href:"#那么椭圆曲线的签名可否当做vrf呢"},"那么椭圆曲线的签名可否当做VRF呢?")])])]),s("li",null,[s("a",{href:"#比特币和以太坊中的数字签名可以做vrf么"},"比特币和以太坊中的数字签名可以做VRF么?")])])]),s("li",null,[s("a",{href:"#一种正确的实现"},"一种正确的实现"),s("ul",null,[s("li",null,[s("a",{href:"#公式推导"},"公式推导"),s("ul",null,[s("li",null,[s("a",{href:"#h1把任意信息映射到曲线上的点"},"H1:把任意信息映射到曲线上的点")]),s("li",null,[s("a",{href:"#h2-映射任意信息为1q"},"H2: 映射任意信息为(1,q)")]),s("li",null,[s("a",{href:"#计算随机数"},"计算随机数")]),s("li",null,[s("a",{href:"#随机数的proof"},"随机数的proof")]),s("li",null,[s("a",{href:"#如何验证"},"如何验证")]),s("li",null,[s("a",{href:"#生成gr-hr"},[a("生成"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"g"),s("mi",null,"r")])]),s("annotation",{encoding:"application/x-tex"},"g^r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.664392em"}}),s("span",{class:"strut bottom",style:{height:"0.858832em","vertical-align":"-0.19444em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a(" , "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"h"),s("mi",null,"r")])]),s("annotation",{encoding:"application/x-tex"},"h^r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.69444em"}}),s("span",{class:"strut bottom",style:{height:"0.69444em","vertical-align":"0em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])])])])])])])]),s("li",null,[s("a",{href:"#在椭圆曲线上的实现"},"在椭圆曲线上的实现"),s("ul",null,[s("li",null,[s("a",{href:"#接口原型"},"接口原型")]),s("li",null,[s("a",{href:"#使用方法"},"使用方法")])])]),s("li",null,[s("a",{href:"#推荐实现"},"推荐实现"),s("ul",null,[s("li",null,[s("a",{href:"#1-谷歌的keytransparency项目"},"1. 谷歌的keytransparency项目")]),s("li",null,[s("a",{href:"#2-spectrum上使用的vrf"},"2. Spectrum上使用的VRF")]),s("li",null,[s("a",{href:"#3-witnet上的vrf"},"3. witnet上的VRF")])])])],-1),o=s("p",null,"什么是VRF,VRF全称是verifiable random function ,也就是可验证随机数. 他有两个特性, 他产生的是随机数,第二还是可验证的.",-1),m=s("p",null,[a("我直接引用"),s("a",{href:"https://en.wikipedia.org/wiki/Verifiable_random_function",target:"_blank",rel:"noreferrer"},"维基百科上的VRF"),a(",就是说针对一个输入x,一个私钥SK的拥有者可以计算"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"y"),s("mo",null,"="),s("mi",null,"F"),s("mi",null,"S"),s("mi",null,"K"),s("mo",null,"("),s("mi",null,"x"),s("mo",null,")")]),s("annotation",{encoding:"application/x-tex"},"y=FSK(x)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.75em"}}),s("span",{class:"strut bottom",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mrel"},"="),s("span",{class:"mord mathit",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathit",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit"},"x"),s("span",{class:"mclose"},")")])])]),a("和证明"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"P"),s("mi",null,"S"),s("mi",null,"K"),s("mo",null,"("),s("mi",null,"x"),s("mo",null,")")]),s("annotation",{encoding:"application/x-tex"},"PSK(x)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.75em"}}),s("span",{class:"strut bottom",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.13889em"}},"P"),s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathit",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit"},"x"),s("span",{class:"mclose"},")")])])]),a(". 依据证明(proof)和SK对应的公钥PK("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"P"),s("mi",null,"K"),s("mo",null,"="),s("msup",null,[s("mi",null,"g"),s("mrow",null,[s("mi",null,"S"),s("mi",null,"K")])])]),s("annotation",{encoding:"application/x-tex"},"PK=g^{SK}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.8413309999999999em"}}),s("span",{class:"strut bottom",style:{height:"1.035771em","vertical-align":"-0.19444em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.13889em"}},"P"),s("span",{class:"mord mathit",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathit",style:{"margin-right":"0.07153em"}},"K")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a("),任何人都可以验证y是被正确计算的,但是不能知道SK是什么.")],-1),c=s("p",null,"原文中提到了使用双线性映射来做这个事情,当然VRF可以有很多种不同的实现,只要满足上面提出的条件即可.一个是随机数,另一个是可验证.",-1),u=s("p",null,"简单解释一下:",-1),y=s("ol",null,[s("li",null,"验证人只知道x,在SK持有人没有广播之前不知道随机数是什么"),s("li",null,"SK持有人无法伪造随机数,一旦x确定,随机数也确定了. 这就是所谓的随机数(除了SK持有人之外,其他任何人事先不知道) 可验证(知道PK的任何人都知道SK生成的随机数是否合规)")],-1),h=s("h2",{id:"一种错误的实现",tabindex:"-1"},[a("一种错误的实现 "),s("a",{class:"header-anchor",href:"#一种错误的实现","aria-label":'Permalink to "一种错误的实现"'},"​")],-1),d=s("p",null,"首先我们常用的数字签名可否用作VRF呢?",-1),z=s("h3",{id:"椭圆曲线签名算法原理",tabindex:"-1"},[a("椭圆曲线签名算法原理 "),s("a",{class:"header-anchor",href:"#椭圆曲线签名算法原理","aria-label":'Permalink to "椭圆曲线签名算法原理"'},"​")],-1),f=s("p",null,[a("假设私钥为k,那么公钥"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"K"),s("mo",null,"="),s("mi",null,"k"),s("mi",null,"G")]),s("annotation",{encoding:"application/x-tex"},"K=kG")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.69444em"}}),s("span",{class:"strut bottom",style:{height:"0.69444em","vertical-align":"0em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mrel"},"="),s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathit"},"G")])])]),a(",其中G为G点(就是椭圆曲线的公共参数,可以忽略). 签名的过程如下:")],-1),g=s("ol",null,[s("li",null,[a("选择随机数r,计算"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"P"),s("mo",null,"="),s("mi",null,"r"),s("mi",null,"G")]),s("annotation",{encoding:"application/x-tex"},"P=rG")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.68333em"}}),s("span",{class:"strut bottom",style:{height:"0.68333em","vertical-align":"0em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.13889em"}},"P"),s("span",{class:"mrel"},"="),s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathit"},"G")])])]),a(",P实际上就是曲线上的一个点")]),s("li",null,[a("计算"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"m"),s("mo",null,"+"),s("mi",null,"k"),s("mi",null,"x")]),s("mi",null,"r")])]),s("annotation",{encoding:"application/x-tex"},"s=\\frac {m+kx} r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.8801079999999999em"}}),s("span",{class:"strut bottom",style:{height:"1.2251079999999999em","vertical-align":"-0.345em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit"},"s"),s("span",{class:"mrel"},"="),s("span",{class:"mord reset-textstyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.345em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r")])]),s("span",{style:{top:"-0.22999999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.394em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathit"},"m"),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathit"},"x")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})])])])]),a(",其中m就是公共信息,比如是一个以太坊交易的Hash值. 这里的x是P的x坐标.")]),s("li",null,"将消息m和签名{rG,s}发送给接收方 接收方在事先知道公钥K的情况下,就很容易验证签名和m是否是对应关系. 验证签名的过程: 计算$\\frac {mG} s + \\frac {xK} s $,然后与rG比较,如果相等说明是对应关系.其中x是rG这个点的x坐标")],-1),x=s("p",null,"为什么这样可以呢,来看一下简单的推导过程:",-1),D=s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mfrac",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"G")]),s("mi",null,"s")]),s("mo",null,"+"),s("mfrac",null,[s("mrow",null,[s("mi",null,"x"),s("mi",null,"K")]),s("mi",null,"s")]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"G")]),s("mi",null,"s")]),s("mo",null,"+"),s("mfrac",null,[s("mrow",null,[s("mi",null,"x"),s("mo",null,"("),s("mi",null,"k"),s("mi",null,"G"),s("mo",null,")")]),s("mi",null,"s")]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mo",null,"("),s("mi",null,"m"),s("mo",null,"+"),s("mi",null,"x"),s("mi",null,"k"),s("mo",null,")"),s("mi",null,"G")]),s("mi",null,"s")]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"r"),s("mo",null,"("),s("mi",null,"m"),s("mo",null,"+"),s("mi",null,"x"),s("mi",null,"k"),s("mo",null,")"),s("mi",null,"G")]),s("mrow",null,[s("mi",null,"m"),s("mo",null,"+"),s("mi",null,"k"),s("mi",null,"x")])]),s("mo",null,"="),s("mi",null,"r"),s("mi",null,"G")]),s("annotation",{encoding:"application/x-tex"}," \\frac {mG} s + \\frac {xK} s = \\frac {mG} s + \\frac {x(kG)} s = \\frac {(m+xk)G} s = \\frac {r(m+xk)G} {m+kx} = rG ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"1.427em"}}),s("span",{class:"strut bottom",style:{height:"2.19633em","vertical-align":"-0.7693300000000001em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord reset-textstyle displaystyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.686em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle cramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{style:{top:"-0.22999999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.677em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped"},[s("span",{class:"mord textstyle uncramped"},[s("span",{class:"mord mathit"},"m"),s("span",{class:"mord mathit"},"G")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})]),s("span",{class:"mbin"},"+"),s("span",{class:"mord reset-textstyle displaystyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.686em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle cramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{style:{top:"-0.22999999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.677em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped"},[s("span",{class:"mord textstyle uncramped"},[s("span",{class:"mord mathit"},"x"),s("span",{class:"mord mathit",style:{"margin-right":"0.07153em"}},"K")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})]),s("span",{class:"mrel"},"="),s("span",{class:"mord reset-textstyle displaystyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.686em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle cramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{style:{top:"-0.22999999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.677em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped"},[s("span",{class:"mord textstyle uncramped"},[s("span",{class:"mord mathit"},"m"),s("span",{class:"mord mathit"},"G")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})]),s("span",{class:"mbin"},"+"),s("span",{class:"mord reset-textstyle displaystyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.686em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle cramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{style:{top:"-0.22999999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.677em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped"},[s("span",{class:"mord textstyle uncramped"},[s("span",{class:"mord mathit"},"x"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathit"},"G"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})]),s("span",{class:"mrel"},"="),s("span",{class:"mord reset-textstyle displaystyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.686em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle cramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{style:{top:"-0.22999999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.677em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped"},[s("span",{class:"mord textstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit"},"m"),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit"},"x"),s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},")"),s("span",{class:"mord mathit"},"G")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})]),s("span",{class:"mrel"},"="),s("span",{class:"mord reset-textstyle displaystyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.686em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle cramped"},[s("span",{class:"mord textstyle cramped"},[s("span",{class:"mord mathit"},"m"),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathit"},"x")])])]),s("span",{style:{top:"-0.22999999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.677em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped"},[s("span",{class:"mord textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit"},"m"),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit"},"x"),s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},")"),s("span",{class:"mord mathit"},"G")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})]),s("span",{class:"mrel"},"="),s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathit"},"G")])])])])],-1),F=s("p",null,[s("strong",null,[a("注意: "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"m"),s("mo",null,"+"),s("mi",null,"k"),s("mi",null,"x")]),s("mi",null,"r")])]),s("annotation",{encoding:"application/x-tex"},"s=\\frac {m+kx} r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.8801079999999999em"}}),s("span",{class:"strut bottom",style:{height:"1.2251079999999999em","vertical-align":"-0.345em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit"},"s"),s("span",{class:"mrel"},"="),s("span",{class:"mord reset-textstyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.345em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r")])]),s("span",{style:{top:"-0.22999999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.394em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathit"},"m"),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathit"},"x")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})])])])])])],-1),b=s("h4",{id:"那么椭圆曲线的签名可否当做vrf呢",tabindex:"-1"},[a("那么椭圆曲线的签名可否当做VRF呢? "),s("a",{class:"header-anchor",href:"#那么椭圆曲线的签名可否当做vrf呢","aria-label":'Permalink to "那么椭圆曲线的签名可否当做VRF呢?"'},"​")],-1),A=s("p",null,[a("首先第一点,固定m以后,如果其他人不知道签名人对应的私钥是什么,那么他们确实不知道产生的随机数会是什么样子. 同时验证人如果知道私钥对应的公钥,也很容易确定私钥是否是对m签的名. 所以看起来签名是可以用作VRF的. 但是问题出在签名过程中的随机数r,因为r是随机的,所以每次签名的结果{rG,s}完全是随机的,那么这就给随机数生成方选择随机数的机会. 也就是说一开始定义的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"y"),s("mo",null,"="),s("mi",null,"F"),s("mi",null,"S"),s("mi",null,"K"),s("mo",null,"("),s("mi",null,"x"),s("mo",null,")")]),s("annotation",{encoding:"application/x-tex"},"y=FSK(x)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.75em"}}),s("span",{class:"strut bottom",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mrel"},"="),s("span",{class:"mord mathit",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathit",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit"},"x"),s("span",{class:"mclose"},")")])])]),a(",这里的x到y的映射是不固定的,这不符合函数的定义.")],-1),C=e('<h3 id="比特币和以太坊中的数字签名可以做vrf么" tabindex="-1">比特币和以太坊中的数字签名可以做VRF么? <a class="header-anchor" href="#比特币和以太坊中的数字签名可以做vrf么" aria-label="Permalink to &quot;比特币和以太坊中的数字签名可以做VRF么?&quot;">​</a></h3><p>这个问题答案肯定是和前一个一样的,不可以. 但是为什么还有此一问呢,那是因为很多人观察到的签名和我刚刚讲的并不一致. 什么意思呢? 就是对于相同的内容,如果私钥相同,那么无论你尝试签名多少次,其结果都是一样的,和我们刚刚讲的原理似乎并不一致. 感兴趣的小伙伴可以自行编码验证. 这又是为什么呢? 那是因为<a href="https://tools.ietf.org/html/rfc6979" target="_blank" rel="noreferrer">RFC6979</a>在作怪,签名结果之所以每次都不一样,就是因为随机数r,如果r固定下来,那么自然签名就不会变了.这实际上就是RFC6979在做的事,他给出了一个固定计算r的方法. 至于为什么这么复杂的计算r,为什么不固定采用一个数字比如3,这主要是考虑到可能泄露私钥的安全性问题. 这些看起来没什么问题,关键是验证者无法验证私钥拥有者有没有按照RFC6979的规则来生成签名,这就导致了私钥拥有者可以选择随机数</p><h2 id="一种正确的实现" tabindex="-1">一种正确的实现 <a class="header-anchor" href="#一种正确的实现" aria-label="Permalink to &quot;一种正确的实现&quot;">​</a></h2><p>前文给出了一个错误的思路,关键就在于他给出的随机数是受私钥持有者控制的,如果能把这个因素去掉,是否就可以行了呢?</p><h3 id="公式推导" tabindex="-1">公式推导 <a class="header-anchor" href="#公式推导" aria-label="Permalink to &quot;公式推导&quot;">​</a></h3><h4 id="h1-把任意信息映射到曲线上的点" tabindex="-1">H1:把任意信息映射到曲线上的点 <a class="header-anchor" href="#h1-把任意信息映射到曲线上的点" aria-label="Permalink to &quot;H1:把任意信息映射到曲线上的点&quot;">​</a></h4><p>思路也很简单,将Hash(m)(<strong>注意是256位hash</strong>)作为曲线上的X,然后带入上述椭圆曲线公式,求出相应的Y即可.</p><h4 id="h2-映射任意信息为-1-q" tabindex="-1">H2: 映射任意信息为(1,q) <a class="header-anchor" href="#h2-映射任意信息为-1-q" aria-label="Permalink to &quot;H2: 映射任意信息为(1,q)&quot;">​</a></h4><p>这个也很简答,就是Hash(...) mod q即可.</p><h4 id="计算随机数" tabindex="-1">计算随机数 <a class="header-anchor" href="#计算随机数" aria-label="Permalink to &quot;计算随机数&quot;">​</a></h4> h=H_1(m) \\\\ v=VRF_k(m)=h^k ',11),k=s("p",null,[a("这里的v是完全确定的,就是"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"h"),s("mi",null,"k")])]),s("annotation",{encoding:"application/x-tex"},"h^k")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.849108em"}}),s("span",{class:"strut bottom",style:{height:"0.849108em","vertical-align":"0em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a(",满足了函数的确定性,但是怎么可验证呢?")],-1),_=e('<h4 id="随机数的proof" tabindex="-1">随机数的proof <a class="header-anchor" href="#随机数的proof" aria-label="Permalink to &quot;随机数的proof&quot;">​</a></h4><p>随机生成一个r,然后计算:</p> s=H_2(g,h,G,v,g^r,h^r) \\\\ t=r-sk (mod p) <p>然后把(v,s,t)一起打包发给验证方,</p><h4 id="如何验证" tabindex="-1">如何验证 <a class="header-anchor" href="#如何验证" aria-label="Permalink to &quot;如何验证&quot;">​</a></h4><p>上述信息中已知的有:</p><ol><li>g: 曲线公共参数</li><li>h: H1(m) ,因为m已知,Hash方法也是已知</li><li>G: 公钥</li><li>v: 随机数,验证方明文收到</li><li>t: 验证法明文收到</li><li>s: 验证法明文收到</li></ol>',7),v=s("h4",{id:"生成",tabindex:"-1"},[a("生成"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"g"),s("mi",null,"r")])]),s("annotation",{encoding:"application/x-tex"},"g^r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.664392em"}}),s("span",{class:"strut bottom",style:{height:"0.858832em","vertical-align":"-0.19444em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a(" , "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"h"),s("mi",null,"r")])]),s("annotation",{encoding:"application/x-tex"},"h^r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.69444em"}}),s("span",{class:"strut bottom",style:{height:"0.69444em","vertical-align":"0em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a(),s("a",{class:"header-anchor",href:"#生成","aria-label":'Permalink to "生成$g^r$ , $h^r$"'},"​")],-1),P=s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"g"),s("mi",null,"r")]),s("mo",null,"="),s("msup",null,[s("mi",null,"g"),s("mrow",null,[s("mi",null,"t"),s("mo",null,"+"),s("mi",null,"k"),s("mi",null,"s")])]),s("mo",null,"="),s("msup",null,[s("mi",null,"g"),s("mi",null,"t")]),s("mo",null,"⋅"),s("msup",null,[s("mi",null,"g"),s("mrow",null,[s("mi",null,"k"),s("mi",null,"s")])]),s("mo",null,"="),s("msup",null,[s("mi",null,"g"),s("mi",null,"t")]),s("mo",null,"⋅"),s("msup",null,[s("mrow",null,[s("msup",null,[s("mi",null,"g"),s("mi",null,"k")])]),s("mi",null,"s")]),s("mo",null,"="),s("msup",null,[s("mi",null,"g"),s("mi",null,"t")]),s("mo",null,"⋅"),s("msup",null,[s("mi",null,"G"),s("mi",null,"s")])]),s("annotation",{encoding:"application/x-tex"},"g^r =g^{t+ks} =g^t \\cdot g^{ks} =g^t \\cdot {g^k}^s =g^t \\cdot G^s ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.899108em"}}),s("span",{class:"strut bottom",style:{height:"1.093548em","vertical-align":"-0.19444em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.41300000000000003em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t"),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathit"},"s")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathit"},"s")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])]),s("span",{class:"vlist"},[s("span",{style:{top:"-0.5131079999999999em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"G"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])])])],-1),w=s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"h"),s("mi",null,"r")]),s("mo",null,"="),s("msup",null,[s("mi",null,"h"),s("mrow",null,[s("mi",null,"t"),s("mo",null,"+"),s("mi",null,"k"),s("mi",null,"s")])]),s("mo",null,"="),s("msup",null,[s("mi",null,"h"),s("mi",null,"t")]),s("mo",null,"⋅"),s("msup",null,[s("mi",null,"h"),s("mrow",null,[s("mi",null,"k"),s("mi",null,"s")])]),s("mo",null,"="),s("msup",null,[s("mi",null,"h"),s("mi",null,"t")]),s("mo",null,"⋅"),s("msup",null,[s("mrow",null,[s("msup",null,[s("mi",null,"h"),s("mi",null,"k")])]),s("mi",null,"s")]),s("mo",null,"="),s("msup",null,[s("mi",null,"h"),s("mi",null,"t")]),s("mo",null,"⋅"),s("msup",null,[s("mi",null,"v"),s("mi",null,"s")])]),s("annotation",{encoding:"application/x-tex"},"h^r =h^{t+ks} =h^t \\cdot h^{ks} =h^t \\cdot {h^k}^s =h^t \\cdot v^s ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.899108em"}}),s("span",{class:"strut bottom",style:{height:"0.899108em","vertical-align":"0em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"r")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.41300000000000003em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t"),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathit"},"s")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathit"},"s")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03148em"}},"k")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])]),s("span",{class:"vlist"},[s("span",{style:{top:"-0.5131079999999999em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])])])],-1),G=s("p",null,[a("虽然验证人不知道k,也不知道r,但是知道h,g,G,v,s,t所以他可以计算出"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mn",null,"2"),s("mo",null,"="),s("msub",null,[s("mi",null,"H"),s("mn",null,"2")]),s("mo",null,"("),s("mi",null,"g"),s("mo",{separator:"true"},","),s("mi",null,"h"),s("mo",{separator:"true"},","),s("mi",null,"G"),s("mo",{separator:"true"},","),s("mi",null,"v"),s("mo",{separator:"true"},","),s("msup",null,[s("mi",null,"g"),s("mi",null,"t")]),s("mo",null,"⋅"),s("msup",null,[s("mi",null,"G"),s("mi",null,"s")]),s("mo",{separator:"true"},","),s("msup",null,[s("mi",null,"h"),s("mi",null,"t")]),s("mo",null,"⋅"),s("msup",null,[s("mi",null,"v"),s("mi",null,"s")]),s("mo",null,")")]),s("annotation",{encoding:"application/x-tex"},"s2=H_2(g , h ,G , v , g^t \\cdot G^s , h^t \\cdot v^s)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.7935559999999999em"}}),s("span",{class:"strut bottom",style:{height:"1.043556em","vertical-align":"-0.25em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit"},"s"),s("span",{class:"mord mathrm"},"2"),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.08125em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathrm"},"2")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mpunct"},","),s("span",{class:"mord mathit"},"h"),s("span",{class:"mpunct"},","),s("span",{class:"mord mathit"},"G"),s("span",{class:"mpunct"},","),s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mpunct"},","),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"G"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mpunct"},","),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"h"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"t")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"s")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mclose"},")")])])]),a(" . 然后验证s2是否和s相等,如果相等,那就是k持有人按照规则计算出的随机数")],-1),q=e(`<h2 id="在椭圆曲线上的实现" tabindex="-1">在椭圆曲线上的实现 <a class="header-anchor" href="#在椭圆曲线上的实现" aria-label="Permalink to &quot;在椭圆曲线上的实现&quot;">​</a></h2><p>这里专门说的是比特币和以太坊上采用椭圆曲线S256,这根曲线.</p><h3 id="接口原型" tabindex="-1">接口原型 <a class="header-anchor" href="#接口原型" aria-label="Permalink to &quot;接口原型&quot;">​</a></h3><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// A VRF is a pseudorandom function f_k from a secret key k, such that that</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// knowledge of k not only enables one to evaluate f_k at for any message m,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// but also to provide an NP-proof that the value f_k(m) is indeed correct</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// without compromising the unpredictability of f_k for any m&#39; != m.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=814584</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// PrivateKey supports evaluating the VRF function.</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PrivateKey</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Evaluate returns the output of H(f_k(m)) and its proof.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Evaluate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">index </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">32</span><span style="color:#89DDFF;">]</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> proof </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Public returns the corresponding public key.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Public</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PublicKey</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// PublicKey supports verifying output from the VRF function.</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PublicKey</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// ProofToHash verifies the NP-proof supplied by Proof and outputs Index.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">ProofToHash</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> proof </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">index </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">32</span><span style="color:#89DDFF;">]</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h3><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TestVRFForS256</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">t </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//私钥持有人</span></span>
<span class="line"><span style="color:#A6ACCD;">	key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> crypto</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GenerateKey</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	k</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">NewVRFSigner</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//验证人,只知道公钥</span></span>
<span class="line"><span style="color:#A6ACCD;">	pk</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">NewVRFVerifier</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PublicKey</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	msg </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#82AAFF;">byte</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	index</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> proof </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> k</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Evaluate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	index2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> pk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ProofToHash</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> proof</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> index2 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> index </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Error</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index not equal</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="推荐实现" tabindex="-1">推荐实现 <a class="header-anchor" href="#推荐实现" aria-label="Permalink to &quot;推荐实现&quot;">​</a></h2><h3 id="_1-谷歌的keytransparency项目" tabindex="-1">1. 谷歌的keytransparency项目 <a class="header-anchor" href="#_1-谷歌的keytransparency项目" aria-label="Permalink to &quot;1. 谷歌的keytransparency项目&quot;">​</a></h3><p><a href="https://github.com/google/keytransparency/tree/master/core/crypto/vrf" target="_blank" rel="noreferrer">google VRF</a> 注意这里面使用的曲线是P256,不是比特币和以太坊使用的S256,实现语言是go语言</p><h3 id="_2-spectrum上使用的vrf" tabindex="-1">2. Spectrum上使用的VRF <a class="header-anchor" href="#_2-spectrum上使用的vrf" aria-label="Permalink to &quot;2. Spectrum上使用的VRF&quot;">​</a></h3><p><a href="https://github.com/SmartMeshFoundation/Spectrum/tree/master/crypto/vrf" target="_blank" rel="noreferrer">Spectrum VRF</a> 这个项目是在参考项目1基础之上改进得来,他使用的是S256这根曲线,实现语言也是go语言,好处是直接可以在项目中集成.</p><h3 id="_3-witnet上的vrf" tabindex="-1">3. witnet上的VRF <a class="header-anchor" href="#_3-witnet上的vrf" aria-label="Permalink to &quot;3. witnet上的VRF&quot;">​</a></h3><p><a href="https://github.com/witnet/vrf-rs" target="_blank" rel="noreferrer">witnet VRF</a> 这个项目使用rust开发,同时支持P256,S256两根曲线.因为用rust开发,可以方便与其他语言集成,并且性能很高.</p>`,13),S=[r,i,o,m,c,u,y,h,d,z,f,g,x,D,F,b,A,C,k,_,v,P,w,G,q];function V(K,R,E,T,H,N){return t(),l("div",null,S)}const I=n(p,[["render",V]]);export{B as __pageData,I as default};
