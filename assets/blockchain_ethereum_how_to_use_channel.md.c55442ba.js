import{_ as n,c as s,o as a,a as p}from"./app.8cf0e725.js";const d='{"title":"\u5982\u4F55\u4F7F\u7528 Channel","description":"","frontmatter":{"title":"\u5982\u4F55\u4F7F\u7528 Channel","date":"2018-04-27T03:06:23.000Z","hide":false},"headers":[{"level":2,"title":"v1.0","slug":"v1-0"},{"level":2,"title":"Google 2.0","slug":"google-2-0"},{"level":2,"title":"Google 2.1","slug":"google-2-1"},{"level":2,"title":"Google 3.0 Avoid timeout","slug":"google-3-0-avoid-timeout"},{"level":2,"title":"Google 3.1","slug":"google-3-1"},{"level":2,"title":"\u5B8C\u6574\u7684 google 3.1","slug":"\u5B8C\u6574\u7684-google-3-1"}],"relativePath":"blockchain/ethereum/how_to_use_channel.md"}',t={},o=p(`<h1 id="\u5982\u4F55\u4F7F\u7528-channel" tabindex="-1">\u5982\u4F55\u4F7F\u7528 Channel <a class="header-anchor" href="#\u5982\u4F55\u4F7F\u7528-channel" aria-hidden="true">#</a></h1><p>\u4F8B\u5B50\u6765\u81EA\u4E8E<a href="https://talks.golang.org/2012/concurrency.slide" target="_blank" rel="noopener noreferrer">Concurrency is not parallelism</a></p><p>#Google Search: A fake framework</p><h2 id="v1-0" tabindex="-1">v1.0 <a class="header-anchor" href="#v1-0" aria-hidden="true">#</a></h2><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">var</span> <span class="token punctuation">(</span>
    Web <span class="token operator">=</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span>
    Image <span class="token operator">=</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">)</span>
    Video <span class="token operator">=</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span><span class="token string">&quot;video&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Search <span class="token keyword">func</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">)</span> Result

<span class="token keyword">func</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span>kind <span class="token builtin">string</span><span class="token punctuation">)</span> Search <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">)</span> Result <span class="token punctuation">{</span>
              time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span>
              <span class="token keyword">return</span> <span class="token function">Result</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s result for %q\\n&quot;</span><span class="token punctuation">,</span> kind<span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    rand<span class="token punctuation">.</span><span class="token function">Seed</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UnixNano</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    start <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    results <span class="token operator">:=</span> <span class="token function">Google</span><span class="token punctuation">(</span><span class="token string">&quot;golang&quot;</span><span class="token punctuation">)</span>
    elapsed <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>elapsed<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u5173\u952E\u51FD\u6570</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">Google</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>results <span class="token punctuation">[</span><span class="token punctuation">]</span>Result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    results <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>results<span class="token punctuation">,</span> <span class="token function">Web</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span>
    results <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>results<span class="token punctuation">,</span> <span class="token function">Image</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span>
    results <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>results<span class="token punctuation">,</span> <span class="token function">Video</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="google-2-0" tabindex="-1">Google 2.0 <a class="header-anchor" href="#google-2-0" aria-hidden="true">#</a></h2><p>\u6BCF\u4E2A search, \u72EC\u7ACB\u5E76\u53D1. No locks. No condition variables. No callbacks.</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">Google</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>results <span class="token punctuation">[</span><span class="token punctuation">]</span>Result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">Web</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">Image</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">Video</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        result <span class="token operator">:=</span> <span class="token operator">&lt;-</span>c
        results <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>results<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="google-2-1" tabindex="-1">Google 2.1 <a class="header-anchor" href="#google-2-1" aria-hidden="true">#</a></h2><p>\u5982\u679C\u67D0\u4E2A\u670D\u52A1\u6BD4\u8F83\u6162,\u600E\u4E48\u529E? No locks. No condition variables. No callbacks.</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">Google</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>results <span class="token punctuation">[</span><span class="token punctuation">]</span>Result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">Web</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">Image</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">Video</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>

    timeout <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">After</span><span class="token punctuation">(</span><span class="token number">80</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">select</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> result <span class="token operator">:=</span> <span class="token operator">&lt;-</span>c<span class="token punctuation">:</span>
            results <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>results<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token operator">&lt;-</span>timeout<span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;timed out&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="google-3-0-avoid-timeout" tabindex="-1">Google 3.0 Avoid timeout <a class="header-anchor" href="#google-3-0-avoid-timeout" aria-hidden="true">#</a></h2><p>No locks. No condition variables. No callbacks.</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">First</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">,</span> replicas <span class="token operator">...</span>Search<span class="token punctuation">)</span> Result <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">)</span>
    searchReplica <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> replicas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> replicas <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">searchReplica</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;-</span>c
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">Google</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>results <span class="token punctuation">[</span><span class="token punctuation">]</span>Result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">First</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> Web1<span class="token punctuation">,</span> Web2<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">First</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> Image1<span class="token punctuation">,</span> Image2<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">First</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> Video1<span class="token punctuation">,</span> Video2<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    timeout <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">After</span><span class="token punctuation">(</span><span class="token number">80</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">select</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> result <span class="token operator">:=</span> <span class="token operator">&lt;-</span>c<span class="token punctuation">:</span>
            results <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>results<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token operator">&lt;-</span>timeout<span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;timed out&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="google-3-1" tabindex="-1">Google 3.1 <a class="header-anchor" href="#google-3-1" aria-hidden="true">#</a></h2><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u770B\u8D77\u6765\u633A\u5B8C\u7F8E,\u4F46\u662F\u5B58\u5728\u4E00\u4E2A\u4E25\u91CD\u7684\u5185\u5B58\u6CC4\u6F0F,\u4E0D\u77E5\u9053\u4F60\u770B\u51FA\u6765\u6CA1\u6709. First \u4E2D\u7684 searchReplica\u8C03\u7528,\u9664\u4E86\u7B2C\u4E00\u4E2A\u4F1A\u6210\u529F\u8FD4\u56DE\u4EE5\u5916,\u5176\u4ED6\u90FD\u4E0D\u4F1A\u8FD4\u56DE.\u56E0\u4E3A\u5835\u585E\u5728 c \u4E0A\u9762,\u4ECE\u800C\u5BFC\u81F4\u4E86\u5185\u5B58\u6CC4\u6F0F. \u6539\u8FDB\u4E5F\u5F88\u7B80\u5355</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">First</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">,</span> replicas <span class="token operator">...</span>Search<span class="token punctuation">)</span> Result <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">,</span><span class="token function">len</span><span class="token punctuation">(</span>replicas<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//\u770B\u4F3C\u591A\u5206\u914D\u4E86\u8D44\u6E90,\u4F46\u662F\u5F88\u5FEB\u5C31\u4F1A\u6536\u56DE</span>
    searchReplica <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> replicas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> replicas <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">searchReplica</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;-</span>c
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7ECF\u8FC7\u7B80\u5355\u7684\u66FF\u6362,\u901A\u8FC7 Go \u7684\u5E76\u53D1\u6A21\u578B,\u5C06\u4E00\u4E2A\u6162\u7684,\u987A\u5E8F\u6267\u884C\u7684,\u6545\u969C\u654F\u611F\u7684\u7A0B\u5E8F\u6539\u9020\u4E3A\u4E86\u4E00\u4E2A\u5FEB\u901F\u7684,\u5E76\u53D1\u7684,\u6709\u5197\u4F59\u7684,\u5065\u58EE\u7684\u7A0B\u5E8F.</p><h2 id="\u5B8C\u6574\u7684-google-3-1" tabindex="-1">\u5B8C\u6574\u7684 google 3.1 <a class="header-anchor" href="#\u5B8C\u6574\u7684-google-3-1" aria-hidden="true">#</a></h2><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">var</span> <span class="token punctuation">(</span>
    Web1 <span class="token operator">=</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span>
    Web2 <span class="token operator">=</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span>
    Image1 <span class="token operator">=</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">)</span>
    Image2 <span class="token operator">=</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">)</span>
    Video1 <span class="token operator">=</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span><span class="token string">&quot;video&quot;</span><span class="token punctuation">)</span>
    Video2 <span class="token operator">=</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span><span class="token string">&quot;video&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Search <span class="token keyword">func</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">)</span> Result

<span class="token keyword">func</span> <span class="token function">fakeSearch</span><span class="token punctuation">(</span>kind <span class="token builtin">string</span><span class="token punctuation">)</span> Search <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">)</span> Result <span class="token punctuation">{</span>
              time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span>
              <span class="token keyword">return</span> <span class="token function">Result</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s result for %q\\n&quot;</span><span class="token punctuation">,</span> kind<span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    rand<span class="token punctuation">.</span><span class="token function">Seed</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UnixNano</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    start <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    results <span class="token operator">:=</span> <span class="token function">Google</span><span class="token punctuation">(</span><span class="token string">&quot;golang&quot;</span><span class="token punctuation">)</span>
    elapsed <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>elapsed<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">First</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">,</span> replicas <span class="token operator">...</span>Search<span class="token punctuation">)</span> Result <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">,</span><span class="token function">len</span><span class="token punctuation">(</span>replicas<span class="token punctuation">)</span><span class="token punctuation">)</span> 
    searchReplica <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> replicas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> replicas <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">searchReplica</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;-</span>c
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">Google</span><span class="token punctuation">(</span>query <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>results <span class="token punctuation">[</span><span class="token punctuation">]</span>Result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   c <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Result<span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">First</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> Web1<span class="token punctuation">,</span> Web2<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">First</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> Image1<span class="token punctuation">,</span> Image2<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> c <span class="token operator">&lt;-</span> <span class="token function">First</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> Video1<span class="token punctuation">,</span> Video2<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    timeout <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">After</span><span class="token punctuation">(</span><span class="token number">80</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">select</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> result <span class="token operator">:=</span> <span class="token operator">&lt;-</span>c<span class="token punctuation">:</span>
            results <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>results<span class="token punctuation">,</span> result<span class="token punctuation">)</span>
        <span class="token keyword">case</span> <span class="token operator">&lt;-</span>timeout<span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;timed out&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div>`,22),e=[o];function c(u,l,i,r,k,b){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
