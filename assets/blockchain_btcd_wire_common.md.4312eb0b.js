import{_ as n,c as s,o as a,a as e}from"./app.3ef0f76b.js";const k='{"title":"wire_common","description":"","frontmatter":{"title":"wire_common","date":"2018-11-12T11:07:31.000Z","draft":false,"markup":"mmark"},"headers":[{"level":2,"title":"\u57FA\u4E8Echan\u7684buf\u7BA1\u7406","slug":"\u57FA\u4E8Echan\u7684buf\u7BA1\u7406"},{"level":2,"title":"VarInt\u7F16\u7801","slug":"varint\u7F16\u7801"},{"level":2,"title":"VarBytes,VarString\u7F16\u7801\u65B9\u5F0F","slug":"varbytes-varstring\u7F16\u7801\u65B9\u5F0F"},{"level":2,"title":"\u6BD4\u7279\u5E01\u7684\u6D88\u606F\u901A\u4FE1","slug":"\u6BD4\u7279\u5E01\u7684\u6D88\u606F\u901A\u4FE1"},{"level":3,"title":"\u6D88\u606F\u5F80\u6765","slug":"\u6D88\u606F\u5F80\u6765"},{"level":3,"title":"\u8BFB\u53D6\u6D88\u606F","slug":"\u8BFB\u53D6\u6D88\u606F"},{"level":3,"title":"\u53D1\u9001\u6D88\u606F","slug":"\u53D1\u9001\u6D88\u606F"},{"level":3,"title":"\u6D88\u606F\u7C7B\u578B\u9A8C\u8BC1","slug":"\u6D88\u606F\u7C7B\u578B\u9A8C\u8BC1"}],"relativePath":"blockchain/btcd/wire_common.md"}',t={},p=e(`<h1 id="btcd-wire-common-go" tabindex="-1">btcd/wire/common.go <a class="header-anchor" href="#btcd-wire-common-go" aria-hidden="true">#</a></h1><h2 id="\u57FA\u4E8Echan\u7684buf\u7BA1\u7406" tabindex="-1">\u57FA\u4E8Echan\u7684buf\u7BA1\u7406 <a class="header-anchor" href="#\u57FA\u4E8Echan\u7684buf\u7BA1\u7406" aria-hidden="true">#</a></h2><p>type binaryFreeList chan []byte //\u6570\u5B57\u7F13\u51B2\u533A type scriptFreeList chan []byte //\u811A\u672C\u7F13\u51B2\u533A</p><p>\u8FD9\u91CC\u7684\u601D\u8DEF\u8FD8\u662F\u6BD4\u8F83\u5DE7\u5999\u7684,\u4F7F\u7528\u4E86chan\u7684\u65B9\u5F0F\u6765\u7BA1\u7406[]byte,\u51CF\u5C11\u4E86\u4E0D\u65AD\u7684\u5206\u914D[]byte,\u540C\u65F6\u4F7F\u7528chan\u6765\u89C4\u907F\u9501\u7684\u95EE\u9898. \u6211\u4E0D\u77E5\u9053go\u5185\u90E8chan\u5199\u5165\u8BFB\u51FA\u662F\u5426\u8981\u7528\u5230\u9501,\u4F46\u662F\u81F3\u5C11\u89C4\u907F\u4E86List\u7684\u7BA1\u7406.</p><p>Borrow \u65B9\u6CD5: \u5982\u679C\u6709\u53EF\u7528\u7684\u7F13\u51B2\u533A\u5219\u53D6\u8D70,\u5426\u5219\u5206\u914D Return \u65B9\u6CD5:\u5C06\u7528\u5B8C\u7684\u7F13\u51B2\u533A\u901A\u8FC7chan\u653E\u56DE\u53BB,\u4E3A\u4E0B\u6B21Borrow\u505A\u51C6\u5907.</p><p>\u8FD9\u91CC\u9762\u9884\u8BBE\u4E86\u6700\u5927\u7684\u7F13\u51B2\u533A\u5927\u5C0F,\u603B\u7684\u6765\u8BF4\u8FD8\u662F\u6EE1\u5DE7\u5999\u7684.</p><h2 id="varint\u7F16\u7801" tabindex="-1">VarInt\u7F16\u7801 <a class="header-anchor" href="#varint\u7F16\u7801" aria-hidden="true">#</a></h2><p>0-0xfd \u76F4\u63A5\u662F0xfd, 0xfd-maxuint16 0xfd+ \u4E24\u4E2A\u5B57\u8282\u7684\u6570\u503C\u672C\u8EAB maxuint16-maxuint32 0xfe+\u52A0\u56DB\u5B57\u8282\u6570\u503C\u672C\u8EAB maxuint32-maxuint64 0xff+8\u5B57\u8282\u6570\u503C\u672C\u8EAB</p><p>\u5B9E\u9645\u4E0A\u8FD9\u7C7B\u4F3C\u4E8E\u4EE5\u592A\u574A\u7684RLP\u7F16\u7801\u601D\u8DEF,</p><h2 id="varbytes-varstring\u7F16\u7801\u65B9\u5F0F" tabindex="-1">VarBytes,VarString\u7F16\u7801\u65B9\u5F0F <a class="header-anchor" href="#varbytes-varstring\u7F16\u7801\u65B9\u5F0F" aria-hidden="true">#</a></h2><p>VarInt\u7F16\u7801\u7684\u957F\u5EA6+\u6570\u636E\u672C\u8EAB</p><h2 id="\u6BD4\u7279\u5E01\u7684\u6D88\u606F\u901A\u4FE1" tabindex="-1">\u6BD4\u7279\u5E01\u7684\u6D88\u606F\u901A\u4FE1 <a class="header-anchor" href="#\u6BD4\u7279\u5E01\u7684\u6D88\u606F\u901A\u4FE1" aria-hidden="true">#</a></h2><h3 id="\u6D88\u606F\u5F80\u6765" tabindex="-1">\u6D88\u606F\u5F80\u6765 <a class="header-anchor" href="#\u6D88\u606F\u5F80\u6765" aria-hidden="true">#</a></h3><pre><code>    Peer A Sends                          Peer B Responds
----------------------------------------------------------------------------
getaddr message (MsgGetAddr)          addr message (MsgAddr)
getblocks message (MsgGetBlocks)      inv message (MsgInv)
inv message (MsgInv)                  getdata message (MsgGetData)
getdata message (MsgGetData)          block message (MsgBlock) -or-
                                      tx message (MsgTx) -or-
                                      notfound message (MsgNotFound)
getheaders message (MsgGetHeaders)    headers message (MsgHeaders)
ping message (MsgPing)                pong message (MsgHeaders)* -or-
                                      (none -- Ability to send message is enough)
</code></pre><h3 id="\u8BFB\u53D6\u6D88\u606F" tabindex="-1">\u8BFB\u53D6\u6D88\u606F <a class="header-anchor" href="#\u8BFB\u53D6\u6D88\u606F" aria-hidden="true">#</a></h3><p>pver\u662F\u6D88\u606F\u7248\u672C\u4FE1\u606F,(BIP\u5B9A\u4E49\u4E86\u5F88\u591A\u7248\u672C),\u76EE\u524D\u662FFeeFilterVersion 70013 btcnet \u6709\u56DB\u79CD\u60C5\u51B5,\u5206\u522B\u5982\u4E0B</p><div class="language-go line-numbers-mode"><pre><code>	<span class="token comment">// MainNet represents the main bitcoin network.</span>
	MainNet BitcoinNet <span class="token operator">=</span> <span class="token number">0xd9b4bef9</span>

	<span class="token comment">// TestNet represents the regression test network.</span>
	TestNet BitcoinNet <span class="token operator">=</span> <span class="token number">0xdab5bffa</span>

	<span class="token comment">// TestNet3 represents the test network (version 3).</span>
	TestNet3 BitcoinNet <span class="token operator">=</span> <span class="token number">0x0709110b</span>

	<span class="token comment">// SimNet represents the simulation test network.</span>
	SimNet BitcoinNet <span class="token operator">=</span> <span class="token number">0x12141c16</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-Go line-numbers-mode"><pre><code>	<span class="token comment">// Use the most recent protocol version supported by the package and the</span>
	<span class="token comment">// main bitcoin network.</span>
	pver <span class="token operator">:=</span> wire<span class="token punctuation">.</span>ProtocolVersion
	btcnet <span class="token operator">:=</span> wire<span class="token punctuation">.</span>MainNet

	<span class="token comment">// Reads and validates the next bitcoin message from conn using the</span>
	<span class="token comment">// protocol version pver and the bitcoin network btcnet.  The returns</span>
	<span class="token comment">// are a wire.Message, a []byte which contains the unmarshalled</span>
	<span class="token comment">// raw payload, and a possible error.</span>
	msg<span class="token punctuation">,</span> rawPayload<span class="token punctuation">,</span> err <span class="token operator">:=</span> wire<span class="token punctuation">.</span><span class="token function">ReadMessage</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> pver<span class="token punctuation">,</span> btcnet<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token comment">// Log and handle the error</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u53D1\u9001\u6D88\u606F" tabindex="-1">\u53D1\u9001\u6D88\u606F <a class="header-anchor" href="#\u53D1\u9001\u6D88\u606F" aria-hidden="true">#</a></h3><div class="language-Go line-numbers-mode"><pre><code>	<span class="token comment">// Use the most recent protocol version supported by the package and the</span>
	<span class="token comment">// main bitcoin network.</span>
	pver <span class="token operator">:=</span> wire<span class="token punctuation">.</span>ProtocolVersion
	btcnet <span class="token operator">:=</span> wire<span class="token punctuation">.</span>MainNet

	<span class="token comment">// Create a new getaddr bitcoin message.</span>
	msg <span class="token operator">:=</span> wire<span class="token punctuation">.</span><span class="token function">NewMsgGetAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// Writes a bitcoin message msg to conn using the protocol version</span>
	<span class="token comment">// pver, and the bitcoin network btcnet.  The return is a possible</span>
	<span class="token comment">// error.</span>
	err <span class="token operator">:=</span> wire<span class="token punctuation">.</span><span class="token function">WriteMessage</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> pver<span class="token punctuation">,</span> btcnet<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token comment">// Log and handle the error</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u6D88\u606F\u7C7B\u578B\u9A8C\u8BC1" tabindex="-1">\u6D88\u606F\u7C7B\u578B\u9A8C\u8BC1 <a class="header-anchor" href="#\u6D88\u606F\u7C7B\u578B\u9A8C\u8BC1" aria-hidden="true">#</a></h3><div class="language-go line-numbers-mode"><pre><code>	<span class="token comment">// Assumes msg is already a valid concrete message such as one created</span>
	<span class="token comment">// via NewMsgVersion or read via ReadMessage.</span>
	<span class="token keyword">switch</span> msg <span class="token operator">:=</span> msg<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token operator">*</span>wire<span class="token punctuation">.</span>MsgVersion<span class="token punctuation">:</span>
		<span class="token comment">// The message is a pointer to a MsgVersion struct.</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Protocol version: %v&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span>ProtocolVersion<span class="token punctuation">)</span>
	<span class="token keyword">case</span> <span class="token operator">*</span>wire<span class="token punctuation">.</span>MsgBlock<span class="token punctuation">:</span>
		<span class="token comment">// The message is a pointer to a MsgBlock struct.</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Number of tx in block: %v&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span>Header<span class="token punctuation">.</span>TxnCount<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,22),o=[p];function r(c,l,i,u,m,b){return a(),s("div",null,o)}var h=n(t,[["render",r]]);export{k as __pageData,h as default};
