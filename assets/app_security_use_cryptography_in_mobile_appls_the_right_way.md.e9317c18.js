import{o as n,c as s,e as a}from"./app.d48cc1fc.js";const e='{"title":"移动App加密的三条军规","description":"","frontmatter":{"title":"移动App加密的三条军规","date":"2022-01-17T13:57:03.000Z","hide":false,"tags":["security","app","android","cryptography"],"categories":["技术相关"]},"headers":[{"level":2,"title":"为什么需要加密","slug":"为什么需要加密"},{"level":2,"title":"加密需要遵循的三条军规","slug":"加密需要遵循的三条军规"},{"level":3,"title":"1. 不要硬编码秘钥","slug":"_1-不要硬编码秘钥"},{"level":3,"title":"2. 可预测的加密秘钥","slug":"_2-可预测的加密秘钥"},{"level":3,"title":"3. 使用系统提供加密方法","slug":"_3-使用系统提供加密方法"},{"level":2,"title":"其他","slug":"其他"}],"relativePath":"app_security/use_cryptography_in_mobile_appls_the_right_way.md","lastUpdated":1642381101949}',p={},t=[a('<hr><p>本文译自<a href="https://blog.oversecured.com/Use-cryptography-in-mobile-apps-the-right-way/" target="_blank" rel="noopener noreferrer">Use cryptography in mobile apps the right way</a></p><p>加密是保护数据的重要手段,但是不少开发者经常误用加密措施.</p><h2 id="为什么需要加密"><a class="header-anchor" href="#为什么需要加密" aria-hidden="true">#</a> 为什么需要加密</h2><p>虽然安卓和ios都提供了沙盒机制来隔离不同App之间的运行环境,但是对于敏感数据,还是必须进行保护. 至少应该进行监管要求的最低线保护. 另外,因为App中可能存在的各种泄露App内部文件的安全漏洞:</p><ul><li>通过WebView泄露</li><li>通过contentProviders泄露</li><li>通过隐式的intent(implicit intents)</li><li>其他方式</li></ul><p>加密可以有效保证,即使存在这些问题,攻击者也因为加密手段的存在而很难获取到什么好处. 可以读取内部文件的漏洞,只会导致相关文件内容泄露,而不会导致整个秘钥以及其他文件泄露. 而写文件则会导致用户账户的自动注销.</p><h2 id="加密需要遵循的三条军规"><a class="header-anchor" href="#加密需要遵循的三条军规" aria-hidden="true">#</a> 加密需要遵循的三条军规</h2><h3 id="_1-不要硬编码秘钥"><a class="header-anchor" href="#_1-不要硬编码秘钥" aria-hidden="true">#</a> 1. 不要硬编码秘钥</h3><p>硬编码秘钥意味着可以从源码中直接提取秘钥,而这其实和没有加密是没有区别的. 安卓中的错误示例: <img alt="" data-src="assets/cryptograph_hardcode_key_android.png" loading="lazy" class="lazy"> ios中的错误示例: <img alt="" data-src="assets/cryptograph_hardcode_key_ios.png" loading="lazy" class="lazy"></p><h3 id="_2-可预测的加密秘钥"><a class="header-anchor" href="#_2-可预测的加密秘钥" aria-hidden="true">#</a> 2. 可预测的加密秘钥</h3><p>秘钥虽然使用了随机数来生成,但是随机数的种子却是可预测的,这同样会导致秘钥很容易推测出来.</p><p>常见的错误就是使用固定的种子:</p><div class="language-java line-numbers-mode"><pre><code>    <span class="token class-name">SecureRandom</span> secureRandom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecureRandom</span><span class="token punctuation">(</span><span class="token string">&quot;known_seed&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">KeyGenerator</span> generator <span class="token operator">=</span> <span class="token class-name">KeyGenerator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;AES&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    generator<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> secureRandom<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Key</span> key <span class="token operator">=</span> generator<span class="token punctuation">.</span><span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>或者使用伪随机数:</p><div class="language-java line-numbers-mode"><pre><code>    <span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">128</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            key<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> key<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SecretKeySpec</span> skeySpec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span><span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//...</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>或者秘钥使用未初始化的默认值,不同于c++语言,java中数组未初始化,默认值是0:</p><div class="language-java line-numbers-mode"><pre><code>    <span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token class-name">SecretKeySpec</span> skeySpec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//...</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_3-使用系统提供加密方法"><a class="header-anchor" href="#_3-使用系统提供加密方法" aria-hidden="true">#</a> 3. 使用系统提供加密方法</h3><h4 id="安卓请用keystore"><a class="header-anchor" href="#安卓请用keystore" aria-hidden="true">#</a> 安卓请用keystore</h4><p>安卓提供了<a href="https://developer.android.com/training/articles/keystore" target="_blank" rel="noopener noreferrer">KeyStore</a>, App只能通过API来获取秘钥,不能直接读取相关文件. 相关秘钥存储在<code>/data/misc/keystore</code>. 普通用户无法直接读取. 当然如果手机root了,是可以读取的, 这也证明了对手机root的危害.</p><h4 id="ios请用安全隔离区-secure-enclave"><a class="header-anchor" href="#ios请用安全隔离区-secure-enclave" aria-hidden="true">#</a> ios请用安全隔离区(<code>Secure Enclave</code>)</h4><p>Secure Enclave是苹果提供的存储秘钥以及生物信息的手段,它是集成到SoC的专用安全子系统,独立于处理器. 即使处理器遭到入侵,也可以保护敏感数据的安全. 关于<a href="https://support.apple.com/zh-cn/guide/security/sec59b0b31ff/web" target="_blank" rel="noopener noreferrer">安全隔离区</a>的介绍,可以参考苹果官网.</p><h2 id="其他"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><p>当然就算你使用了遵循了上述规则,也不能保证你的数据100%安全. 如果你的App存在ACE(arbitrary code execution)问题,那么什么保护手段都将是无效的. 不过幸好,ACE是一种非常严重的安全漏洞,出现的概率相对是非常低的.</p><p>参考文档: <a href="https://blog.oversecured.com/Use-cryptography-in-mobile-apps-the-right-way/" target="_blank" rel="noopener noreferrer">Use cryptography in mobile apps the right way</a></p>',26)];p.render=function(a,e,p,o,c,l){return n(),s("div",null,t)};export{e as __pageData,p as default};
