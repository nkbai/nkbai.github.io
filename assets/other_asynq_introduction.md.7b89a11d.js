import{_ as n,c as s,o as a,a as p}from"./app.eda6f95c.js";const d='{"title":"\u4E00\u4E2A\u5B9E\u7528\u7684\u5206\u5E03\u5F0FGo\u4EFB\u52A1\u5904\u7406\u5E93","description":"","frontmatter":{"title":"\u4E00\u4E2A\u5B9E\u7528\u7684\u5206\u5E03\u5F0FGo\u4EFB\u52A1\u5904\u7406\u5E93","date":"2022-01-29T05:29:51.000Z"},"headers":[{"level":2,"title":"\u67B6\u6784","slug":"\u67B6\u6784"},{"level":2,"title":"\u4E00\u5206\u949F\u4E0A\u624B","slug":"\u4E00\u5206\u949F\u4E0A\u624B"},{"level":3,"title":"task","slug":"task"},{"level":3,"title":"client","slug":"client"},{"level":3,"title":"server","slug":"server"},{"level":3,"title":"asynqmon","slug":"asynqmon"},{"level":2,"title":"\u7B80\u5355\u4EE3\u7801\u9605\u8BFB","slug":"\u7B80\u5355\u4EE3\u7801\u9605\u8BFB"},{"level":2,"title":"\u4EFB\u52A1\u7684\u72B6\u6001\u8FC1\u79FB","slug":"\u4EFB\u52A1\u7684\u72B6\u6001\u8FC1\u79FB"},{"level":3,"title":"healthchecker","slug":"healthchecker"},{"level":3,"title":"heartbeater","slug":"heartbeater"},{"level":3,"title":"inspector","slug":"inspector"},{"level":3,"title":"processor","slug":"processor"},{"level":3,"title":"scheduler","slug":"scheduler"},{"level":3,"title":"recoverer","slug":"recoverer"},{"level":3,"title":"subscriber","slug":"subscriber"},{"level":3,"title":"syncer","slug":"syncer"},{"level":2,"title":"\u5E38\u89C1\u95EE\u9898","slug":"\u5E38\u89C1\u95EE\u9898"},{"level":3,"title":"1. \u4EFB\u52A1\u81F3\u5C11\u4F1A\u6267\u884C\u4E00\u6B21,\u662F\u5426\u53EF\u80FD\u91CD\u590D\u6267\u884C?","slug":"_1-\u4EFB\u52A1\u81F3\u5C11\u4F1A\u6267\u884C\u4E00\u6B21-\u662F\u5426\u53EF\u80FD\u91CD\u590D\u6267\u884C"}],"relativePath":"other/asynq_introduction.md"}',e={},t=p(`<h1 id="\u4E00\u4E2A\u5B9E\u7528\u7684\u5206\u5E03\u5F0Fgo\u4EFB\u52A1\u5904\u7406\u5E93" tabindex="-1">\u4E00\u4E2A\u5B9E\u7528\u7684\u5206\u5E03\u5F0FGo\u4EFB\u52A1\u5904\u7406\u5E93 <a class="header-anchor" href="#\u4E00\u4E2A\u5B9E\u7528\u7684\u5206\u5E03\u5F0Fgo\u4EFB\u52A1\u5904\u7406\u5E93" aria-hidden="true">#</a></h1><p><div class="table-of-contents"><ul><li><a href="#\u67B6\u6784">\u67B6\u6784</a></li><li><a href="#\u4E00\u5206\u949F\u4E0A\u624B">\u4E00\u5206\u949F\u4E0A\u624B</a><ul><li><a href="#task">task</a></li><li><a href="#client">client</a></li><li><a href="#server">server</a></li><li><a href="#asynqmon">asynqmon</a></li></ul></li><li><a href="#\u7B80\u5355\u4EE3\u7801\u9605\u8BFB">\u7B80\u5355\u4EE3\u7801\u9605\u8BFB</a></li><li><a href="#\u4EFB\u52A1\u7684\u72B6\u6001\u8FC1\u79FB">\u4EFB\u52A1\u7684\u72B6\u6001\u8FC1\u79FB</a><ul><li><a href="#healthchecker">healthchecker</a></li><li><a href="#heartbeater">heartbeater</a></li><li><a href="#inspector">inspector</a></li><li><a href="#processor">processor</a></li><li><a href="#scheduler">scheduler</a></li><li><a href="#recoverer">recoverer</a></li><li><a href="#subscriber">subscriber</a></li><li><a href="#syncer">syncer</a></li></ul></li><li><a href="#\u5E38\u89C1\u95EE\u9898">\u5E38\u89C1\u95EE\u9898</a><ul><li><a href="#_1-\u4EFB\u52A1\u81F3\u5C11\u4F1A\u6267\u884C\u4E00\u6B21-\u662F\u5426\u53EF\u80FD\u91CD\u590D\u6267\u884C">1. \u4EFB\u52A1\u81F3\u5C11\u4F1A\u6267\u884C\u4E00\u6B21,\u662F\u5426\u53EF\u80FD\u91CD\u590D\u6267\u884C?</a></li></ul></li></ul></div> \u5728\u5FAE\u670D\u52A1\u4E2D,\u5982\u679C\u4F60\u9700\u8981\u4E00\u4E2A\u5206\u5E03\u5F0F\u7684\u4EFB\u52A1\u7BA1\u7406\u5E93,\u90A3\u4E48asynq\u5C06\u662F\u9996\u9009. \u5B83\u57FA\u4E8Eredis,\u6240\u4EE5\u5C31\u7B97\u662F\u4F60\u6709\u591A\u4E2A\u4EFB\u52A1\u7684\u5206\u53D1\u4EE5\u53CA\u6D88\u8D39\u8282\u70B9,\u4E5F\u4E0D\u7528\u62C5\u5FC3\u8282\u70B9\u534F\u8C03\u95EE\u9898.\u56E0\u4E3Aredis\u96C6\u7FA4\u81EA\u5DF1\u4F1A\u540C\u6B65\u6570\u636E.</p><h2 id="\u67B6\u6784" tabindex="-1">\u67B6\u6784 <a class="header-anchor" href="#\u67B6\u6784" aria-hidden="true">#</a></h2><p><img alt="" data-src="./assets/asynq_arch.png" loading="lazy" class="lazy"></p><p>asynq \u56F4\u7ED5\u7740redis\u5C55\u5F00,\u8FD9\u662F\u4ED6\u7684\u5355\u4E00\u4E2D\u5FC3. \u800C\u76F8\u5173\u7684client\u4EE5\u53CAmessage broker\u53EF\u4EE5\u6709\u591A\u4E2A. asynq\u652F\u6301\u91CD\u8981\u7279\u65B0:</p><ul><li>\u4FDD\u8BC1\u4E00\u4E2A\u4EFB\u52A1\u81F3\u5C11\u88AB\u6267\u884C\u4E00\u6B21</li><li>\u6709\u91CD\u8BD5\u673A\u5236</li><li>\u6709\u7B80\u5355\u7684\u4F18\u5148\u7EA7\u961F\u5217</li><li>\u540C\u65F6\u6709\u4E00\u4E2Aasynqmon\u7684\u7BA1\u7406\u754C\u9762</li></ul><h2 id="\u4E00\u5206\u949F\u4E0A\u624B" tabindex="-1">\u4E00\u5206\u949F\u4E0A\u624B <a class="header-anchor" href="#\u4E00\u5206\u949F\u4E0A\u624B" aria-hidden="true">#</a></h2><p>\u8FD9\u91CC\u91C7\u7528\u7684\u662F\u4E00\u4E2A\u5B98\u65B9\u7684\u4F8B\u5B50.</p><h3 id="task" tabindex="-1">task <a class="header-anchor" href="#task" aria-hidden="true">#</a></h3><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">package</span> tasks

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;context&quot;</span>
    <span class="token string">&quot;encoding/json&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;log&quot;</span>
    <span class="token string">&quot;time&quot;</span>
    <span class="token string">&quot;github.com/hibiken/asynq&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// A list of task types.</span>
<span class="token keyword">const</span> <span class="token punctuation">(</span>
    TypeEmailDelivery   <span class="token operator">=</span> <span class="token string">&quot;email:deliver&quot;</span>
    TypeImageResize     <span class="token operator">=</span> <span class="token string">&quot;image:resize&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> EmailDeliveryPayload <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    UserID     <span class="token builtin">int</span>
    TemplateID <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> ImageResizePayload <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    SourceURL <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">//----------------------------------------------</span>
<span class="token comment">// Write a function NewXXXTask to create a task.</span>
<span class="token comment">// A task consists of a type and a payload.</span>
<span class="token comment">//----------------------------------------------</span>

<span class="token keyword">func</span> <span class="token function">NewEmailDeliveryTask</span><span class="token punctuation">(</span>userID <span class="token builtin">int</span><span class="token punctuation">,</span> tmplID <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>asynq<span class="token punctuation">.</span>Task<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    payload<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>EmailDeliveryPayload<span class="token punctuation">{</span>UserID<span class="token punctuation">:</span> userID<span class="token punctuation">,</span> TemplateID<span class="token punctuation">:</span> tmplID<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> asynq<span class="token punctuation">.</span><span class="token function">NewTask</span><span class="token punctuation">(</span>TypeEmailDelivery<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewImageResizeTask</span><span class="token punctuation">(</span>src <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>asynq<span class="token punctuation">.</span>Task<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    payload<span class="token punctuation">,</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>ImageResizePayload<span class="token punctuation">{</span>SourceURL<span class="token punctuation">:</span> src<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
    <span class="token punctuation">}</span>
    <span class="token comment">// task options can be passed to NewTask, which can be overridden at enqueue time.</span>
    <span class="token keyword">return</span> asynq<span class="token punctuation">.</span><span class="token function">NewTask</span><span class="token punctuation">(</span>TypeImageResize<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> asynq<span class="token punctuation">.</span><span class="token function">MaxRetry</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> asynq<span class="token punctuation">.</span><span class="token function">Timeout</span><span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Minute<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token comment">//---------------------------------------------------------------</span>
<span class="token comment">// Write a function HandleXXXTask to handle the input task.</span>
<span class="token comment">// Note that it satisfies the asynq.HandlerFunc interface.</span>
<span class="token comment">//</span>
<span class="token comment">// Handler doesn&#39;t need to be a function. You can define a type</span>
<span class="token comment">// that satisfies asynq.Handler interface. See examples below.</span>
<span class="token comment">//---------------------------------------------------------------</span>

<span class="token keyword">func</span> <span class="token function">HandleEmailDeliveryTask</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> t <span class="token operator">*</span>asynq<span class="token punctuation">.</span>Task<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> p EmailDeliveryPayload
    <span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">Payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;json.Unmarshal failed: %v: %w&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> asynq<span class="token punctuation">.</span>SkipRetry<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Sending Email to User: user_id=%d, template_id=%s&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>UserID<span class="token punctuation">,</span> p<span class="token punctuation">.</span>TemplateID<span class="token punctuation">)</span>
    <span class="token comment">// Email delivery code ...</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token comment">// ImageProcessor implements asynq.Handler interface.</span>
<span class="token keyword">type</span> ImageProcessor <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... fields for struct</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>processor <span class="token operator">*</span>ImageProcessor<span class="token punctuation">)</span> <span class="token function">ProcessTask</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> t <span class="token operator">*</span>asynq<span class="token punctuation">.</span>Task<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> p ImageResizePayload
    <span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">Payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;json.Unmarshal failed: %v: %w&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> asynq<span class="token punctuation">.</span>SkipRetry<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Resizing image: src=%s&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>SourceURL<span class="token punctuation">)</span>
    <span class="token comment">// Image resizing code ...</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewImageProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>ImageProcessor <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>ImageProcessor<span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br></div></div><p>\u8FD9\u662Fclient/server \u5171\u540C\u77E5\u6653\u7684\u4EFB\u52A1\u7684\u6570\u636E\u7ED3\u6784.</p><h3 id="client" tabindex="-1">client <a class="header-anchor" href="#client" aria-hidden="true">#</a></h3><p>client \u5176\u5B9E\u662Ftask\u7684\u751F\u4EA7\u8005,\u5C06\u4EFB\u52A1\u653E\u5165\u961F\u5217. \u76F8\u5173\u7684server\u4F1A\u81EA\u52A8\u8FDB\u884C\u6D88\u8D39.</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;log&quot;</span>
    <span class="token string">&quot;time&quot;</span>

    <span class="token string">&quot;github.com/hibiken/asynq&quot;</span>
    <span class="token string">&quot;your/app/package/tasks&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> redisAddr <span class="token operator">=</span> <span class="token string">&quot;127.0.0.1:6379&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    client <span class="token operator">:=</span> asynq<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>asynq<span class="token punctuation">.</span>RedisClientOpt<span class="token punctuation">{</span>Addr<span class="token punctuation">:</span> redisAddr<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">defer</span> client<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// ------------------------------------------------------</span>
    <span class="token comment">// Example 1: Enqueue task to be processed immediately.</span>
    <span class="token comment">//            Use (*Client).Enqueue method.</span>
    <span class="token comment">// ------------------------------------------------------</span>

    task<span class="token punctuation">,</span> err <span class="token operator">:=</span> tasks<span class="token punctuation">.</span><span class="token function">NewEmailDeliveryTask</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token string">&quot;some:template:id&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;could not create task: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    info<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Enqueue</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;could not enqueue task: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;enqueued task: id=%s queue=%s&quot;</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> info<span class="token punctuation">.</span>Queue<span class="token punctuation">)</span>


    <span class="token comment">// ------------------------------------------------------------</span>
    <span class="token comment">// Example 2: Schedule task to be processed in the future.</span>
    <span class="token comment">//            Use ProcessIn or ProcessAt option.</span>
    <span class="token comment">// ------------------------------------------------------------</span>

    info<span class="token punctuation">,</span> err <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Enqueue</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> asynq<span class="token punctuation">.</span><span class="token function">ProcessIn</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Hour<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;could not schedule task: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;enqueued task: id=%s queue=%s&quot;</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> info<span class="token punctuation">.</span>Queue<span class="token punctuation">)</span>


    <span class="token comment">// ----------------------------------------------------------------------------</span>
    <span class="token comment">// Example 3: Set other options to tune task processing behavior.</span>
    <span class="token comment">//            Options include MaxRetry, Queue, Timeout, Deadline, Unique etc.</span>
    <span class="token comment">// ----------------------------------------------------------------------------</span>

    task<span class="token punctuation">,</span> err <span class="token operator">=</span> tasks<span class="token punctuation">.</span><span class="token function">NewImageResizeTask</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/myassets/image.jpg&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;could not create task: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    info<span class="token punctuation">,</span> err <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">Enqueue</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> asynq<span class="token punctuation">.</span><span class="token function">MaxRetry</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> asynq<span class="token punctuation">.</span><span class="token function">Timeout</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Minute<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;could not enqueue task: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;enqueued task: id=%s queue=%s&quot;</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> info<span class="token punctuation">.</span>Queue<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h3 id="server" tabindex="-1">server <a class="header-anchor" href="#server" aria-hidden="true">#</a></h3><p>server \u662Ftask\u7684\u6D88\u8D39\u8005,\u5B83\u4E00\u76F4\u8FD0\u884C\u5728\u540E\u53F0. \u53EF\u4EE5\u6709\u591A\u4E2Aclient,\u591A\u4E2Aserver,\u53EA\u8981\u4ED6\u4EEC\u8FDE\u63A5\u5230\u4E86\u540C\u4E00\u4E2Aredis server(\u96C6\u7FA4\u4E5F\u53EF\u4EE5\u7684)\u5373\u53EF.</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;log&quot;</span>

    <span class="token string">&quot;github.com/hibiken/asynq&quot;</span>
    <span class="token string">&quot;your/app/package/tasks&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> redisAddr <span class="token operator">=</span> <span class="token string">&quot;127.0.0.1:6379&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    srv <span class="token operator">:=</span> asynq<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span>
        asynq<span class="token punctuation">.</span>RedisClientOpt<span class="token punctuation">{</span>Addr<span class="token punctuation">:</span> redisAddr<span class="token punctuation">}</span><span class="token punctuation">,</span>
        asynq<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>
            <span class="token comment">// Specify how many concurrent workers to use</span>
            Concurrency<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
            <span class="token comment">// Optionally specify multiple queues with different priority.</span>
            Queues<span class="token punctuation">:</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span>
                <span class="token string">&quot;critical&quot;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
                <span class="token string">&quot;default&quot;</span><span class="token punctuation">:</span>  <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token string">&quot;low&quot;</span><span class="token punctuation">:</span>      <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token comment">// See the godoc for other configuration options</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    <span class="token comment">// mux maps a type to a handler</span>
    mux <span class="token operator">:=</span> asynq<span class="token punctuation">.</span><span class="token function">NewServeMux</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    mux<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span>tasks<span class="token punctuation">.</span>TypeEmailDelivery<span class="token punctuation">,</span> tasks<span class="token punctuation">.</span>HandleEmailDeliveryTask<span class="token punctuation">)</span>
    mux<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>tasks<span class="token punctuation">.</span>TypeImageResize<span class="token punctuation">,</span> tasks<span class="token punctuation">.</span><span class="token function">NewImageProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// ...register other handlers...</span>

    <span class="token keyword">if</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>mux<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;could not run server: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h3 id="asynqmon" tabindex="-1">asynqmon <a class="header-anchor" href="#asynqmon" aria-hidden="true">#</a></h3><p>\u8FD9\u662F\u4E00\u4E2A\u7BA1\u7406\u754C\u9762,\u53EF\u4EE5\u76F4\u89C2\u7684\u67E5\u770B\u5404\u4E2A\u961F\u5217\u7684\u60C5\u51B5,\u53EF\u4EE5\u624B\u5DE5\u53D6\u6D88,\u5220\u9664,\u91CD\u65B0\u6267\u884Ctask.</p><h4 id="queues" tabindex="-1">Queues <a class="header-anchor" href="#queues" aria-hidden="true">#</a></h4><p><img alt="" data-src="assets/asynqmon1.png.png" loading="lazy" class="lazy"></p><h4 id="tasks" tabindex="-1">tasks <a class="header-anchor" href="#tasks" aria-hidden="true">#</a></h4><p><img alt="" data-src="assets/asynqmon2.png.png" loading="lazy" class="lazy"></p><h4 id="metrics" tabindex="-1">metrics <a class="header-anchor" href="#metrics" aria-hidden="true">#</a></h4><p><img alt="" data-src="assets/asynq_metrics.png" loading="lazy" class="lazy"></p><h2 id="\u7B80\u5355\u4EE3\u7801\u9605\u8BFB" tabindex="-1">\u7B80\u5355\u4EE3\u7801\u9605\u8BFB <a class="header-anchor" href="#\u7B80\u5355\u4EE3\u7801\u9605\u8BFB" aria-hidden="true">#</a></h2><p>asynq \u5B9E\u9645\u4E0A\u662F\u56F4\u7ED5redis\u5C55\u5F00, \u7531\u4E8E\u5176\u6570\u636E\u7ED3\u6784\u590D\u6742,\u6240\u4EE5\u91CC\u9762\u5927\u91CF\u4F7F\u7528\u4E86lua\u811A\u672C\u6765\u4FDD\u8BC1\u64CD\u4F5C\u7684\u539F\u5B50\u6027. redis\u53EF\u4EE5\u8BA4\u4E3A\u662Fasynq\u7684\u9AD8\u6027\u80FD\u6570\u636E\u5E93, asynq client\u548Cserver\u7684\u6570\u636E\u90FD\u53D6\u81EA\u8FD9\u91CC.</p><p>task\u4E3B\u8981\u4EE5\u4E0B\u72B6\u6001:</p><ul><li>Pending \u521B\u5EFA\u7684\u4EFB\u52A1,\u90FD\u5904\u4E8E\u6B64\u72B6\u6001</li><li>Active server\u53EF\u4EE5\u6267\u884C\u7684\u65F6\u5019,\u4F1A\u5C06\u4EFB\u52A1\u8F6C\u6362\u4E3Aactive,\u7136\u540E\u5F00\u59CB\u6267\u884C</li><li>Scheduled \u5982\u679C\u4E00\u4E2A\u4EFB\u52A1\u4E0D\u80FD\u7ACB\u5373\u6267\u884C,\u4F1A\u8FDB\u5165\u5230Scheduled\u72B6\u6001,\u7B49\u5F85\u65F6\u673A\u5230\u6765\u7684\u65F6\u5019\u518D\u6267\u884C.</li><li>retry \u4EFB\u52A1\u6267\u884C\u5931\u8D25\u540E,\u4F1A\u518D\u6B21\u5C1D\u8BD5,\u8FD9\u65F6\u5019\u5C31\u4F1A\u8FDB\u5165retry\u7684\u72B6\u6001,</li><li>archived\u72B6\u6001 \u5931\u8D25\u6B21\u6570\u8FBE\u5230\u4E0A\u7EBF,\u6216\u8005\u8D85\u8FC7\u4E86\u89C4\u5B9A\u7684\u65F6\u9650\u4E86,\u5C31\u4F1A\u8FDB\u5165\u8BE5\u72B6\u6001,\u4E00\u76F4\u6301\u7EED\u4E0B\u53BB,\u9700\u8981\u4EBA\u624B\u5DE5\u5220\u9664.</li></ul><h2 id="\u4EFB\u52A1\u7684\u72B6\u6001\u8FC1\u79FB" tabindex="-1">\u4EFB\u52A1\u7684\u72B6\u6001\u8FC1\u79FB <a class="header-anchor" href="#\u4EFB\u52A1\u7684\u72B6\u6001\u8FC1\u79FB" aria-hidden="true">#</a></h2><p>\u8FD9\u4E3B\u8981\u6D89\u53CA\u5230asynq server\u7684\u5185\u90E8\u7EC4\u4EF6,\u4E0B\u9762\u4E00\u4E00\u4ECB\u7ECD,\u4ED6\u4EEC\u5728\u6267\u884C\u548C\u7BA1\u7406\u4EFB\u52A1.</p><h3 id="healthchecker" tabindex="-1">healthchecker <a class="header-anchor" href="#healthchecker" aria-hidden="true">#</a></h3><p>\u8FD9\u4E2A\u975E\u5E38\u7B80\u5355,\u4E0D\u65AD\u7684ping redis,\u544A\u8BC9\u81EA\u5DF1\u8FD8\u6D3B\u7740</p><h3 id="heartbeater" tabindex="-1">heartbeater <a class="header-anchor" href="#heartbeater" aria-hidden="true">#</a></h3><p>\u5BF9\u5E94\u7684\u662Fasynqmon\u4E2D\u7684<code>/asynqmon/servers</code>,\u4E3B\u8981\u662F\u4E0D\u505C\u7684\u5C06server\u7684\u72B6\u6001\u66F4\u65B0\u5230redis\u4E2D,\u65B9\u4FBFasynqmon \u67E5\u770B.</p><h3 id="inspector" tabindex="-1">inspector <a class="header-anchor" href="#inspector" aria-hidden="true">#</a></h3><p>\u8FD9\u4E2A\u662Fasynqmon\u7BA1\u7406\u7684\u5165\u53E3,\u53EF\u4EE5\u67E5\u770B\u6240\u6709\u7684server\u4EE5\u53CA\u7BA1\u7406\u4EFB\u52A1.</p><h3 id="processor" tabindex="-1">processor <a class="header-anchor" href="#processor" aria-hidden="true">#</a></h3><p>\u8FD9\u4E2A\u662F\u6267\u884C\u4EFB\u52A1\u7684\u7EC4\u4EF6,\u4E0D\u505C\u7684\u5C06\u5904\u4E8EPending\u4E2D\u7684\u4EFB\u52A1,\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u6765,\u7136\u540E\u6267\u884C. \u4E3B\u8981\u662F\u89E3\u51B3:</p><ol><li>\u5982\u679C\u4EFB\u52A1\u5931\u8D25\u4E86,\u5219\u5C06\u4EFB\u52A1\u6539\u4E3Aretry\u6216\u8005archived\u72B6\u6001,\u4E3B\u8981\u662F\u770B\u662F\u5426\u8FD8\u6709\u5C1D\u8BD5\u6B21\u6570.</li><li>\u5982\u679C\u6536\u5230\u4E86server\u9000\u51FA\u7684\u4FE1\u53F7,\u5219\u5C06\u6B63\u5728\u6267\u884C\u7684\u4EFB\u52A1\u91CD\u65B0\u8BBE\u7F6E\u4E3Apending,\u7136\u540E\u518D\u7ED3\u675F.</li><li>\u5F00\u59CB\u6267\u884C\u4EFB\u52A1\u4E4B\u524D,\u4F1A\u5C06\u4EFB\u52A1\u653E\u5165\u4E00\u4E2A<code>Cancelations</code>\u7684\u6570\u636E\u7ED3\u6784\u4E2D,\u65B9\u4FBF\u53E6\u4E00\u4E2A\u7EC4\u4EF6<code>subscriber</code>\u5904\u7406.</li></ol><h3 id="scheduler" tabindex="-1">scheduler <a class="header-anchor" href="#scheduler" aria-hidden="true">#</a></h3><p>Scheduler\u662F\u4E00\u4E2A\u76F8\u5BF9\u72EC\u7ACB\u7684\u7EC4\u4EF6,\u4E3B\u8981\u662F\u5B9A\u671F\u4EA7\u751Ftask,\u53EF\u4EE5\u8BA4\u4E3A\u662Fclient\u7684\u9AD8\u7EA7\u7248\u672C.</p><h3 id="recoverer" tabindex="-1">recoverer <a class="header-anchor" href="#recoverer" aria-hidden="true">#</a></h3><p>\u8FD9\u4E2A\u7EC4\u4EF6\u8D1F\u8D23\u91CD\u8BD5\u6267\u884C\u5931\u8D25\u7684task,\u5982\u679C\u8FD8\u6709\u53EF\u4EE5\u7528\u7684\u5C1D\u8BD5\u6B21\u6570\u5C31\u91CD\u8BD5\u6267\u884C,\u91CD\u8BD5\u6267\u884C\u5C31\u662F\u5C06\u4EFB\u52A1\u72B6\u6001\u7531retry\u6539\u4E3Apending. \u8FD8\u6709\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5\u5C31\u662F\u5C31\u662F\u4EFB\u52A1\u5904\u4E8Eactive\u72B6\u6001,\u4F46\u662F\u76F8\u5173\u7684server\u5DF2\u7ECF\u6302\u4E86,\u8FD9\u5BFC\u81F4recover\u53D1\u73B0,\u4E5F\u4F1A\u53D6\u51FA\u6765\u91CD\u65B0\u6267\u884C.</p><h3 id="subscriber" tabindex="-1">subscriber <a class="header-anchor" href="#subscriber" aria-hidden="true">#</a></h3><p>\u8FD9\u4E2A\u7EC4\u4EF6\u4E3B\u8981\u529F\u80FD\u662F\u54CD\u5E94asynqmon\u53D6\u6D88\u4EFB\u52A1\u7684\u547D\u4EE4,\u5B83\u5185\u90E8\u4F7F\u7528redis\u7684PUBSUB\u673A\u5236,\u76D1\u542C\u6765\u81EA<code>inspector</code>\u7684\u53D6\u6D88\u547D\u4EE4,\u6536\u5230\u540E,\u4F1A\u5C06\u6307\u5B9A\u7684\u4EFB\u52A1\u53D6\u6D88\u6267\u884C.</p><h3 id="syncer" tabindex="-1">syncer <a class="header-anchor" href="#syncer" aria-hidden="true">#</a></h3><p>syncer\u662Fprocessor\u7684\u8F85\u52A9\u7EC4\u4EF6,processor\u5BF9\u4E8E\u4EFB\u52A1\u72B6\u6001\u7684\u6240\u6709\u6539\u53D8,\u90FD\u662F\u5728syncer\u4E2D\u6267\u884C. \u5982\u679C\u72B6\u6001\u6539\u53D8\u5931\u8D25,\u4F1A\u5C1D\u8BD5\u91CD\u65B0\u6267\u884C.</p><h2 id="\u5E38\u89C1\u95EE\u9898" tabindex="-1">\u5E38\u89C1\u95EE\u9898 <a class="header-anchor" href="#\u5E38\u89C1\u95EE\u9898" aria-hidden="true">#</a></h2><h3 id="_1-\u4EFB\u52A1\u81F3\u5C11\u4F1A\u6267\u884C\u4E00\u6B21-\u662F\u5426\u53EF\u80FD\u91CD\u590D\u6267\u884C" tabindex="-1">1. \u4EFB\u52A1\u81F3\u5C11\u4F1A\u6267\u884C\u4E00\u6B21,\u662F\u5426\u53EF\u80FD\u91CD\u590D\u6267\u884C? <a class="header-anchor" href="#_1-\u4EFB\u52A1\u81F3\u5C11\u4F1A\u6267\u884C\u4E00\u6B21-\u662F\u5426\u53EF\u80FD\u91CD\u590D\u6267\u884C" aria-hidden="true">#</a></h3><p>\u6709\u53EF\u80FD\u7684,\u6709\u4E00\u79CD\u573A\u666F,\u6BD4\u5982asynq\u5728\u6536\u5230\u9000\u51FA\u4FE1\u53F7\u65F6,\u4F1A\u628A\u6B63\u5728\u6267\u884C\u7684\u4EFB\u52A1\u91CD\u65B0\u653E\u56DE\u53BB,\u8FD9\u65F6\u5019\u5982\u679C\u67D0\u4E2A\u4EFB\u52A1\u78B0\u5DE7\u7ED3\u675F\u4E86,\u8FD9\u5C31\u4F1A\u9020\u6210\u8FD9\u4E2A\u4EFB\u52A1\u867D\u7136\u6210\u529F\u4E86,\u4F46\u662F\u91CD\u590D\u6267\u884C. \u5F53\u7136\u5982\u679C\u4E00\u4E2A\u4EFB\u52A1\u6267\u884C\u5230\u4E00\u534A,\u8FDB\u7A0B\u9000\u51FA\u4E86,\u4E0B\u6B21\u542F\u52A8\u4EE5\u540E,\u8FD8\u4F1A\u63A5\u7740\u91CD\u65B0\u6267\u884C.</p>`,51),o=[t];function c(l,u,r,i,k,b){return a(),s("div",null,o)}var h=n(e,[["render",c]]);export{d as __pageData,h as default};
