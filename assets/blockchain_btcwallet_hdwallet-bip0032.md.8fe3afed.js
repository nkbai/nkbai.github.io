import{_ as n,c as s,o as a,a as e}from"./app.eccc2abf.js";const m='{"title":"hdwallet-bip0032","description":"","frontmatter":{"title":"hdwallet-bip0032","date":"2019-05-20T08:33:25.957Z","draft":false,"markup":"mmark"},"headers":[{"level":3,"title":"BIP0032\u7684\u6838\u5FC3\u5C31\u662F\u5B50\u79D8\u94A5\u7684\u63A8\u5BFC","slug":"bip0032\u7684\u6838\u5FC3\u5C31\u662F\u5B50\u79D8\u94A5\u7684\u63A8\u5BFC"},{"level":3,"title":"\u4E3A\u4EC0\u4E48\u6709\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u533A\u522B","slug":"\u4E3A\u4EC0\u4E48\u6709\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u533A\u522B"},{"level":3,"title":"\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u7EC6\u8282","slug":"\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u7EC6\u8282"},{"level":3,"title":"\u7236\u8282\u70B9\u5230\u5B50\u8282\u70B9\u7684\u4E09\u79CD\u63A8\u5BFC\u65B9\u5F0F","slug":"\u7236\u8282\u70B9\u5230\u5B50\u8282\u70B9\u7684\u4E09\u79CD\u63A8\u5BFC\u65B9\u5F0F"},{"level":2,"title":"BIP0032\u6811\u72B6\u79C1\u94A5\u7BA1\u7406","slug":"bip0032\u6811\u72B6\u79C1\u94A5\u7BA1\u7406"},{"level":2,"title":"BIP0039 \u52A9\u8BB0\u8BCD","slug":"bip0039-\u52A9\u8BB0\u8BCD"},{"level":2,"title":"BIP0044 \u7B80\u4ECB","slug":"bip0044-\u7B80\u4ECB"}],"relativePath":"blockchain/btcwallet/hdwallet-bip0032.md"}',t={},p=e(`<h1 id="bip-0032-\u5173\u4E8Ehdwallet\u89E3\u8BFB" tabindex="-1">bip-0032-\u5173\u4E8EHDWallet\u89E3\u8BFB <a class="header-anchor" href="#bip-0032-\u5173\u4E8Ehdwallet\u89E3\u8BFB" aria-hidden="true">#</a></h1><h3 id="bip0032\u7684\u6838\u5FC3\u5C31\u662F\u5B50\u79D8\u94A5\u7684\u63A8\u5BFC" tabindex="-1">BIP0032\u7684\u6838\u5FC3\u5C31\u662F\u5B50\u79D8\u94A5\u7684\u63A8\u5BFC <a class="header-anchor" href="#bip0032\u7684\u6838\u5FC3\u5C31\u662F\u5B50\u79D8\u94A5\u7684\u63A8\u5BFC" aria-hidden="true">#</a></h3><p>\u5982\u4F55\u4ECE\u7236\u79D8\u94A5(\u7236\u8282\u70B9)\u63A8\u51FA\u5B50\u79D8\u94A5(\u5B50\u8282\u70B9) \u53EF\u4EE5\u4ECE\u7236\u79C1\u94A5\u5230\u5B50\u79C1\u94A5 \u4E5F\u53EF\u4EE5\u4ECE\u7236\u516C\u94A5\u5230\u5B50\u516C\u94A5 \u4E5F\u53EF\u4EE5\u4ECE\u7236\u516C\u94A5\u5230\u5B50\u79C1\u94A5</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// Child returns a derived child extended key at the given index.  When this</span>
<span class="token comment">// extended key is a private extended key (as determined by the IsPrivate</span>
<span class="token comment">// function), a private extended key will be derived.  Otherwise, the derived</span>
<span class="token comment">// extended key will be also be a public extended key.</span>
<span class="token comment">//</span>
<span class="token comment">// When the index is greater to or equal than the HardenedKeyStart constant, the</span>
<span class="token comment">// derived extended key will be a hardened extended key.  It is only possible to</span>
<span class="token comment">// derive a hardended extended key from a private extended key.  Consequently,</span>
<span class="token comment">// this function will return ErrDeriveHardFromPublic if a hardened child</span>
<span class="token comment">// extended key is requested from a public extended key.</span>
<span class="token comment">//</span>
<span class="token comment">// A hardened extended key is useful since, as previously mentioned, it requires</span>
<span class="token comment">// a parent private extended key to derive.  In other words, normal child</span>
<span class="token comment">// extended public keys can be derived from a parent public extended key (no</span>
<span class="token comment">// knowledge of the parent private key) whereas hardened extended keys may not</span>
<span class="token comment">// be.</span>
<span class="token comment">//</span>
<span class="token comment">// NOTE: There is an extremely small chance (&lt; 1 in 2^127) the specific child</span>
<span class="token comment">// index does not derive to a usable child.  The ErrInvalidChild error will be</span>
<span class="token comment">// returned if this should occur, and the caller is expected to ignore the</span>
<span class="token comment">// invalid child and simply increment to the next index.</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>k <span class="token operator">*</span>ExtendedKey<span class="token punctuation">)</span> <span class="token function">Child</span><span class="token punctuation">(</span>i <span class="token builtin">uint32</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>ExtendedKey<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Prevent derivation of children beyond the max allowed depth.</span>
	<span class="token keyword">if</span> k<span class="token punctuation">.</span>depth <span class="token operator">==</span> maxUint8 <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> ErrDeriveBeyondMaxDepth
	<span class="token punctuation">}</span>

	<span class="token comment">// There are four scenarios that could happen here:</span>
	<span class="token comment">// 1) Private extended key -&gt; Hardened child private extended key</span>
	<span class="token comment">// 2) Private extended key -&gt; Non-hardened child private extended key</span>
	<span class="token comment">// 3) Public extended key -&gt; Non-hardened child public extended key</span>
	<span class="token comment">// 4) Public extended key -&gt; Hardened child public extended key (INVALID!)</span>

	<span class="token comment">// Case #4 is invalid, so error out early.</span>
	<span class="token comment">// A hardened child extended key may not be created from a public</span>
	<span class="token comment">// extended key.</span>
	isChildHardened <span class="token operator">:=</span> i <span class="token operator">&gt;=</span> HardenedKeyStart
	<span class="token keyword">if</span> <span class="token operator">!</span>k<span class="token punctuation">.</span>isPrivate <span class="token operator">&amp;&amp;</span> isChildHardened <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> ErrDeriveHardFromPublic
	<span class="token punctuation">}</span>

	<span class="token comment">// The data used to derive the child key depends on whether or not the</span>
	<span class="token comment">// child is hardened per [BIP32].</span>
	<span class="token comment">//</span>
	<span class="token comment">// For hardened children:</span>
	<span class="token comment">//   0x00 || ser256(parentKey) || ser32(i)</span>
	<span class="token comment">//</span>
	<span class="token comment">// For normal children:</span>
	<span class="token comment">//   serP(parentPubKey) || ser32(i)</span>
	keyLen <span class="token operator">:=</span> <span class="token number">33</span>
	data <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> keyLen<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> isChildHardened <span class="token punctuation">{</span>
		<span class="token comment">// Case #1.</span>
		<span class="token comment">// When the child is a hardened child, the key is known to be a</span>
		<span class="token comment">// private key due to the above early return.  Pad it with a</span>
		<span class="token comment">// leading zero as required by [BIP32] for deriving the child.</span>
		<span class="token function">copy</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token comment">// Case #2 or #3.</span>
		<span class="token comment">// This is either a public or private extended key, but in</span>
		<span class="token comment">// either case, the data which is used to derive the child key</span>
		<span class="token comment">// starts with the secp256k1 compressed public key bytes.</span>
		<span class="token function">copy</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> k<span class="token punctuation">.</span><span class="token function">pubKeyBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	binary<span class="token punctuation">.</span>BigEndian<span class="token punctuation">.</span><span class="token function">PutUint32</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>keyLen<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>

	<span class="token comment">// Take the HMAC-SHA512 of the current key&#39;s chain code and the derived</span>
	<span class="token comment">// data:</span>
	<span class="token comment">//   I = HMAC-SHA512(Key = chainCode, Data = data)</span>
	hmac512 <span class="token operator">:=</span> hmac<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>sha512<span class="token punctuation">.</span>New<span class="token punctuation">,</span> k<span class="token punctuation">.</span>chainCode<span class="token punctuation">)</span>
	hmac512<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
	ilr <span class="token operator">:=</span> hmac512<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span>

	<span class="token comment">// Split &quot;I&quot; into two 32-byte sequences Il and Ir where:</span>
	<span class="token comment">//   Il = intermediate key used to derive the child</span>
	<span class="token comment">//   Ir = child chain code</span>
	il <span class="token operator">:=</span> ilr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>ilr<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span>
	childChainCode <span class="token operator">:=</span> ilr<span class="token punctuation">[</span><span class="token function">len</span><span class="token punctuation">(</span>ilr<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

	<span class="token comment">// Both derived public or private keys rely on treating the left 32-byte</span>
	<span class="token comment">// sequence calculated above (Il) as a 256-bit integer that must be</span>
	<span class="token comment">// within the valid range for a secp256k1 private key.  There is a small</span>
	<span class="token comment">// chance (&lt; 1 in 2^127) this condition will not hold, and in that case,</span>
	<span class="token comment">// a child extended key can&#39;t be created for this index and the caller</span>
	<span class="token comment">// should simply increment to the next index.</span>
	<span class="token comment">//\u8FD9\u91CC\u76842^127\u662F\u600E\u4E48\u7B97\u51FA\u6765\u7684\u5462?</span>
	<span class="token comment">/*
	N=FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141
	\u5982\u679Cil\u662F\u5747\u5300\u5206\u5E03,\u90A3\u4E48\u51FA\u73B0\u5927\u4E8EN\u7684\u53EF\u80FD\u6027\u662FP{il&gt;N}=(MaxUint256-N)/MaxUint256
	\u7EA6\u7B49\u4E8E1/(2^127)
	\u4F46\u662F\u4E3A\u4EC0\u4E48\u8981\u6392\u9664\u8FD9\u79CD\u60C5\u51B5,\u800C\u4E0D\u662F\u53D6\u6A21\u5462
	 */</span>
	ilNum <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span>Int<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetBytes</span><span class="token punctuation">(</span>il<span class="token punctuation">)</span>
	<span class="token keyword">if</span> ilNum<span class="token punctuation">.</span><span class="token function">Cmp</span><span class="token punctuation">(</span>btcec<span class="token punctuation">.</span><span class="token function">S256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>N<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">||</span> ilNum<span class="token punctuation">.</span><span class="token function">Sign</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> ErrInvalidChild
	<span class="token punctuation">}</span>

	<span class="token comment">// The algorithm used to derive the child key depends on whether or not</span>
	<span class="token comment">// a private or public child is being derived.</span>
	<span class="token comment">//</span>
	<span class="token comment">// For private children:</span>
	<span class="token comment">//   childKey = parse256(Il) + parentKey</span>
	<span class="token comment">//</span>
	<span class="token comment">// For public children:</span>
	<span class="token comment">//   childKey = serP(point(parse256(Il)) + parentKey)</span>
	<span class="token keyword">var</span> isPrivate <span class="token builtin">bool</span>
	<span class="token keyword">var</span> childKey <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
	<span class="token keyword">if</span> k<span class="token punctuation">.</span>isPrivate <span class="token punctuation">{</span>
		<span class="token comment">// Case #1 or #2.</span>
		<span class="token comment">// Add the parent private key to the intermediate private key to</span>
		<span class="token comment">// derive the final child key.</span>
		<span class="token comment">//</span>
		<span class="token comment">// childKey = parse256(Il) + parenKey</span>
		keyNum <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span>Int<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetBytes</span><span class="token punctuation">(</span>k<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
		ilNum<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>ilNum<span class="token punctuation">,</span> keyNum<span class="token punctuation">)</span>
		ilNum<span class="token punctuation">.</span><span class="token function">Mod</span><span class="token punctuation">(</span>ilNum<span class="token punctuation">,</span> btcec<span class="token punctuation">.</span><span class="token function">S256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>N<span class="token punctuation">)</span>
		childKey <span class="token operator">=</span> ilNum<span class="token punctuation">.</span><span class="token function">Bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		isPrivate <span class="token operator">=</span> <span class="token boolean">true</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token comment">// Case #3.</span>
		<span class="token comment">// Calculate the corresponding intermediate public key for</span>
		<span class="token comment">// intermediate private key.</span>
		ilx<span class="token punctuation">,</span> ily <span class="token operator">:=</span> btcec<span class="token punctuation">.</span><span class="token function">S256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ScalarBaseMult</span><span class="token punctuation">(</span>il<span class="token punctuation">)</span>
		<span class="token keyword">if</span> ilx<span class="token punctuation">.</span><span class="token function">Sign</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> ily<span class="token punctuation">.</span><span class="token function">Sign</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> ErrInvalidChild
		<span class="token punctuation">}</span>

		<span class="token comment">// Convert the serialized compressed parent public key into X</span>
		<span class="token comment">// and Y coordinates so it can be added to the intermediate</span>
		<span class="token comment">// public key.</span>
		pubKey<span class="token punctuation">,</span> err <span class="token operator">:=</span> btcec<span class="token punctuation">.</span><span class="token function">ParsePubKey</span><span class="token punctuation">(</span>k<span class="token punctuation">.</span>key<span class="token punctuation">,</span> btcec<span class="token punctuation">.</span><span class="token function">S256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
		<span class="token punctuation">}</span>

		<span class="token comment">// Add the intermediate public key to the parent public key to</span>
		<span class="token comment">// derive the final child key.</span>
		<span class="token comment">//</span>
		<span class="token comment">// childKey = serP(point(parse256(Il)) + parentKey)</span>
		childX<span class="token punctuation">,</span> childY <span class="token operator">:=</span> btcec<span class="token punctuation">.</span><span class="token function">S256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>ilx<span class="token punctuation">,</span> ily<span class="token punctuation">,</span> pubKey<span class="token punctuation">.</span>X<span class="token punctuation">,</span> pubKey<span class="token punctuation">.</span>Y<span class="token punctuation">)</span>
		pk <span class="token operator">:=</span> btcec<span class="token punctuation">.</span>PublicKey<span class="token punctuation">{</span>Curve<span class="token punctuation">:</span> btcec<span class="token punctuation">.</span><span class="token function">S256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> X<span class="token punctuation">:</span> childX<span class="token punctuation">,</span> Y<span class="token punctuation">:</span> childY<span class="token punctuation">}</span>
		childKey <span class="token operator">=</span> pk<span class="token punctuation">.</span><span class="token function">SerializeCompressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token comment">/*
		childKey\u5BF9\u5E94\u7684\u79C1\u94A5\u662F\u4EC0\u4E48\u5462?
		K1=k1*G
		K2=k2*G
		K3=K1+K2=k1*G+k2*G=(k1+k2)*G
		\u56E0\u6B64K3\u5BF9\u5E94\u7684\u79C1\u94A5\u662Fk1+k2
		\u6240\u4EE5childKey\u5BF9\u5E94\u7684\u79C1\u94A5\u5C31\u662Fil+(k.key \u5BF9\u5E94\u7684\u79C1\u94A5)
		 */</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// The fingerprint of the parent for the derived child is the first 4</span>
	<span class="token comment">// bytes of the RIPEMD160(SHA256(parentPubKey)).</span>
	parentFP <span class="token operator">:=</span> btcutil<span class="token punctuation">.</span><span class="token function">Hash160</span><span class="token punctuation">(</span>k<span class="token punctuation">.</span><span class="token function">pubKeyBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>
	<span class="token keyword">return</span> <span class="token function">NewExtendedKey</span><span class="token punctuation">(</span>k<span class="token punctuation">.</span>version<span class="token punctuation">,</span> childKey<span class="token punctuation">,</span> childChainCode<span class="token punctuation">,</span> parentFP<span class="token punctuation">,</span>
		k<span class="token punctuation">.</span>depth<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> isPrivate<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br></div></div><h3 id="\u4E3A\u4EC0\u4E48\u6709\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u533A\u522B" tabindex="-1">\u4E3A\u4EC0\u4E48\u6709\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u533A\u522B <a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u6709\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u533A\u522B" aria-hidden="true">#</a></h3><p>\u5BF9\u4E8EIndex\u5927\u4E8E2^31\u7684\u5C31\u662F\u5F3A\u5316\u884D\u751F(isChildHardened), \u5F3A\u5316\u884D\u751F\u4F7F\u7528\u7236\u8282\u70B9\u7684\u79C1\u94A5\u884D\u751FChild\u7684\u79C1\u94A5\u548CchainCode, \u800C\u666E\u901A\u884D\u751F\u4F7F\u7528\u7236\u8282\u70B9\u7684\u516C\u94A5\u884D\u751Fchild\u7684\u79C1\u94A5\u548CchainCode.</p><h3 id="\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u7EC6\u8282" tabindex="-1">\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u7EC6\u8282 <a class="header-anchor" href="#\u5F3A\u5316\u884D\u751F\u548C\u666E\u901A\u884D\u751F\u7684\u7EC6\u8282" aria-hidden="true">#</a></h3><p>\u4E00\u4E0B\u6765\u81EA\u4E8Eextendkey.go\u4E2D\u7684Child\u51FD\u6570, \u8FD9\u4E24\u79CD\u65B9\u5F0F\u90FD\u662F\u5F97\u5230\u5B50\u8282\u70B9\u7684PrivateKey\u548CchildChainCode. \u540C\u65F6\u65E0\u6CD5\u901A\u8FC7\u5B50\u8282\u70B9\u7684PrivateKey\u548CchildChainCode\u6765\u5012\u63A8\u7236\u8282\u70B9\u7684.</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">if</span> isChildHardened <span class="token punctuation">{</span>
		<span class="token comment">// Case #1.</span>
		<span class="token comment">// When the child is a hardened child, the key is known to be a</span>
		<span class="token comment">// private key due to the above early return.  Pad it with a</span>
		<span class="token comment">// leading zero as required by [BIP32] for deriving the child.</span>
		<span class="token function">copy</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token comment">// Case #2 or #3.</span>
		<span class="token comment">// This is either a public or private extended key, but in</span>
		<span class="token comment">// either case, the data which is used to derive the child key</span>
		<span class="token comment">// starts with the secp256k1 compressed public key bytes.</span>
		<span class="token function">copy</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> k<span class="token punctuation">.</span><span class="token function">pubKeyBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	binary<span class="token punctuation">.</span>BigEndian<span class="token punctuation">.</span><span class="token function">PutUint32</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>keyLen<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>

	<span class="token comment">// Take the HMAC-SHA512 of the current key&#39;s chain code and the derived</span>
	<span class="token comment">// data:</span>
	<span class="token comment">//   I = HMAC-SHA512(Key = chainCode, Data = data)</span>
	hmac512 <span class="token operator">:=</span> hmac<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>sha512<span class="token punctuation">.</span>New<span class="token punctuation">,</span> k<span class="token punctuation">.</span>chainCode<span class="token punctuation">)</span>
	hmac512<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    ilr <span class="token operator">:=</span> hmac512<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span>
    	<span class="token comment">// Split &quot;I&quot; into two 32-byte sequences Il and Ir where:</span>
	<span class="token comment">//   Il = intermediate key used to derive the child</span>
	<span class="token comment">//   Ir = child chain code</span>
	il <span class="token operator">:=</span> ilr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>ilr<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span>
	childChainCode <span class="token operator">:=</span> ilr<span class="token punctuation">[</span><span class="token function">len</span><span class="token punctuation">(</span>ilr<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="\u7236\u8282\u70B9\u5230\u5B50\u8282\u70B9\u7684\u4E09\u79CD\u63A8\u5BFC\u65B9\u5F0F" tabindex="-1">\u7236\u8282\u70B9\u5230\u5B50\u8282\u70B9\u7684\u4E09\u79CD\u63A8\u5BFC\u65B9\u5F0F <a class="header-anchor" href="#\u7236\u8282\u70B9\u5230\u5B50\u8282\u70B9\u7684\u4E09\u79CD\u63A8\u5BFC\u65B9\u5F0F" aria-hidden="true">#</a></h3><h4 id="\u7236\u79C1\u94A5\u5230\u5B50\u79C1\u94A5" tabindex="-1">\u7236\u79C1\u94A5\u5230\u5B50\u79C1\u94A5 <a class="header-anchor" href="#\u7236\u79C1\u94A5\u5230\u5B50\u79C1\u94A5" aria-hidden="true">#</a></h4><p>index\u5927\u4E8E2^31,</p><div class="language-go line-numbers-mode"><pre><code>ilr<span class="token operator">:=</span><span class="token function">sha512</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>ParentPrivateKey<span class="token punctuation">,</span>index<span class="token punctuation">,</span>ParentChainCode<span class="token punctuation">)</span>
childPrivateKey<span class="token operator">:=</span>ilr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">32</span><span class="token punctuation">]</span>
childChainCode<span class="token operator">:=</span>ilr<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="\u7236\u516C\u94A5\u5230\u5B50\u79C1\u94A5" tabindex="-1">\u7236\u516C\u94A5\u5230\u5B50\u79C1\u94A5 <a class="header-anchor" href="#\u7236\u516C\u94A5\u5230\u5B50\u79C1\u94A5" aria-hidden="true">#</a></h4><p>index\u5C0F\u4E8E2^31</p><div class="language-go line-numbers-mode"><pre><code>ilr<span class="token operator">:=</span><span class="token function">sha512</span><span class="token punctuation">(</span>ParentPubicKey<span class="token punctuation">,</span>index<span class="token punctuation">,</span>ParentChainCode<span class="token punctuation">)</span>
childPrivateKey<span class="token operator">:=</span>ilr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">32</span><span class="token punctuation">]</span>
childChainCode<span class="token operator">:=</span>ilr<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token punctuation">]</span>


</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="\u7236\u516C\u94A5\u5230\u5B50\u516C\u94A5" tabindex="-1">\u7236\u516C\u94A5\u5230\u5B50\u516C\u94A5 <a class="header-anchor" href="#\u7236\u516C\u94A5\u5230\u5B50\u516C\u94A5" aria-hidden="true">#</a></h4><div class="language-go line-numbers-mode"><pre><code>ilr<span class="token operator">:=</span><span class="token function">sha512</span><span class="token punctuation">(</span>ParentPubicKey<span class="token punctuation">,</span>index<span class="token punctuation">,</span>ParentChainCode<span class="token punctuation">)</span>
il<span class="token operator">:=</span>ilr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">32</span><span class="token punctuation">]</span>
childChainCode<span class="token operator">:=</span>ilr<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
 ilx<span class="token punctuation">,</span> ily <span class="token operator">:=</span> btcec<span class="token punctuation">.</span><span class="token function">S256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ScalarBaseMult</span><span class="token punctuation">(</span>il<span class="token punctuation">)</span>
 childX<span class="token punctuation">,</span> childY <span class="token operator">:=</span> btcec<span class="token punctuation">.</span><span class="token function">S256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>ilx<span class="token punctuation">,</span> ily<span class="token punctuation">,</span> paretPubKey<span class="token punctuation">.</span>X<span class="token punctuation">,</span> paretPubKey<span class="token punctuation">.</span>Y<span class="token punctuation">)</span>
 pk <span class="token operator">:=</span> btcec<span class="token punctuation">.</span>PublicKey<span class="token punctuation">{</span>Curve<span class="token punctuation">:</span> btcec<span class="token punctuation">.</span><span class="token function">S256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> X<span class="token punctuation">:</span> childX<span class="token punctuation">,</span> Y<span class="token punctuation">:</span> childY<span class="token punctuation">}</span>
childPubKey <span class="token operator">=</span> pk<span class="token punctuation">.</span><span class="token function">SerializeCompressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>childKey\u5BF9\u5E94\u7684\u79C1\u94A5\u662F\u4EC0\u4E48\u5462? K1=k1<em>G K2=k2</em>G K3=K1+K2=k1<em>G+k2</em>G=(k1+k2)*G \u56E0\u6B64K3\u5BF9\u5E94\u7684\u79C1\u94A5\u662Fk1+k2 \u6240\u4EE5childKey\u5BF9\u5E94\u7684\u79C1\u94A5\u5C31\u662Fil+(k.key \u5BF9\u5E94\u7684\u79C1\u94A5)</p><p><strong>\u4ECE\u63A8\u5BFC\u8FC7\u7A0B\u53EF\u4EE5\u770B\u51FA,\u4E00\u65E6\u5B50\u79C1\u94A5\u66B4\u9732,\u8FD9\u79CD\u65B9\u5F0F\u4F1A\u5BFC\u81F4\u7236\u79C1\u94A5\u4E5F\u66B4\u9732</strong> \u4E0D\u8FC7\u8FD9\u79CD\u4E5F\u6709\u660E\u663E\u7684\u597D\u5904,\u5C31\u662F\u6211\u4E0D\u9700\u8981\u77E5\u9053\u7236\u79C1\u94A5,\u53EA\u9700\u8981\u77E5\u9053\u7236\u516C\u94A5\u548C\u7236chainCode\u5C31\u53EF\u4EE5\u63A8\u5BFC\u51FA\u6240\u6709\u9700\u8981\u7684\u6536\u6B3E\u5730\u5740. \u63A8\u5BFC\u4EBA\u81EA\u5DF1\u90FD\u4E0D\u77E5\u9053\u63A8\u5BFC\u51FA\u6765\u7684\u6536\u6B3E\u5730\u5740\u5BF9\u5E94\u7684\u79C1\u94A5\u662F\u4EC0\u4E48.</p><h2 id="bip0032\u6811\u72B6\u79C1\u94A5\u7BA1\u7406" tabindex="-1">BIP0032\u6811\u72B6\u79C1\u94A5\u7BA1\u7406 <a class="header-anchor" href="#bip0032\u6811\u72B6\u79C1\u94A5\u7BA1\u7406" aria-hidden="true">#</a></h2><p><img alt="" data-src="./img/hdwallet_1.jpg" loading="lazy" class="lazy"></p><h2 id="bip0039-\u52A9\u8BB0\u8BCD" tabindex="-1">BIP0039 \u52A9\u8BB0\u8BCD <a class="header-anchor" href="#bip0039-\u52A9\u8BB0\u8BCD" aria-hidden="true">#</a></h2><p><img alt="" data-src="./img/hdwallet_2.jpg" loading="lazy" class="lazy"></p><p>\u4ECE\u52A9\u8BB0\u8BCD\u5230Seed\u8FC7\u7A0B\u8981\u8BA1\u7B97\u8D77\u6765\u975E\u5E38\u8017\u65F6,\u5426\u5219\u5BB9\u6613\u88AB\u66B4\u529B\u653B\u7834 <img alt="" data-src="./img/hdwallet_3.jpg" loading="lazy" class="lazy"></p><h2 id="bip0044-\u7B80\u4ECB" tabindex="-1">BIP0044 \u7B80\u4ECB <a class="header-anchor" href="#bip0044-\u7B80\u4ECB" aria-hidden="true">#</a></h2><p>BIP 0044\u5B9E\u9645\u4E0A\u662F\u5982\u4F55\u89C4\u8303\u4F7F\u7528bip0032,\u6211\u4EEC\u4E00\u822C\u7684\u94B1\u5305\u90FD\u662F\u6811\u72B6\u7684, \u8FD9\u90E8\u5206\u6211\u6CA1\u770B\u61C2,\u4ED6\u662F\u600E\u4E48\u7BA1\u7406\u7684.</p><p>m / purpose&#39; / coin_type&#39; / account&#39; / change / address_index purpose\u603B\u662F44, \u7B2C\u4E8C\u5C42\u7684coin_type\u6709\u76F8\u5173\u89C4\u8303,\u81EA\u884C\u67E5\u8BE2\u5373\u53EF account\u5C31\u662F\u5BF9\u5E94\u94B1\u5305\u4E2D\u7684account</p><p>\u7B2C\u4E00\u5C42\u7684 purpose \u603B\u662F\u88AB\u8BBE\u5B9A\u4E3A 44&#39;\u3002 \u7B2C\u4E8C\u5C42\u7684\u201Ccoin_type\u201D\u7279\u6307\u5E01\u79CD\u5E76\u4E14\u5141\u8BB8\u591A\u5143\u8D27\u5E01 HD \u94B1\u5305\u4E2D\u7684\u8D27\u5E01\u5728\u7B2C\u4E8C\u4E2A\u5C42\u7EA7 \u4E0B\u6709\u81EA\u5DF1\u7684\u4E9A\u6811\u72B6\u7ED3\u6784\u3002\u76EE\u524D\u6709\u4E09\u79CD\u8D27\u5E01\u88AB\u5B9A\u4E49\uFF1ABitcoin is m/44&#39;/0&#39;\u3001Bitcoin Testnet is m/44&#39;/1&#39;\uFF0C\u4EE5\u53CA Litecoin is m/44&#39;/2&#39;\u3002 \u6811\u7684\u7B2C\u4E09\u5C42\u7EA7\u662F\u201Caccount\u201D\uFF0C\u8FD9\u53EF\u4EE5\u5141\u8BB8\u4F7F\u7528\u8005\u4E3A\u4E86\u4F1A\u8BA1\u6216\u8005\u7EC4\u7EC7\u76EE\u7684\uFF0C\u800C\u53BB\u518D\u7EC6 \u5206\u4ED6\u4EEC\u7684\u94B1\u5305\u5230\u72EC\u7ACB\u7684\u903B\u8F91\u6027\u4E9A\u8D26\u6237\u3002 \u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u4E00\u4E2A HD \u94B1\u5305\u53EF\u80FD\u5305\u542B\u4E24\u4E2A\u6BD4 \u7279\u5E01\u201C\u8D26\u6237\u201D\uFF1Am/44&#39;/0&#39;/0&#39; \u548C m/44&#39;/0&#39;/1&#39;\u3002\u6BCF\u4E2A\u8D26\u6237\u90FD\u662F\u5B83\u81EA\u5DF1\u4E9A\u6811\u7684\u6839\u3002</p><p>\u7B2C\u56DB\u5C42\u7EA7\u5C31\u662F\u201Cchange\u201D\u3002\u6BCF\u4E00\u4E2A HD \u94B1\u5305\u6709\u4E24\u4E2A\u4E9A\u6811\uFF0C\u4E00\u4E2A\u662F\u7528\u6765\u63A5\u6536\u5730\u5740\u4E00\u4E2A\u662F \u7528\u6765\u521B\u9020\u627E\u96F6\u5730\u5740\u3002\u6CE8\u610F\u65E0\u8BBA\u5148\u524D\u7684\u5C42\u7EA7\u662F\u5426\u4F7F\u7528\u5F3A\u5316\u884D\u751F\uFF0C\u8FD9\u4E00\u5C42\u7EA7\u4F7F\u7528\u7684\u90FD \u662F\u5E38\u89C4\u884D\u751F\u3002\u8FD9\u662F\u4E3A\u4E86\u5141\u8BB8\u8FD9\u4E00\u5C42\u7EA7\u7684\u6811\u53EF\u4EE5\u5728\u4E0D\u5B89\u5168\u73AF\u5883\u4E0B\uFF0C\u8F93\u51FA\u6269\u5C55\u516C\u94A5\u3002</p><p>\u88AB HD \u94B1\u5305\u884D\u751F\u7684\u53EF\u7528\u7684\u5730\u5740\u662F\u7B2C\u56DB\u5C42\u7EA7\u7684\u5B50\u7EA7\uFF0C\u5C31\u662F\u7B2C\u4E94\u5C42\u7EA7\u7684\u6811\u7684 \u201Caddress_index\u201D\u3002\u6BD4\u5982\uFF0C\u7B2C\u4E09\u4E2A\u5C42\u7EA7\u7684\u4E3B\u8D26\u6237\u6536\u5230\u6BD4\u7279\u5E01\u652F\u4ED8\u7684\u5730\u5740\u5C31\u662F M/44&#39;/0&#39;/0&#39;/0/2\u3002 \u8868 5-7 \u5C55\u793A\u4E86\u66F4\u591A\u7684\u4F8B\u5B50\u3002</p><table><thead><tr><th>HD\u8DEF\u5F84</th><th>\u4E3B\u8981\u63CF\u8FF0</th></tr></thead><tbody><tr><td>M/44&#39;/0&#39;/0&#39;/0/2</td><td>\u7B2C\u4E09\u4E2A\u6536\u5230\u516C\u5171\u94A5\u5319\u7684\u4E3B\u6BD4\u7279\u5E01\u8D26\u6237</td></tr><tr><td>M/44&#39;/0&#39;/3&#39;/1/14</td><td>\u7B2C\u5341\u4E94\u4E2A\u6539\u53D8\u5730\u5740\u516C\u94A5\u7684\u7B2C\u56DB\u4E2A\u6BD4\u7279\u5E01\u8D26\u6237</td></tr><tr><td>m/44&#39;/2&#39;/0&#39;/0/1</td><td>\u4E3A\u4E86\u7B7E\u7F72\u4EA4\u6613\u7684\u5728\u83B1\u7279\u5E01\u4E3B\u8D26\u6237\u7684\u7B2C\u4E8C\u4E2A\u79C1\u94A5</td></tr></tbody></table>`,32),c=[p];function o(l,i,u,r,k,b){return a(),s("div",null,c)}var h=n(t,[["render",o]]);export{m as __pageData,h as default};
