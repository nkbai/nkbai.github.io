import{_ as n,c as s,o as a,a as p}from"./app.be400e50.js";const d='{"title":"2.\u5728Libra\u4E2D\u5B66\u4E60Protobuf","description":"","frontmatter":{"title":"2.\u5728Libra\u4E2D\u5B66\u4E60Protobuf","date":"2019-06-23T03:00:34.000Z","draft":false,"tags":["rust","blockchain","libra"],"series":["libra"],"categories":["\u6280\u672F\u76F8\u5173"]},"headers":[{"level":2,"title":"\u7F16\u8BD1\u5B89\u88C5\u76F8\u5173\u4F9D\u8D56","slug":"\u7F16\u8BD1\u5B89\u88C5\u76F8\u5173\u4F9D\u8D56"},{"level":3,"title":"\u627E\u4E00\u4E2A\u6587\u4EF6\u8BD5\u8BD5","slug":"\u627E\u4E00\u4E2A\u6587\u4EF6\u8BD5\u8BD5"},{"level":2,"title":"\u5229\u7528build.rs\u81EA\u52A8\u5C06proto\u7F16\u8BD1\u6210rs","slug":"\u5229\u7528build-rs\u81EA\u52A8\u5C06proto\u7F16\u8BD1\u6210rs"},{"level":3,"title":"build.rs","slug":"build-rs"},{"level":3,"title":"\u7B80\u5355\u89E3\u8BFBbuild_helper","slug":"\u7B80\u5355\u89E3\u8BFBbuild-helper"},{"level":3,"title":"rust\u4E2D\u7684\u5B57\u7B26\u4E32\u5904\u7406","slug":"rust\u4E2D\u7684\u5B57\u7B26\u4E32\u5904\u7406"},{"level":2,"title":"FromProto\u548CIntoProto","slug":"fromproto\u548Cintoproto"}],"relativePath":"blockchain/libra/2.Protobuf_in_libria.md"}',t={},e=p(`<ul><li><a href="#%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96"> \u7F16\u8BD1\u5B89\u88C5\u76F8\u5173\u4F9D\u8D56</a><ul><li><a href="#%E6%89%BE%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E8%AF%95%E8%AF%95"> \u627E\u4E00\u4E2A\u6587\u4EF6\u8BD5\u8BD5</a></li></ul></li><li><a href="#%E5%88%A9%E7%94%A8buildrs%E8%87%AA%E5%8A%A8%E5%B0%86proto%E7%BC%96%E8%AF%91%E6%88%90rs"> \u5229\u7528build.rs\u81EA\u52A8\u5C06proto\u7F16\u8BD1\u6210rs</a><ul><li><a href="#buildrs"> build.rs</a></li><li><a href="#rust%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86"> rust\u4E2D\u7684\u5B57\u7B26\u4E32\u5904\u7406</a></li></ul></li><li><a href="#fromproto%E5%92%8Cintoproto"> FromProto\u548CIntoProto</a></li></ul><h2 id="\u7F16\u8BD1\u5B89\u88C5\u76F8\u5173\u4F9D\u8D56" tabindex="-1">\u7F16\u8BD1\u5B89\u88C5\u76F8\u5173\u4F9D\u8D56 <a class="header-anchor" href="#\u7F16\u8BD1\u5B89\u88C5\u76F8\u5173\u4F9D\u8D56" aria-hidden="true">#</a></h2><p>\u901A\u8FC7\u6267\u884C<code>./scripts/dev_setup.sh</code>\u662F\u53EF\u4EE5\u81EA\u52A8\u5B89\u88C5\u76F8\u5173\u4F9D\u8D56\u4EE5\u53CA\u7F16\u8BD1\u6574\u4E2Alibra\u7CFB\u7EDF\u7684. \u5982\u679C\u60F3\u81EA\u5DF1\u624B\u5DE5\u5B89\u88C5protobuf\u76F8\u5173\u4F9D\u8D56\u53EF\u4EE5\u5B89\u88C5\u5982\u4E0B\u6B65\u9AA4:</p><div class="language-bash line-numbers-mode"><pre><code>cargo <span class="token function">install</span> protobuf
cargo <span class="token function">install</span> protobuf-codegen
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6CE8\u610F:\u6211\u5F53\u524D\u4F7F\u7528\u7684\u662Fv2.6.2</p><h3 id="\u627E\u4E00\u4E2A\u6587\u4EF6\u8BD5\u8BD5" tabindex="-1">\u627E\u4E00\u4E2A\u6587\u4EF6\u8BD5\u8BD5 <a class="header-anchor" href="#\u627E\u4E00\u4E2A\u6587\u4EF6\u8BD5\u8BD5" aria-hidden="true">#</a></h3><p>\u8FD9\u662F\u6211\u4ECElibra\u4E2D\u62A0\u51FA\u6765\u7684,\u975E\u6E90\u6587\u4EF6,\u4F4D\u4E8Etransaction.proto.</p><div class="language-proto line-numbers-mode"><pre><code>syntax = &quot;proto3&quot;;

package types;
// Account state as a whole.
// After execution, updates to accounts are passed in this form to storage for
// persistence.
message AccountState {
    // Account address
    bytes address = 1;
    // Account state blob
    bytes blob = 2;
}
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FD0\u884C\u4E0B\u9762\u7684\u547D\u4EE4:</p><div class="language-"><pre><code>protoc --rust_out . accountstate.proto 
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p><a href="http://xn--accountstate-ft4sze8sn0h1zas29ai3an9w6j2ark5aq02b653exua.rs" target="_blank" rel="noopener noreferrer">\u53EF\u4EE5\u770B\u5230\u76EE\u5F55\u4E0B\u4F1A\u591A\u51FA\u6765\u4E00\u4E2Aaccountstate.rs</a> \u7B80\u5355\u770B\u4E00\u4E0B\u751F\u6210\u7684AccountState\u7ED3\u6784\u4F53</p><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[derive(PartialEq,Clone,Default)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">AccountState</span> <span class="token punctuation">{</span>
    <span class="token comment">// message fields</span>
    <span class="token keyword">pub</span> address<span class="token punctuation">:</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> blob<span class="token punctuation">:</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token comment">// special fields</span>
    <span class="token keyword">pub</span> unknown_fields<span class="token punctuation">:</span> <span class="token punctuation">::</span><span class="token namespace">protobuf<span class="token punctuation">::</span></span><span class="token class-name">UnknownFields</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> cached_size<span class="token punctuation">:</span> <span class="token punctuation">::</span><span class="token namespace">protobuf<span class="token punctuation">::</span></span><span class="token class-name">CachedSize</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;a</span><span class="token operator">&gt;</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>default<span class="token punctuation">::</span></span><span class="token class-name">Default</span> <span class="token keyword">for</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;a</span> <span class="token class-name">AccountState</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;a</span> <span class="token class-name">AccountState</span> <span class="token punctuation">{</span>
        <span class="token operator">&lt;</span><span class="token class-name">AccountState</span> <span class="token keyword">as</span> <span class="token punctuation">::</span><span class="token namespace">protobuf<span class="token punctuation">::</span></span><span class="token class-name">Message</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">default_instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">AccountState</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">AccountState</span> <span class="token punctuation">{</span>
        <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>default<span class="token punctuation">::</span></span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// bytes address = 1;</span>


    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
        <span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>address
    <span class="token punctuation">}</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">clear_address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Param is passed by value, moved</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">set_address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> v<span class="token punctuation">:</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>address <span class="token operator">=</span> v<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Mutable pointer to the field.</span>
    <span class="token comment">// If field is not initialized, it is initialized with default value first.</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">mut_address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">.</span>address
    <span class="token punctuation">}</span>

    <span class="token comment">// Take field</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">take_address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span></span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">.</span>address<span class="token punctuation">,</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// bytes blob = 2;</span>


    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_blob</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
        <span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>blob
    <span class="token punctuation">}</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">clear_blob</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>blob<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Param is passed by value, moved</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">set_blob</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> v<span class="token punctuation">:</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>blob <span class="token operator">=</span> v<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Mutable pointer to the field.</span>
    <span class="token comment">// If field is not initialized, it is initialized with default value first.</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">mut_blob</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">.</span>blob
    <span class="token punctuation">}</span>

    <span class="token comment">// Take field</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">take_blob</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span></span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">.</span>blob<span class="token punctuation">,</span> <span class="token punctuation">::</span><span class="token namespace">std<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div><p>\u9664\u4E86\u8FD9\u4E9B,\u8FD8\u4E3AAccountState\u81EA\u52A8\u751F\u6210\u4E86protobuf::Message,protobuf::Clear\u548Cstd::fmt::Debug\u63A5\u53E3.</p><p>*<em>\u6CE8\u610F\u5982\u679C\u662FService\u7684\u8BDD,\u4E00\u6837\u4F1A\u81EA\u52A8\u751F\u6210\u4E00\u4E2A</em>_grpc.rs\u6587\u4EF6,\u7528\u4E8E\u670D\u52A1\u7684\u5B9E\u73B0.</p><h2 id="\u5229\u7528build-rs\u81EA\u52A8\u5C06proto\u7F16\u8BD1\u6210rs" tabindex="-1">\u5229\u7528build.rs\u81EA\u52A8\u5C06proto\u7F16\u8BD1\u6210rs <a class="header-anchor" href="#\u5229\u7528build-rs\u81EA\u52A8\u5C06proto\u7F16\u8BD1\u6210rs" aria-hidden="true">#</a></h2><p>rust\u5728\u5DE5\u7A0B\u5316\u65B9\u9762\u505A\u7684\u975E\u5E38\u53CB\u597D,\u6211\u4EEC\u53EF\u4EE5\u7F16\u8BD1\u7684\u8FC7\u7A0B\u90FD\u53EF\u4EE5\u4ECB\u5165. <a href="http://xn--build-bi1hrti9a3z5djeg0sj7pipnom1c4ycs61irqba5624n.rs" target="_blank" rel="noopener noreferrer">\u4E5F\u5C31\u662F\u5982\u679C\u6211\u4EEC\u7684\u9879\u76EE\u76EE\u5F55\u4E0B\u6709build.rs</a>,\u90A3\u4E48\u5728\u8FD0\u884Ccargo build\u4E4B\u524D\u4F1A\u81EA\u52A8\u7F16\u8BD1\u7136\u540E\u8FD0\u884C\u6B64\u7A0B\u5E8F. \u76F8\u5F53\u4E8E\u5728\u9879\u76EE\u76EE\u5F55\u4E0B\u8FD0\u884C<code>cargo run build.rs</code>\u7136\u540E\u518D\u53BBbuild. \u8FD9\u770B\u8D77\u6765\u6709\u70B9\u7C7B\u4F3C\u4E8Ego\u4E2D\u7684<code>//go:generate command argument...</code>,\u4F46\u662F\u8981\u66F4\u4E3A\u5F3A\u5927,\u66F4\u4E3A\u7075\u6D3B.</p><h3 id="build-rs" tabindex="-1"><a href="http://build.rs" target="_blank" rel="noopener noreferrer">build.rs</a> <a class="header-anchor" href="#build-rs" aria-hidden="true">#</a></h3><p><a href="http://xn--Libraprotobuild-9e3xlf8vsb49j76ejw6aia161eja689qpa4090ax1z3d3dzu6e70ccab4954uyk5bea.rs" target="_blank" rel="noopener noreferrer">\u5728Libra\u4E2D\u5305\u542B\u4E86proto\u7684\u5B50\u9879\u76EE\u90FD\u4F1A\u5728\u9879\u76EE\u6839\u76EE\u5F55\u4E0B\u5305\u542B\u4E00\u4E2Abuild.rs</a>. \u5176\u5185\u5BB9\u975E\u5E38\u7B80\u5355.</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> proto_root <span class="token operator">=</span> <span class="token string">&quot;src/proto&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> dependent_root <span class="token operator">=</span> <span class="token string">&quot;../../types/src/proto&quot;</span><span class="token punctuation">;</span>

    <span class="token namespace">build_helpers<span class="token punctuation">::</span>build_helpers<span class="token punctuation">::</span></span><span class="token function">compile_proto</span><span class="token punctuation">(</span>
        proto_root<span class="token punctuation">,</span>
        <span class="token macro property">vec!</span><span class="token punctuation">[</span>dependent_root<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">/* generate_client_code */</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8FD9\u662Fstorage_proto/build.rs, \u4E3B\u8981\u6709\u4E24\u4E2A\u53C2\u6570\u662Fproto_root\u548Cdependent_root</p><ol><li>proto_root\u8868\u793A\u8981\u81EA\u52A8\u8F6C\u6362\u7684proto\u6240\u5728\u76EE\u5F55</li><li>dependent_root \u8868\u793A\u7F16\u8BD1\u8FD9\u4E9Bproto\u6587\u4EF6import\u6240\u5F15\u7528\u7684\u76EE\u5F55,\u4E5F\u5C31\u662Fprotoc -I\u53C2\u6570\u6307\u5B9A\u7684\u76EE\u5F55. \u5F53\u7136\u7F16\u8BD1\u6210\u7684rs\u6587\u4EF6\u5982\u679C\u8981\u6B63\u5E38\u5DE5\u4F5C,\u90A3\u4E48\u4E5F\u5FC5\u987B\u7F16\u8BD1dependent_root\u4E2D\u7684\u6240\u6709proto\u6587\u4EF6\u624D\u884C \u81F3\u4E8E\u7B2C\u4E09\u4E2A\u53C2\u6570generate_client_code, \u5219\u8868\u793A\u662F\u5426\u751F\u6210client\u4EE3\u7801,\u4E5F\u5C31\u662F\u5982\u679Cproto\u4E2D\u5305\u542BService,\u90A3\u4E48\u662F\u5426\u4E5F\u751F\u6210grpc client\u7684\u8F85\u52A9\u4EE3\u7801.</li></ol><h3 id="\u7B80\u5355\u89E3\u8BFBbuild-helper" tabindex="-1">\u7B80\u5355\u89E3\u8BFBbuild_helper <a class="header-anchor" href="#\u7B80\u5355\u89E3\u8BFBbuild-helper" aria-hidden="true">#</a></h3><p>build_helper\u4F4D\u4E8Ecommon/build_helper,\u662F\u4E3A\u4E86\u8F85\u52A9\u81EA\u52A8\u5C06proto\u6587\u4EF6\u7F16\u8BD1\u6210rs\u6587\u4EF6.</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">compile_proto</span><span class="token punctuation">(</span>proto_root<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">,</span> dependent_roots<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> generate_client_code<span class="token punctuation">:</span> <span class="token keyword">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">let</span> <span class="token keyword">mut</span> additional_includes <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> dependent_root <span class="token keyword">in</span> dependent_roots <span class="token punctuation">{</span>
       <span class="token comment">// First compile dependent directories</span>
       <span class="token function">compile_dir</span><span class="token punctuation">(</span>
           <span class="token operator">&amp;</span>dependent_root<span class="token punctuation">,</span>
           <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">/* additional_includes */</span>
           <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">/* generate_client_code */</span>
       <span class="token punctuation">)</span><span class="token punctuation">;</span>
       additional_includes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">Path</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>dependent_root<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_path_buf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// Now compile this directory</span>
   <span class="token function">compile_dir</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>proto_root<span class="token punctuation">,</span> additional_includes<span class="token punctuation">,</span> generate_client_code<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Compile all of the proto files in proto_root directory and use the additional</span>
<span class="token comment">// includes when compiling.</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">compile_dir</span><span class="token punctuation">(</span>
   proto_root<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">,</span>
   additional_includes<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">PathBuf</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
   generate_client_code<span class="token punctuation">:</span> <span class="token keyword">bool</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">for</span> entry <span class="token keyword">in</span> <span class="token class-name">WalkDir</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>proto_root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">let</span> p <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> p<span class="token punctuation">.</span><span class="token function">file_type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">continue</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token keyword">let</span> path <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extension</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">if</span> ext <span class="token operator">!=</span> <span class="token string">&quot;proto&quot;</span> <span class="token punctuation">{</span>
               <span class="token keyword">continue</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
           <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;cargo:rerun-if-changed={}&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token function">compile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>path<span class="token punctuation">,</span> <span class="token operator">&amp;</span>additional_includes<span class="token punctuation">,</span> generate_client_code<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">compile</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Path</span><span class="token punctuation">,</span> additional_includes<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token class-name">PathBuf</span><span class="token punctuation">]</span><span class="token punctuation">,</span> generate_client_code<span class="token punctuation">:</span> <span class="token keyword">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token punctuation">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>build.rs\u76F4\u63A5\u8C03\u7528\u7684\u5C31\u662Fcompile_proto\u8FD9\u4E2A\u51FD\u6570,\u4ED6\u975E\u5E38\u7B80\u5355\u5C31\u662F\u5148\u8C03\u7528compile_dir\u6765\u7F16\u8BD1\u6240\u6709\u7684\u4F9D\u8D56,\u7136\u540E\u518D\u7F16\u8BD1\u81EA\u8EAB.</p><p>\u800Ccompile_dir\u5219\u662F\u904D\u5386\u6307\u5B9A\u7684\u76EE\u5F55,\u5229\u7528<code>WalkDir</code>\u67E5\u627E\u5F53\u524D\u76EE\u5F55\u4E0B\u6240\u6709\u7684proto\u6587\u4EF6,\u7136\u540E\u9010\u4E2A\u8C03\u7528compile\u8FDB\u884C\u7F16\u8BD1.</p><h3 id="rust\u4E2D\u7684\u5B57\u7B26\u4E32\u5904\u7406" tabindex="-1">rust\u4E2D\u7684\u5B57\u7B26\u4E32\u5904\u7406 <a class="header-anchor" href="#rust\u4E2D\u7684\u5B57\u7B26\u4E32\u5904\u7406" aria-hidden="true">#</a></h3><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">compile</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Path</span><span class="token punctuation">,</span> additional_includes<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token class-name">PathBuf</span><span class="token punctuation">]</span><span class="token punctuation">,</span> generate_client_code<span class="token punctuation">:</span> <span class="token keyword">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> parent <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> src_path <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">to_owned</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_path_buf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    src_path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> <span class="token keyword">mut</span> includes <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span>additional_includes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5199\u6210additional_includes.to_owned()\u4E5F\u662F\u53EF\u4EE5\u7684</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> includes <span class="token operator">=</span> additional_includes<span class="token punctuation">.</span><span class="token function">to_owned</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6700\u7EC8\u90FD\u4F1A\u8C03\u7528slice\u7684to_vec</span>
    includes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">to_path_buf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8981\u8DDF\u64CD\u4F5C\u7CFB\u7EDF\u6253\u4EA4\u9053\uFF0C\u2FB8\u5148\u9700\u8981\u4ECB\u7ECD\u7684\u662F\u4E24\u4E2A\u5B57\u7B26\u4E32\u7C7B\u578B\uFF1AOsString \u4EE5\u53CA\u5B83\u6240\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\u5207\u2F5A\u7C7B\u578BOsStr\u3002\u5B83\u4EEC\u5B58\u5728\u4E8Estd\uFF1A\uFF1Affi\u6A21\u5757\u4E2D\u3002</p><p>Rust\u6807\u51C6\u7684\u5B57\u7B26\u4E32\u7C7B\u578B\u662FString\u548Cstr\u3002\u5B83\u4EEC\u7684\u2F00\u4E2A\u91CD\u8981\u7279\u70B9\u662F\u4FDD\u8BC1\u4E86\u5185 \u90E8\u7F16\u7801\u662F\u7EDF\u2F00\u7684utf-8\u3002\u4F46\u662F\uFF0C\u5F53\u6211\u4EEC\u548C\u5177\u4F53\u7684\u64CD\u4F5C\u7CFB\u7EDF\u6253\u4EA4\u9053\u65F6\uFF0C\u7EDF\u2F00\u7684 utf-8\u7F16\u7801\u662F\u4E0D\u591F\u2F64\u7684\uFF0C\u67D0\u4E9B\u64CD\u4F5C\u7CFB\u7EDF\u5E76\u6CA1\u6709\u89C4\u5B9A\u2F00\u5B9A\u662F\u2F64\u7684utf-8\u7F16\u7801\u3002\u6240 \u4EE5\uFF0C\u5728\u548C\u64CD\u4F5C\u7CFB\u7EDF\u6253\u4EA4\u9053\u7684\u65F6\u5019\uFF0CString/str\u7C7B\u578B\u5E76\u4E0D\u662F\u2F00\u4E2A\u5F88\u597D\u7684\u9009\u62E9\u3002 \u2F50\u5982\u5728Windows\u7CFB\u7EDF\u4E0A\uFF0C\u5B57\u7B26\u2F00\u822C\u662F\u2F6416\u4F4D\u6570\u5B57\u6765\u8868\u2F70\u7684\u3002</p><p>\u4E3A\u4E86\u5E94\u4ED8\u8FD9\u6837\u7684\u60C5\u51B5\uFF0CRust\u5728\u6807\u51C6\u5E93\u4E2D\u53C8\u8BBE\u8BA1\u4E86OsString/OsStr\u6765\u5904\u7406 \u8FD9\u6837\u7684\u60C5\u51B5\u3002\u8FD9\u4E24\u79CD\u7C7B\u578B\u643A\u5E26\u7684\u2F45\u6CD5\u8DDFString/str\u2FAE\u5E38\u7C7B\u4F3C\uFF0C\u2F64\u8D77\u6765\u2F0F\u4E4E\u6CA1 \u4EC0\u4E48\u533A\u522B\uFF0C\u5B83\u4EEC\u4E4B\u95F4\u4E5F\u53EF\u4EE5\u76F8\u4E92\u8F6C\u6362\u3002</p><p>Rust\u6807\u51C6\u5E93\u4E2D\u2F64PathBuf\u548CPath\u4E24\u4E2A\u7C7B\u578B\u6765\u5904\u7406\u8DEF\u5F84\u3002\u5B83\u4EEC\u4E4B\u95F4\u7684\u5173\u7CFB \u5C31\u7C7B\u4F3CString\u548Cstr\u4E4B\u95F4\u7684\u5173\u7CFB\uFF1A\u2F00\u4E2A\u5BF9\u5185\u90E8\u6570\u636E\u6709\u6240\u6709\u6743\uFF0C\u8FD8\u6709\u2F00\u4E2A\u53EA\u662F\u501F \u2F64\u3002\u5B9E\u9645\u4E0A\uFF0C\u8BFB\u6E90\u7801\u53EF\u77E5\uFF0CPathBuf\u2FA5\u2FAF\u5B58\u7684\u662F\u2F00\u4E2AOsString\uFF0CPath\u2FA5\u2FAF\u5B58 \u7684\u662F\u2F00\u4E2AOsStr\u3002\u8FD9\u4E24\u4E2A\u7C7B\u578B\u5B9A\u4E49\u5728std\uFF1A\uFF1Apath\u6A21\u5757\u4E2D\u3002</p><p>\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\u53EF\u4EE5\u65B9\u4FBF\u7684\u5728\u5B57\u7B26\u4E32\u548CPath,PathBuf\u4E4B\u95F4\u8FDB\u884C\u4EFB\u610F\u8F6C\u6362. \u5728compile_dir\u7684\u7B2C23\u884C\u4E2D,\u6211\u4EEC\u63D0\u4F9B\u7ED9WalkDir::new\u4E00\u4E2A&amp;str,rust\u81EA\u52A8\u5C06\u5176\u8F6C\u6362\u4E3A\u4E86Path.</p><h2 id="fromproto\u548Cintoproto" tabindex="-1">FromProto\u548CIntoProto <a class="header-anchor" href="#fromproto\u548Cintoproto" aria-hidden="true">#</a></h2><p>\u51FA\u4E8E\u8DE8\u5E73\u53F0\u7684\u8003\u8651,proto\u6587\u4EF6\u4E2D\u7684\u6570\u636E\u7C7B\u578B\u8868\u8FBE\u80FD\u529B\u80AF\u5B9A\u4E0D\u5982rust\u4E30\u5BCC,\u6240\u4EE5\u4E0D\u53EF\u907F\u514D\u9700\u8981\u5728\u4E24\u8005\u4E4B\u95F4\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362. \u56E0\u6B64Libra\u4E2D\u63D0\u4F9B\u4E86proto_conv\u63A5\u53E3\u4E13\u95E8\u7528\u4E8E\u5B9E\u73B0\u4E24\u8005\u4E4B\u95F4\u7684\u8F6C\u6362. \u6BD4\u5982:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token comment">/// Helper to construct and parse [\`proto::storage::GetAccountStateWithProofByStateRootRequest\`]</span>
<span class="token comment">///</span>
<span class="token comment">/// It does so by implementing [\`IntoProto\`](#impl-IntoProto) and [\`FromProto\`](#impl-FromProto),</span>
<span class="token comment">/// providing [\`into_proto\`](IntoProto::into_proto) and [\`from_proto\`](FromProto::from_proto).</span>
<span class="token attribute attr-name">#[derive(PartialEq, Eq, Clone, FromProto, IntoProto)]</span>
<span class="token attribute attr-name">#[ProtoType(crate::proto::storage::GetAccountStateWithProofByStateRootRequest)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">GetAccountStateWithProofByStateRootRequest</span> <span class="token punctuation">{</span>
    <span class="token comment">/// The access path to query with.</span>
    <span class="token keyword">pub</span> address<span class="token punctuation">:</span> <span class="token class-name">AccountAddress</span><span class="token punctuation">,</span>

    <span class="token comment">/// the state root hash the query is based on.</span>
    <span class="token keyword">pub</span> state_root_hash<span class="token punctuation">:</span> <span class="token class-name">HashValue</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">/// Helper to construct and parse [\`proto::storage::GetAccountStateWithProofByStateRootResponse\`]</span>
<span class="token comment">///</span>
<span class="token comment">/// It does so by implementing [\`IntoProto\`](#impl-IntoProto) and [\`FromProto\`](#impl-FromProto),</span>
<span class="token comment">/// providing [\`into_proto\`](IntoProto::into_proto) and [\`from_proto\`](FromProto::from_proto).</span>
<span class="token attribute attr-name">#[derive(PartialEq, Eq, Clone)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">GetAccountStateWithProofByStateRootResponse</span> <span class="token punctuation">{</span>
    <span class="token comment">/// The account state blob requested.</span>
    <span class="token keyword">pub</span> account_state_blob<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">AccountStateBlob</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">/// The state root hash the query is based on.</span>
    <span class="token keyword">pub</span> sparse_merkle_proof<span class="token punctuation">:</span> <span class="token class-name">SparseMerkleProof</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u9488\u5BF9<code>GetAccountStateWithProofByStateRootRequest</code>\u53EF\u4EE5\u81EA\u52A8\u5728<code>crate::proto::storage::GetAccountStateWithProofByStateRootRequest</code>\u548C<code>GetAccountStateWithProofByStateRootRequest</code>\u4E4B\u95F4\u8FDB\u884C\u8F6C\u6362,\u53EA\u9700\u8981derive(FromProto,IntoProto)\u5373\u53EF. \u800C\u9488\u5BF9GetAccountStateWithProofByStateRootResponse \u5219\u7531\u4E8E\u53EA\u80FD\u624B\u5DE5\u5B9E\u73B0.</p><div class="language-rust line-numbers-mode"><pre><code>
<span class="token keyword">impl</span> <span class="token class-name">FromProto</span> <span class="token keyword">for</span> <span class="token class-name">GetAccountStateWithProofByStateRootResponse</span> <span class="token punctuation">{</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">ProtoType</span> <span class="token operator">=</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>proto<span class="token punctuation">::</span>storage<span class="token punctuation">::</span></span><span class="token class-name">GetAccountStateWithProofByStateRootResponse</span><span class="token punctuation">;</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">from_proto</span><span class="token punctuation">(</span><span class="token keyword">mut</span> object<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">ProtoType</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token keyword">Self</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> account_state_blob <span class="token operator">=</span> <span class="token keyword">if</span> object<span class="token punctuation">.</span><span class="token function">has_account_state_blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">AccountStateBlob</span><span class="token punctuation">::</span><span class="token function">from_proto</span><span class="token punctuation">(</span>
                object<span class="token punctuation">.</span><span class="token function">take_account_state_blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">None</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token keyword">Self</span> <span class="token punctuation">{</span>
            account_state_blob<span class="token punctuation">,</span>
            sparse_merkle_proof<span class="token punctuation">:</span> <span class="token class-name">SparseMerkleProof</span><span class="token punctuation">::</span><span class="token function">from_proto</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">take_sparse_merkle_proof</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">IntoProto</span> <span class="token keyword">for</span> <span class="token class-name">GetAccountStateWithProofByStateRootResponse</span> <span class="token punctuation">{</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">ProtoType</span> <span class="token operator">=</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>proto<span class="token punctuation">::</span>storage<span class="token punctuation">::</span></span><span class="token class-name">GetAccountStateWithProofByStateRootResponse</span><span class="token punctuation">;</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">into_proto</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">ProtoType</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> object <span class="token operator">=</span> <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">ProtoType</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>account_state_blob<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>account_state_blob <span class="token punctuation">{</span>
            object<span class="token punctuation">.</span><span class="token function">set_account_state_blob</span><span class="token punctuation">(</span>account_state_blob<span class="token punctuation">.</span><span class="token function">into_proto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        object<span class="token punctuation">.</span><span class="token function">set_sparse_merkle_proof</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>sparse_merkle_proof<span class="token punctuation">.</span><span class="token function">into_proto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        object
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,38),o=[e];function c(l,u,r,i,k,b){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
