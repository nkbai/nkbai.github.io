import{_ as s,c as n,o as a,N as l}from"./chunks/framework.3a9190c5.js";const F=JSON.parse('{"title":"rpcclient","description":"","frontmatter":{"title":"rpcclient","date":"2018-11-29T03:57:26.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/btcd/rpcclient.md"}'),p={name:"blockchain/btcd/rpcclient.md"},e=l(`<h1 id="rpc-client-模块" tabindex="-1">rpc client 模块 <a class="header-anchor" href="#rpc-client-模块" aria-label="Permalink to &quot;rpc client 模块&quot;">​</a></h1><p>这个模块是进行rpc调用的入口模块,是为了帮助btcd的客户端程序实现而设计的模块,注意btcctl并没有用此模块,它直接用的是btcjson.</p><p>这个模块式在btcjson上面再次封装,方便调用</p><h2 id="创建client" tabindex="-1">创建client <a class="header-anchor" href="#创建client" aria-label="Permalink to &quot;创建client&quot;">​</a></h2><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">connCfg </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">rpcclient</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ConnConfig</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">192.168.124.13:18334</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		User</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bai</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		Pass</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bai</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		HTTPPostMode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Bitcoin core only supports HTTP POST mode</span></span>
<span class="line"><span style="color:#A6ACCD;">		DisableTLS</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">false,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Bitcoin core does not provide TLS by default,</span></span>
<span class="line"><span style="color:#A6ACCD;">		Certificates</span><span style="color:#89DDFF;">:[]</span><span style="color:#82AAFF;">byte</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">-----BEGIN CERTIFICATE-----</span></span>
<span class="line"><span style="color:#C3E88D;">MIICTzCCAbGgAwIBAgIQLZMB/bcvEeMIuQSobOhvcTAKBggqhkjOPQQDBDAhMREw</span></span>
<span class="line"><span style="color:#C3E88D;">DwYDVQQKEwhnZW5jZXJ0czEMMAoGA1UEAxMDZXRoMB4XDTE4MTEyNzA2MzYxMFoX</span></span>
<span class="line"><span style="color:#C3E88D;">DTI4MTEyNTA2MzYxMFowITERMA8GA1UEChMIZ2VuY2VydHMxDDAKBgNVBAMTA2V0</span></span>
<span class="line"><span style="color:#C3E88D;">aDCBmzAQBgcqhkjOPQIBBgUrgQQAIwOBhgAEAD5A5+3tRK2UDwmIUYfkWPzXtS67</span></span>
<span class="line"><span style="color:#C3E88D;">zjgToegCMGkgzEwWrOJvaPj2uFy95v5hsozmfyh5cZY1o2FHOGrYnVNQcxE+AW9Z</span></span>
<span class="line"><span style="color:#C3E88D;">Oofsgz+4SPY7W8bTkZka6670ejZ1EMfPwFio7ObyVEZt4eFe7xVQ9pJEwg3XWM2c</span></span>
<span class="line"><span style="color:#C3E88D;">YdT6xpn0gQAQ9canuWa8o4GHMIGEMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8E</span></span>
<span class="line"><span style="color:#C3E88D;">BTADAQH/MGEGA1UdEQRaMFiCA2V0aIIJbG9jYWxob3N0hwR/AAABhxAAAAAAAAAA</span></span>
<span class="line"><span style="color:#C3E88D;">AAAAAAAAAAABhwTAqHwNhwQKAABkhxD+gAAAAAAAADrVR//+ALeGhxD+gAAAAAAA</span></span>
<span class="line"><span style="color:#C3E88D;">ALj9/f/+anOwMAoGCCqGSM49BAMEA4GLADCBhwJBU0neT5MZvmRwXnUXUdorOojt</span></span>
<span class="line"><span style="color:#C3E88D;">B2sqIW1eZkb6xZzZTnbjLaU+EFdMsdHYxXcM9eAHSbtKbRmsCh+DBL7sWuMNiJYC</span></span>
<span class="line"><span style="color:#C3E88D;">QgFRgh2wZofvEBFVLXGTgawWv8qIqgneOflIcl4cukbA7PLLZ5nfHCO/iC7oP6JH</span></span>
<span class="line"><span style="color:#C3E88D;">bkGHJJz1CYKS12HU4jzSZYq7eQ==</span></span>
<span class="line"><span style="color:#C3E88D;">-----END CERTIFICATE-----</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Notice the notification parameter is nil since notifications are</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// not supported in HTTP POST mode.</span></span>
<span class="line"><span style="color:#A6ACCD;">	client</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> rpcclient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">New</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">connCfg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Fatal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>如果要调用在另一台电脑上运行的btcd,就必须指定正确的证书,否则无法建立有效连接.</p><h2 id="http-调用分析" tabindex="-1">http 调用分析 <a class="header-anchor" href="#http-调用分析" aria-label="Permalink to &quot;http 调用分析&quot;">​</a></h2><p>以GetBlockCount为例进行分析</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">c </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Client</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetBlockCountAsync</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> FutureGetBlockCountResult </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	cmd </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> btcjson</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewGetBlockCountCmd</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendCmd</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cmd</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// GetBlockCount returns the number of blocks in the longest block chain.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">c </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Client</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetBlockCount</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int64</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetBlockCountAsync</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Receive</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>真正通用部分的处理都在infrastructure.go中,该文件处理了如何发送和派发消息,兼顾http和websocket两种连接方式.</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// start begins processing input and output messages.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">c </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Client</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Tracef</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Starting RPC client %s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Host</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Start the I/O processing handlers depending on whether the client is</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// in HTTP POST mode or the default websocket mode.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HTTPPostMode </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendPostHandler</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ntfnHandlers </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ntfnHandlers</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OnClientConnected </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">					c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ntfnHandlers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">OnClientConnected</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">			c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Done</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">wsInHandler</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">wsOutHandler</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>启动过程就可以看出来,对于http就是启动一个接受上层发起post请求的chan就可以了. 但是websocket是两个,一个是接受上层发送消息请求,一个是接受服务器主动发送来的消息. 也就是说在websocket方式下,所有的消息走的都是websocket消息.</p><p>相对http来说,收到的消息明确知道派发到哪个Response,但是websocket就必须通过id来处理.因此处理http消息的是handleSendPostMessage,而处理websocket消息的是handleMessage</p><p>因此最终在handleSendPostMessage中FutureGetBlockCountResult的Receive收到数据,并进行解析,然后返回.</p><h2 id="websocket连接的事件推送" tabindex="-1">websocket连接的事件推送 <a class="header-anchor" href="#websocket连接的事件推送" aria-label="Permalink to &quot;websocket连接的事件推送&quot;">​</a></h2><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// handleMessage is the main handler for incoming notifications and responses.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">c </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Client</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handleMessage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Attempt to unmarshal the message as either a notification or</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// response.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> in inMessage</span></span>
<span class="line"><span style="color:#A6ACCD;">	json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Unmarshal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// JSON-RPC 1.0 notifications are requests with a null id.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ID </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		ntfn </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rawNotification</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// Deliver the notification.</span></span>
<span class="line"><span style="color:#A6ACCD;">		log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Tracef</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Received notification [%s]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Method</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">handleNotification</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rawNotification</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	id </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">uint64</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ID</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Tracef</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Received response for id %d (result %s)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	request </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeRequest</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Nothing more to do if there is no request associated with this reply.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> request </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">responseChan </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Warnf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Received unexpected reply: %s (id %d)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Result</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			id</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Since the command was successful, examine it to see if it&#39;s a</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// notification, and if is, add it to the notification state so it</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// can automatically be re-established on reconnect.</span></span>
<span class="line"><span style="color:#A6ACCD;">	c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trackRegisteredNtfns</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cmd</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Deliver the response.</span></span>
<span class="line"><span style="color:#A6ACCD;">	result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> in</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rawResponse</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">result</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	request</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">responseChan </span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> err</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>服务器的主动推送的Notification,消息中是没有ID一项的,如果是客户端的请求消息,服务器推送消息肯定包含ID.</p><p>以下是服务器可以主动推送的事件.</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#89DDFF;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// BlockConnectedNtfnMethod is the legacy, deprecated method used for</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// notifications from the chain server that a block has been connected.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// NOTE: Deprecated. Use FilteredBlockConnectedNtfnMethod instead.</span></span>
<span class="line"><span style="color:#A6ACCD;">	BlockConnectedNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">blockconnected</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// BlockDisconnectedNtfnMethod is the legacy, deprecated method used for</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// notifications from the chain server that a block has been</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// disconnected.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// NOTE: Deprecated. Use FilteredBlockDisconnectedNtfnMethod instead.</span></span>
<span class="line"><span style="color:#A6ACCD;">	BlockDisconnectedNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">blockdisconnected</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// FilteredBlockConnectedNtfnMethod is the new method used for</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// notifications from the chain server that a block has been connected.</span></span>
<span class="line"><span style="color:#A6ACCD;">	FilteredBlockConnectedNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">filteredblockconnected</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// FilteredBlockDisconnectedNtfnMethod is the new method used for</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// notifications from the chain server that a block has been</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// disconnected.</span></span>
<span class="line"><span style="color:#A6ACCD;">	FilteredBlockDisconnectedNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">filteredblockdisconnected</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// RecvTxNtfnMethod is the legacy, deprecated method used for</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// notifications from the chain server that a transaction which pays to</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// a registered address has been processed.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// NOTE: Deprecated. Use RelevantTxAcceptedNtfnMethod and</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// FilteredBlockConnectedNtfnMethod instead.</span></span>
<span class="line"><span style="color:#A6ACCD;">	RecvTxNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">recvtx</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// RedeemingTxNtfnMethod is the legacy, deprecated method used for</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// notifications from the chain server that a transaction which spends a</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// registered outpoint has been processed.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// NOTE: Deprecated. Use RelevantTxAcceptedNtfnMethod and</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// FilteredBlockConnectedNtfnMethod instead.</span></span>
<span class="line"><span style="color:#A6ACCD;">	RedeemingTxNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">redeemingtx</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// RescanFinishedNtfnMethod is the legacy, deprecated method used for</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// notifications from the chain server that a legacy, deprecated rescan</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// operation has finished.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// NOTE: Deprecated. Not used with rescanblocks command.</span></span>
<span class="line"><span style="color:#A6ACCD;">	RescanFinishedNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rescanfinished</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// RescanProgressNtfnMethod is the legacy, deprecated method used for</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// notifications from the chain server that a legacy, deprecated rescan</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// operation this is underway has made progress.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// NOTE: Deprecated. Not used with rescanblocks command.</span></span>
<span class="line"><span style="color:#A6ACCD;">	RescanProgressNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rescanprogress</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// TxAcceptedNtfnMethod is the method used for notifications from the</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// chain server that a transaction has been accepted into the mempool.</span></span>
<span class="line"><span style="color:#A6ACCD;">	TxAcceptedNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">txaccepted</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// TxAcceptedVerboseNtfnMethod is the method used for notifications from</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// the chain server that a transaction has been accepted into the</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// mempool.  This differs from TxAcceptedNtfnMethod in that it provides</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// more details in the notification.</span></span>
<span class="line"><span style="color:#A6ACCD;">	TxAcceptedVerboseNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">txacceptedverbose</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// RelevantTxAcceptedNtfnMethod is the new method used for notifications</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// from the chain server that inform a client that a transaction that</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// matches the loaded filter was accepted by the mempool.</span></span>
<span class="line"><span style="color:#A6ACCD;">	RelevantTxAcceptedNtfnMethod </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">relevanttxaccepted</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div>`,19),o=[e];function t(c,r,i,D,y,A){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{F as __pageData,b as default};
