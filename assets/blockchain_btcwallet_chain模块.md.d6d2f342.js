import{_ as s,c as n,o as a,N as l}from"./chunks/framework.3a9190c5.js";const F=JSON.parse('{"title":"chain模块","description":"","frontmatter":{"title":"chain模块","date":"2019-05-20T09:31:26.622Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/btcwallet/chain模块.md"}'),p={name:"blockchain/btcwallet/chain模块.md"},e=l(`<h1 id="chain模块" tabindex="-1">chain模块 <a class="header-anchor" href="#chain模块" aria-label="Permalink to &quot;chain模块&quot;">​</a></h1><p>该模块主要是实现接口<code>Interface</code>,该接口是btcWallet与btc全节点打交道的接口.</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Interface allows more than one backing blockchain source, such as a</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// btcd RPC chain server, or an SPV library, as long as we write a driver for</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// it.</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Interface</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Stop</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">WaitForShutdown</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">GetBestBlock</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">chainhash</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">GetBlock</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">chainhash</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgBlock</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">GetBlockHash</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int64</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">chainhash</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">GetBlockHeader</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">chainhash</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BlockHeader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//为什么找到一个block立即返回呢?</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">FilterBlocks</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">FilterBlocksRequest</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">FilterBlocksResponse</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">BlockStamp</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">waddrmgr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BlockStamp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">SendRawTransaction</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgTx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">chainhash</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Rescan wraps the normal Rescan command with an additional paramter that</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// allows us to map an oupoint to the address in the chain that it pays to.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// This is useful when using BIP 158 filters as they include the prev pkScript</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// rather than the full outpoint.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Rescan</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">chainhash</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Address</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">map[</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OutPoint</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Address</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">NotifyReceived</span><span style="color:#89DDFF;">([]</span><span style="color:#A6ACCD;">btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Address</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">NotifyBlocks</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Notifications</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;-chan</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">interface{}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">BackEnd</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>目前总共有三种连接方式,分别是btcd,neutrino,bitcoind,目前默认使用的是btcd. bitcoind实际上根本没启用</p><h2 id="btcd-client" tabindex="-1">btcd client <a class="header-anchor" href="#btcd-client" aria-label="Permalink to &quot;btcd client&quot;">​</a></h2><p>入口在NewRPCClient,wallet主要通过两种方式与RPCClient打交道,</p><ol><li>函数调用.</li><li>channel 异步通知</li></ol><h3 id="函数调用" tabindex="-1">函数调用 <a class="header-anchor" href="#函数调用" aria-label="Permalink to &quot;函数调用&quot;">​</a></h3><p>除了Notify开头的几个函数,其他都是. 其中<code>NotifyReceived([]btcutil.Address) error</code>用于通知新收到了UTXO,<code>NotifyBlocks() error</code>用于告诉btcd,如果产生了新块或者发生了分叉通知我. 通知内容有:</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Notification types.  These are defined here and processed from from reading</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// a notificationChan to avoid handling these notifications directly in</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// rpcclient callbacks, which isn&#39;t very Go-like and doesn&#39;t allow</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// blocking client calls.</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// ClientConnected is a notification for when a client connection is</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// opened or reestablished to the chain server.</span></span>
<span class="line"><span style="color:#A6ACCD;">	ClientConnected </span><span style="color:#89DDFF;">struct{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// BlockConnected is a notification for a newly-attached block to the</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// best chain.</span></span>
<span class="line"><span style="color:#A6ACCD;">	BlockConnected wtxmgr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BlockMeta</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// BlockDisconnected is a notifcation that the block described by the</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// BlockStamp was reorganized out of the best chain.</span></span>
<span class="line"><span style="color:#A6ACCD;">	BlockDisconnected wtxmgr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BlockMeta</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// RelevantTx is a notification for a transaction which spends wallet</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// inputs or pays to a watched address.</span></span>
<span class="line"><span style="color:#A6ACCD;">	RelevantTx </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		TxRecord </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">wtxmgr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TxRecord</span></span>
<span class="line"><span style="color:#A6ACCD;">		Block    </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">wtxmgr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BlockMeta </span><span style="color:#676E95;font-style:italic;">// nil if unmined</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// RescanProgress is a notification describing the current status</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// of an in-progress rescan.</span></span>
<span class="line"><span style="color:#A6ACCD;">	RescanProgress </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Hash   </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">chainhash</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span></span>
<span class="line"><span style="color:#A6ACCD;">		Height </span><span style="color:#C792EA;">int32</span></span>
<span class="line"><span style="color:#A6ACCD;">		Time   time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// RescanFinished is a notification that a previous rescan request</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// has finished.</span></span>
<span class="line"><span style="color:#A6ACCD;">	RescanFinished </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Hash   </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">chainhash</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span></span>
<span class="line"><span style="color:#A6ACCD;">		Height </span><span style="color:#C792EA;">int32</span></span>
<span class="line"><span style="color:#A6ACCD;">		Time   time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div>`,10),o=[e];function t(c,r,i,y,D,A){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{F as __pageData,b as default};
