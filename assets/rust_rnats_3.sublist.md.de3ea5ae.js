import{o as s,c as n,e as a}from"./app.3f14a1b4.js";const p='{"title":"从零实现消息中间件-sublist","description":"","frontmatter":{"title":"从零实现消息中间件-sublist","date":"2020-02-05T01:57:03.000Z","draft":false,"tags":["rust"],"categories":["技术相关"]},"headers":[{"level":2,"title":"简化实现","slug":"简化实现"},{"level":2,"title":"思路","slug":"思路"},{"level":2,"title":"实现","slug":"实现"},{"level":3,"title":"数据结构的定义","slug":"数据结构的定义"},{"level":3,"title":"代码实现","slug":"代码实现"},{"level":2,"title":"其他","slug":"其他"}],"relativePath":"rust/rnats/3.sublist.md","lastUpdated":1641604782000}',t={},e=[a('<ul><li><a href="#%E7%AE%80%E5%8C%96%E5%AE%9E%E7%8E%B0">简化实现</a></li><li><a href="#%E6%80%9D%E8%B7%AF">思路</a></li><li><a href="#%E5%AE%9E%E7%8E%B0">实现</a><ul><li><a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E5%AE%9A%E4%B9%89">数据结构的定义</a><ul><li><a href="#subscription">Subscription</a></li><li><a href="#subresult">SubResult</a></li><li><a href="#sublisttrait">SubListTrait</a></li><li><a href="#simplesublist">SimpleSubList</a></li><li><a href="#arcsubscriptionwrapper">ArcSubscriptionWrapper</a></li></ul></li><li><a href="#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0">代码实现</a><ul><li><a href="#arcsubscriptionwrapper-1">ArcSubscriptionWrapper</a></li><li><a href="#simplesublist-1">SimpleSubList</a></li></ul></li></ul></li><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E4%B8%8A%E4%B8%80%E7%AF%87%E4%BB%8E%E9%9B%B6%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6-parser">上一篇</a></li><li><a href="#%E4%B8%8B%E4%B8%80%E7%AF%87">下一篇</a></li></ul><h2 id="简化实现"><a class="header-anchor" href="#简化实现" aria-hidden="true">#</a> 简化实现</h2><p>上一篇中提到subject是一种Trie树,在实现的过程中发现非常琐碎,也不好讲解,因此考虑先实现一个简单版本的.具体来说就是</p><ol><li>不支持*和&gt;两种模糊匹配</li><li>所有的主题就是一个普通字符串</li><li>为了简化,先不考虑cache 但是支持负载均衡,也就是SUB中的Queue.</li></ol><h2 id="思路"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h2><p>由于不支持*和&gt;,那么就意味着所有的主题就是一个普通字符串,没有了层次结构. 所以直接使用Map即可.</p><h2 id="实现"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><h3 id="数据结构的定义"><a class="header-anchor" href="#数据结构的定义" aria-hidden="true">#</a> 数据结构的定义</h3><p>开工之前,先想好相关数据结构,这样事半功倍.</p><h4 id="subscription"><a class="header-anchor" href="#subscription" aria-hidden="true">#</a> Subscription</h4><p>订阅中要包含Client的信息也就是ClientMessageSender,他是为了找到相关订阅以后可以发送消息. 暂时不用处理里面的内容.</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Subscription</span> <span class="token punctuation">{</span>\n    <span class="token keyword">pub</span> msg_sender<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">ClientMessageSender</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>\n    <span class="token keyword">pub</span> subject<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>\n    <span class="token keyword">pub</span> queue<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    <span class="token keyword">pub</span> sid<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="subresult"><a class="header-anchor" href="#subresult" aria-hidden="true">#</a> SubResult</h4><p>查找结果中为什么是ArcSubscription,而不是Subscription,是因为Subscription一旦定义,就不会修改了. 因此使用Arc方便传递,同时满足tokio多线程的要求.</p><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[derive(Debug, Default)]</span>\n<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">SubResult</span> <span class="token punctuation">{</span>\n    <span class="token keyword">pub</span> subs<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">ArcSubscription</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    <span class="token keyword">pub</span> qsubs<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">ArcSubscription</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">pub</span> <span class="token keyword">type</span> <span class="token class-name">ArcSubscription</span> <span class="token operator">=</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Subscription</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token keyword">pub</span> <span class="token keyword">type</span> <span class="token class-name">ArcSubResult</span> <span class="token operator">=</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">SubResult</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="sublisttrait"><a class="header-anchor" href="#sublisttrait" aria-hidden="true">#</a> SubListTrait</h4><p>SubListTrait是他对外提供的服务接口,主要是</p><ol><li>新增订阅 这个是当一个Client 发送sub消息到服务端的时候要处理的</li><li>删除订阅 这个是当一个Client发送 unsub消息到服务端的时候要处理的,不过因为我们不支持unsub,那就是连接断开的时候处理的.</li><li>查找相关订阅 这个是当一个client发送pub消息到服务端后,服务端要查找所有相关的订阅,然后把消息逐一转发给他们.</li></ol><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">pub</span> <span class="token keyword">trait</span> <span class="token class-name">SubListTrait</span> <span class="token punctuation">{</span>\n    <span class="token keyword">fn</span> <span class="token function-definition function">insert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> sub<span class="token punctuation">:</span> <span class="token class-name">ArcSubscription</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">fn</span> <span class="token function-definition function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> sub<span class="token punctuation">:</span> <span class="token class-name">ArcSubscription</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n    <span class="token keyword">fn</span> <span class="token function-definition function">match_subject</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> subject<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> \n           <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">ArcSubResult</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="simplesublist"><a class="header-anchor" href="#simplesublist" aria-hidden="true">#</a> SimpleSubList</h4><p>这是我们的核心,也是我们要实现的简单的基于Map的操作. 考虑到增删改查的需求,这里面都用Map来保存,而不用Vector. 牺牲一些空间来换取时间.</p><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[derive(Debug, Default)]</span>\n<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">SimpleSubList</span> <span class="token punctuation">{</span>\n    subs<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BTreeSet</span><span class="token operator">&lt;</span><span class="token class-name">ArcSubscriptionWrapper</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>\n    qsubs<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span>\n                 <span class="token class-name">BTreeSet</span><span class="token operator">&lt;</span><span class="token class-name">ArcSubscriptionWrapper</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="arcsubscriptionwrapper"><a class="header-anchor" href="#arcsubscriptionwrapper" aria-hidden="true">#</a> ArcSubscriptionWrapper</h4><p>注意到前面的SimpleSubList中,保存在BTreeSeet中的存放的是ArcSubscriptionWrapper,而不是ArcSubscriptionWrapper. 这是有意为之的,因为我们在向BTreeSet中插入新的Sub的时候不需要关心他们真实的顺序,只是需要关心他们是否相同. 所以我们比较的对象是他们的地址而不是内容. 但是因为<strong>孤儿原则</strong>的限制,我们不能为<code>Arc&lt;Subscription&gt;</code>实现Ord这个trait,只能再多一次wrapper, 相信我们代码中有不少为孤儿原则做出的让步.</p><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[derive(Debug, Clone)]</span>\n<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">ArcSubscriptionWrapper</span><span class="token punctuation">(</span><span class="token class-name">ArcSubscription</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="代码实现"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h3><h4 id="arcsubscriptionwrapper-1"><a class="header-anchor" href="#arcsubscriptionwrapper-1" aria-hidden="true">#</a> ArcSubscriptionWrapper</h4><p>因为要放入BTreeSet中,所以必须实现自定义的Ord,而要实现这个Ord要做不少额外的工作.</p><div class="language-rust line-numbers-mode"><pre><code> <span class="token keyword">impl</span> <span class="token namespace">std<span class="token punctuation">::</span>cmp<span class="token punctuation">::</span></span><span class="token class-name">Ord</span> <span class="token keyword">for</span> <span class="token class-name">ArcSubscriptionWrapper</span> <span class="token punctuation">{</span>\n    <span class="token keyword">fn</span> <span class="token function-definition function">cmp</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> other<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">Self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Ordering</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">const</span> <span class="token class-name">Subscription</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> b <span class="token operator">=</span> other<span class="token number">.0</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span> \n                <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">const</span> <span class="token class-name">Subscription</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>\n        a<span class="token punctuation">.</span><span class="token function">cmp</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>除了上面这个trait,还需要额外其他的trait实现.</p><div class="language-rust line-numbers-mode"><pre><code>\n<span class="token keyword">impl</span> <span class="token namespace">std<span class="token punctuation">::</span>cmp<span class="token punctuation">::</span></span><span class="token class-name">PartialEq</span> <span class="token keyword">for</span> <span class="token class-name">ArcSubscriptionWrapper</span> <span class="token punctuation">{</span>\n    <span class="token keyword">fn</span> <span class="token function-definition function">eq</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> other<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">Self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">cmp</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Ordering</span><span class="token punctuation">::</span><span class="token class-name">Equal</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n \n<span class="token keyword">impl</span> <span class="token namespace">std<span class="token punctuation">::</span>cmp<span class="token punctuation">::</span></span><span class="token class-name">Eq</span> <span class="token keyword">for</span> <span class="token class-name">ArcSubscriptionWrapper</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">impl</span> <span class="token namespace">std<span class="token punctuation">::</span>cmp<span class="token punctuation">::</span></span><span class="token class-name">PartialOrd</span> <span class="token keyword">for</span> <span class="token class-name">ArcSubscriptionWrapper</span> <span class="token punctuation">{</span>\n    <span class="token keyword">fn</span> <span class="token function-definition function">partial_cmp</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> other<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">Self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Ordering</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">cmp</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="simplesublist-1"><a class="header-anchor" href="#simplesublist-1" aria-hidden="true">#</a> SimpleSubList</h4><p>思路理清后,实现起来反而简单了.关键代码总共也就一百行不到.</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">impl</span> <span class="token class-name">SubListTrait</span> <span class="token keyword">for</span> <span class="token class-name">SimpleSubList</span> <span class="token punctuation">{</span>\n    <span class="token keyword">fn</span> <span class="token function-definition function">insert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> sub<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Subscription</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> q<span class="token punctuation">)</span> <span class="token operator">=</span> sub<span class="token punctuation">.</span>queue <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> entry <span class="token operator">=</span> <span class="token keyword">self</span>\n                <span class="token punctuation">.</span>qsubs\n                <span class="token punctuation">.</span><span class="token function">entry</span><span class="token punctuation">(</span>sub<span class="token punctuation">.</span>subject<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">or_insert</span><span class="token punctuation">(</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">let</span> queue <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">entry</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or_insert</span><span class="token punctuation">(</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            queue<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">ArcSubscriptionWrapper</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> subs <span class="token operator">=</span> <span class="token keyword">self</span>\n                <span class="token punctuation">.</span>subs\n                <span class="token punctuation">.</span><span class="token function">entry</span><span class="token punctuation">(</span>sub<span class="token punctuation">.</span>subject<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">or_insert</span><span class="token punctuation">(</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            subs<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">ArcSubscriptionWrapper</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">fn</span> <span class="token function-definition function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> sub<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Subscription</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> q<span class="token punctuation">)</span> <span class="token operator">=</span> sub<span class="token punctuation">.</span>queue <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>subs<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>qsubs<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>sub<span class="token punctuation">.</span>subject<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>qsubs<span class="token punctuation">)</span> <span class="token operator">=</span> subs<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    qsubs<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">ArcSubscriptionWrapper</span><span class="token punctuation">(</span>sub<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">if</span> qsubs<span class="token punctuation">.</span><span class="token function">is_empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        subs<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token class-name">Err</span><span class="token punctuation">(</span><span class="token class-name">NError</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token constant">ERROR_SUBSCRIBTION_NOT_FOUND</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">if</span> subs<span class="token punctuation">.</span><span class="token function">is_empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">self</span><span class="token punctuation">.</span>qsubs<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>sub<span class="token punctuation">.</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token class-name">Err</span><span class="token punctuation">(</span><span class="token class-name">NError</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token constant">ERROR_SUBSCRIBTION_NOT_FOUND</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>subs<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>sub<span class="token punctuation">.</span>subject<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                subs<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">ArcSubscriptionWrapper</span><span class="token punctuation">(</span>sub<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span> subs<span class="token punctuation">.</span><span class="token function">is_empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">self</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>sub<span class="token punctuation">.</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">fn</span> <span class="token function-definition function">match_subject</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> subject<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">ArcSubResult</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> <span class="token keyword">mut</span> r <span class="token operator">=</span> <span class="token class-name">SubResult</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>subs<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">for</span> s <span class="token keyword">in</span> subs <span class="token punctuation">{</span>\n                r<span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token number">.0</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>qsubs<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>qsubs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> qsub<span class="token punctuation">)</span> <span class="token keyword">in</span> qsubs <span class="token punctuation">{</span>\n                <span class="token keyword">let</span> <span class="token keyword">mut</span> v <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">with_capacity</span><span class="token punctuation">(</span>qsub<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">for</span> s <span class="token keyword">in</span> qsub <span class="token punctuation">{</span>\n                    v<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token number">.0</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                r<span class="token punctuation">.</span>qsubs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h2 id="其他"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><p>相关代码都在我的github <a href="https://github.com/nkbai/learnrustbynats" target="_blank" rel="noopener noreferrer">rnats</a> 欢迎围观</p>',36)];t.render=function(a,p,t,o,c,l){return s(),n("div",null,e)};export{p as __pageData,t as default};
