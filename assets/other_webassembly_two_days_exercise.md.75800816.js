import{_ as n,c as s,o as a,a as p}from"./app.b603026e.js";const d='{"title":"\u79FB\u690D\u4E00\u4E2Ac\u9879\u76EE\u5230WebAssembly\u7684\u4F53\u9A8C","description":"","frontmatter":{"title":"\u79FB\u690D\u4E00\u4E2Ac\u9879\u76EE\u5230WebAssembly\u7684\u4F53\u9A8C","date":"2022-03-28T03:06:23.000Z","draft":false},"headers":[{"level":2,"title":"\u6574\u4F53\u4F53\u9A8C","slug":"\u6574\u4F53\u4F53\u9A8C"},{"level":2,"title":"emscripten \u57FA\u672C\u4F7F\u7528","slug":"emscripten-\u57FA\u672C\u4F7F\u7528"},{"level":3,"title":"EM_JS","slug":"em-js"},{"level":3,"title":"C\u8C03\u7528JS","slug":"c\u8C03\u7528js"},{"level":2,"title":"\u8E29\u7684\u5751","slug":"\u8E29\u7684\u5751"},{"level":3,"title":"\u4E00\u822C\u6587\u4EF6\u4E0A\u4F20\u5904\u7406\u95EE\u9898","slug":"\u4E00\u822C\u6587\u4EF6\u4E0A\u4F20\u5904\u7406\u95EE\u9898"},{"level":3,"title":"\u8D85\u5927\u6587\u4EF6\u4E0A\u4F20\u5904\u7406","slug":"\u8D85\u5927\u6587\u4EF6\u4E0A\u4F20\u5904\u7406"},{"level":3,"title":"Uint8Array\u5728c\u548CJS\u4E2D\u7684\u4EA4\u4E92","slug":"uint8array\u5728c\u548Cjs\u4E2D\u7684\u4EA4\u4E92"},{"level":3,"title":"JS\u8C03\u7528\u64CD\u4F5Cc\u4E2D\u7684\u6570\u7EC4","slug":"js\u8C03\u7528\u64CD\u4F5Cc\u4E2D\u7684\u6570\u7EC4"},{"level":3,"title":"\u5176\u4ED6\u5C0F\u5751","slug":"\u5176\u4ED6\u5C0F\u5751"},{"level":2,"title":"\u53C2\u8003\u6587\u7AE0","slug":"\u53C2\u8003\u6587\u7AE0"}],"relativePath":"other/webassembly_two_days_exercise.md"}',t={},e=p(`<p>\u521A\u597D\u78B0\u5230\u4E00\u4E2A\u9700\u6C42,\u5C31\u662F\u5C06\u4E00\u4E2Ac\u5F00\u53D1\u7684\u5C0F\u7684\u5F00\u6E90\u9879\u76EE\u79FB\u690D\u5230WebAssembly,\u5E0C\u671B\u80FD\u591F\u5728\u6D4F\u89C8\u5668\u4E2D\u4F7F\u7528,\u82B1\u4E86\u4E00\u4E2A\u5468\u672B\u65F6\u95F4\u8FDB\u884C\u4E86\u79FB\u690D,\u8FD9\u91CC\u8BF4\u4E00\u4E0B\u79FB\u690D\u8FC7\u7A0B\u4E2D\u78B0\u5230\u7684\u5751,\u5E0C\u671B\u80FD\u5E2E\u52A9\u5176\u4ED6\u4EBA\u907F\u514D.</p><h2 id="\u6574\u4F53\u4F53\u9A8C" tabindex="-1">\u6574\u4F53\u4F53\u9A8C <a class="header-anchor" href="#\u6574\u4F53\u4F53\u9A8C" aria-hidden="true">#</a></h2><p>\u5148\u8BF4\u4E00\u4E0B\u7ED3\u8BBA\u5427,emscripten\u662F\u76EE\u524Dc/c<ins>\u9879\u76EE\u79FB\u690D\u5230WebAssembly\u7684\u9996\u5148\u5DE5\u5177,\u603B\u7684\u6765\u8BF4\u5BF9\u4E8Ec/c</ins>\u8BED\u6CD5\u5C42\u9762\u7684\u652F\u6301\u5DF2\u7ECF\u975E\u5E38\u5B8C\u5584,\u4F46\u662Fc/c<ins>\u672C\u8EAB\u975E\u5E38\u590D\u6742. \u8001\u5B9E\u8BF4,\u6210\u529F\u7F16\u8BD1\u4E00\u4E2A\u590D\u6742\u7684c/c</ins>\u9879\u76EE\u672C\u8EAB\u5C31\u662F\u4E00\u4E2A\u975E\u5E38\u5927\u7684\u6311\u6218,\u66F4\u4E0D\u7528\u8BF4\u9700\u8981\u5728Webassembly\u8FD9\u79CD\u975Eposix\u7CFB\u7EDF\u4E0A\u7F16\u8BD1. \u8BF4\u4E00\u4E0B\u6211\u7684\u51E0\u4E2A\u611F\u53D7:</p><ul><li><ol><li>\u4E00\u822C\u9879\u76EE\u4E0D\u505A\u4FEE\u6539\u57FA\u672C\u4E0A\u662F\u4E0D\u53EF\u80FD\u76F4\u63A5\u7F16\u8BD1\u6210\u529F\u7684</li></ol></li><li><ol start="2"><li>\u6700\u5927\u7684\u4F18\u52BF\u662F\u652F\u6301\u4E86\u6587\u4EF6\u7CFB\u7EDF,\u7F51\u7EDC,\u56FE\u5F62\u5316\u7B49\u64CD\u4F5C,\u5176\u4E2D\u6587\u4EF6\u7CFB\u7EDF\u662F\u53EF\u4EE5\u8BF4\u517C\u5BB9posix,\u7F51\u7EDC\u6211\u6CA1\u4F53\u9A8C.</li></ol></li><li><ol start="3"><li>\u53EF\u4EE5\u65E0\u7F1D\u548CJS\u8FDB\u884C\u4EA4\u4E92,\u4F46\u662F\u590D\u6742\u6570\u636E\u7ED3\u6784\u7684\u4EA4\u4E92\u5C31\u5F88\u5934\u75BC.</li></ol></li><li><ol start="4"><li>\u7528\u6237\u4E0A\u4F20\u7684\u8D85\u5927\u6587\u4EF6,WORKERFS\u652F\u6301\u6709bug ,\u5177\u4F53\u53C2\u8003\u8FD9\u91CC <a href="https://mossroy.github.io/libzim_wasm/" target="_blank" rel="noopener noreferrer">Prototype to test libzim compiled with emscripten</a></li></ol></li></ul><h2 id="emscripten-\u57FA\u672C\u4F7F\u7528" tabindex="-1">emscripten \u57FA\u672C\u4F7F\u7528 <a class="header-anchor" href="#emscripten-\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a></h2><p>\u53C2\u8003<a href="./.html">\u5B98\u65B9\u6587\u6863</a>\u5373\u53EF,\u627E\u4E00\u4E0B\u5165\u95E8\u6559\u7A0B,\u7EC3\u7EC3\u624B\u57FA\u672C\u5C31\u660E\u767D\u4E86. \u8FD9\u91CC\u8BF4\u4E00\u4E0B\u4EA4\u4E92\u7684\u57FA\u672C\u5DE5\u5177.</p><h3 id="em-js" tabindex="-1">EM_JS <a class="header-anchor" href="#em-js" aria-hidden="true">#</a></h3><p>\u5728c/c++\u4E2D\u58F0\u660E\u4E00\u4E2AJS\u51FD\u6570,\u53EF\u4EE5\u76F4\u63A5\u7528c\u8C03\u7528. \u6BD4\u5982</p><div class="language-c line-numbers-mode"><pre><code><span class="token comment">//js\u7684\u521D\u59CB\u5316</span>
<span class="token function">EM_JS</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">,</span> initialize<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    FS<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">&quot;query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    window<span class="token punctuation">.</span>kglobal <span class="token operator">=</span> <span class="token punctuation">{</span>
        start<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">//\u6587\u4EF6\u9ED8\u8BA4\u5F00\u59CB\u4E3A0</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">//\u5168\u5C40\u53D8\u91CF\u5B58\u50A8\u5730\u65B9</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5982\u679C\u9700\u8981\u4F20\u53C2\u6570,\u8FD9\u91CC\u662F\u4E00\u4E2A\u4F8B\u5B50:</p><div class="language-c line-numbers-mode"><pre><code><span class="token function">EM_ASYNC_JS</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span>myfgets<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span> length<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span>   await <span class="token function">processFile</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32,\u4F20\u8FDB\u53BB\u4E00\u4E2Alength\u53C2\u6570.</p><h3 id="c\u8C03\u7528js" tabindex="-1">C\u8C03\u7528JS <a class="header-anchor" href="#c\u8C03\u7528js" aria-hidden="true">#</a></h3><p>\u9664\u4E86\u58F0\u660E\u51FD\u6570,\u4E5F\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\u4E00\u4E2A\u7247\u6BB5,\u5C31\u7528EM_ASM\u7CFB\u5217,\u4E00\u6837\u53EF\u4EE5\u4F20\u53C2\u6570,\u53EF\u4EE5\u83B7\u5F97\u8FD4\u56DE\u503C:</p><div class="language-c line-numbers-mode"><pre><code>
<span class="token keyword">int</span> <span class="token function">myfeof</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> x<span class="token operator">=</span><span class="token function">EM_ASM_INT</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        var x<span class="token operator">=</span><span class="token function">processEof</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u8E29\u7684\u5751" tabindex="-1">\u8E29\u7684\u5751 <a class="header-anchor" href="#\u8E29\u7684\u5751" aria-hidden="true">#</a></h2><h3 id="\u4E00\u822C\u6587\u4EF6\u4E0A\u4F20\u5904\u7406\u95EE\u9898" tabindex="-1">\u4E00\u822C\u6587\u4EF6\u4E0A\u4F20\u5904\u7406\u95EE\u9898 <a class="header-anchor" href="#\u4E00\u822C\u6587\u4EF6\u4E0A\u4F20\u5904\u7406\u95EE\u9898" aria-hidden="true">#</a></h3><p>\u5148\u8BF4\u5982\u679C\u4E0D\u662F\u5927\u6587\u4EF6,\u90A3\u4E48\u5176\u5B9E\u6709\u5B8C\u7F8E\u7684\u4F8B\u5B50,\u76F4\u63A5\u7528MEMFS,c\u7A0B\u5E8F\u51E0\u4E4E\u5C31\u4E0D\u7528\u4FEE\u6539,\u4F8B\u5B50\u5728<a href="https://github.com/netpipe/emscripten-projects/tree/master/Loaders/Uploader" target="_blank" rel="noopener noreferrer">emscripten-projects</a>. \u53EF\u4EE5\u8BF4\u5B8C\u7F8E. \u8FD9\u91CC\u770B\u4E00\u4E0B\u5173\u952E\u4EE3\u7801:</p><div class="language-js line-numbers-mode"><pre><code>  <span class="token comment">// Add the selected files to the emscripten virtual file system.</span>
  <span class="token keyword">function</span> <span class="token function">handleFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Wrap the C++ functions as JavaScript so that they can be called</span>
    <span class="token comment">// https://emscripten.org/docs/porting/connecting_cpp_and_javascript/Interacting-with-code.html#interacting-with-code-ccall-cwrap</span>
    <span class="token keyword">let</span> addFile <span class="token operator">=</span> Module<span class="token punctuation">[</span><span class="token string">&quot;cwrap&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">&quot;addFile&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> processFiles <span class="token operator">=</span> Module<span class="token punctuation">[</span><span class="token string">&quot;cwrap&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">&quot;processFiles&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">let</span> completedCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> files <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>files<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> file <span class="token keyword">of</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span>onerror <span class="token operator">=</span> err<span class="token punctuation">;</span>
      
      reader<span class="token punctuation">.</span><span class="token function-variable function">onloadend</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Add the file to the list</span>
       <span class="token comment">// addFileToList(file.name, file.type);</span>
      
        <span class="token comment">// A new file is created on the emscripten virtual file system.</span>
        <span class="token comment">// This is part of the private file system API</span>
        <span class="token comment">// https://emscripten.org/docs/api_reference/advanced-apis.html#advanced-file-system-api</span>
        Module<span class="token punctuation">[</span><span class="token string">&quot;FS_createDataFile&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>
          <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token comment">// directory on the virtual file system to place the file in</span>
          file<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token comment">// name of the file</span>
          <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// data to file the file with</span>
          <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Allow C++ to read the file</span>
          <span class="token boolean">true</span> <span class="token comment">// Allow C++ to write the file</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Tell C++ that the file is accessible</span>
        <span class="token function">addFile</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Tell C++ that all files are accessible after creating all the files</span>
        <span class="token operator">++</span>completedCount<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>completedCount <span class="token operator">==</span> files<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">processFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      
      <span class="token comment">// reader.result will be an ArrayBuffer</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><p>\u901A\u8FC7<code>Module[&quot;FS_createDataFile&quot;]</code>\u8FD9\u4E2A\u5E95\u5C42\u7684api,\u5C31\u628A\u7528\u6237\u4E0A\u4F20\u7684\u6587\u4EF6\u66B4\u9732\u5728\u4E86MEMFS\u4E2D,\u53EF\u4EE5\u5728c++\u7CFB\u7EDF\u4E2D\u901A\u8FC7posix API\u8FDB\u884C\u5904\u7406\u4E86. \u5F53\u7136\u4ED6\u7684\u95EE\u9898\u5C31\u662F\u4ED6\u5FC5\u987B\u4E00\u6B21\u6027\u5168\u90E8\u8BFB\u8FDB\u53BB<code> reader.readAsArrayBuffer(file)</code>.</p><p>c++\u4E2D\u7684\u4EE3\u7801\u662F:</p><div class="language-cpp line-numbers-mode"><pre><code>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">void</span> <span class="token function">processFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Processing files\\n&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>string <span class="token operator">&amp;</span>name <span class="token operator">:</span> fileNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do whatever you need to do...</span>
    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Processing file &quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token char">&#39;\\n&#39;</span><span class="token punctuation">;</span>
    
    <span class="token function">addFileToList</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// adds extra for testing shows how to do js calls</span>

    <span class="token comment">// You can do whatever you want with the file.</span>
    std<span class="token double-colon punctuation">::</span>ifstream file<span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">is_open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;First byte of the file is: &quot;</span> <span class="token operator">&lt;&lt;</span> file<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token char">&#39;\\n&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">void</span> <span class="token function">addFile</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fileNames<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Added file &quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token char">&#39;\\n&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230jsstring\u548Cc++string\u8FDB\u884C\u4E86\u81EA\u52A8\u8F6C\u6362,\u8FD8\u633A\u65B9\u4FBF\u7684.</p><p>\u8FD9\u91CC\u7684\u7F16\u8BD1\u65B9\u5F0F\u4E3A:</p><div class="language-bash line-numbers-mode"><pre><code>emcc displayInfo.cpp -std<span class="token operator">=</span>c++11 -s <span class="token string">&#39;EXPORTED_FUNCTIONS=[&quot;_addFile&quot;,&quot;_processFiles&quot;,&quot;_main&quot;,&quot;_readdata&quot;]&#39;</span> -s <span class="token string">&#39;EXTRA_EXPORTED_RUNTIME_METHODS=[&quot;cwrap&quot;]&#39;</span> -s <span class="token assign-left variable">FORCE_FILESYSTEM</span><span class="token operator">=</span><span class="token number">1</span>  -o display.html

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u8D85\u5927\u6587\u4EF6\u4E0A\u4F20\u5904\u7406" tabindex="-1">\u8D85\u5927\u6587\u4EF6\u4E0A\u4F20\u5904\u7406 <a class="header-anchor" href="#\u8D85\u5927\u6587\u4EF6\u4E0A\u4F20\u5904\u7406" aria-hidden="true">#</a></h3><p>\u4F46\u662F\u5BF9\u4E8E\u8D85\u5927\u6587\u4EF6,\u6BD4\u598210\u4E2AG,\u8FD9\u79CD\u5185\u5B58\u4E2D\u80AF\u5B9A\u653E\u4E0D\u4E0B\u4E86,\u90A3\u4E48\u8FD9\u65F6\u5019\u5C31\u8981\u7EA0\u7ED3\u600E\u4E48\u529E\u4E86? \u9996\u5148\u6211\u627E\u5230\u4E86<a href="https://mossroy.github.io/libzim_wasm/" target="_blank" rel="noopener noreferrer">Prototype to test libzim compiled with emscripten</a>,\u8FD9\u91CC\u8BF4\u76F4\u63A5\u5C06BLOB\u66B4\u9732\u7ED9WORKERFS,\u8D85\u8FC72g\u6709\u95EE\u9898,\u6240\u4EE5\u6211\u5C31\u76F4\u63A5\u653E\u8D77\u6765\u8D70WORKERFS, \u8F6C\u800C\u8D70\u81EA\u5DF1\u5C01\u88C5\u7684\u9053\u8DEF.</p><p>\u57FA\u672C\u601D\u8DEF\u5C31\u662F:</p><ol><li>\u5728js\u4E2D\u5C06file\u4FDD\u5B58\u5230\u5168\u5C40\u53D8\u91CF\u4E2D</li><li>\u4FEE\u6539\u4EE3\u7801,\u8BFB\u4E0A\u4F20\u6587\u4EF6\u65F6,\u5C01\u88C5myfgets,\u901A\u8FC7js\u4E00\u6B21\u8BFB\u53D6\u6307\u5B9A\u7684\u5757</li><li>\u5176\u4ED6\u76F8\u5173\u7684\u5C01\u88C5.</li></ol><p>\u4E0B\u9762\u662F\u5B8C\u6574\u7684js\u4EE3\u7801:</p><div class="language-html line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fileinput<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>files[]<span class="token punctuation">&quot;</span></span>  <span class="token special-attr"><span class="token attr-name">onchange</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">handleFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span>  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none</span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>upload<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>start upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">startprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span> start process <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>progress<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    0%
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>output</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>output</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>result.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">function</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;upload&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;fileinput&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">handleFiles</span><span class="token punctuation">(</span><span class="token parameter">arg1<span class="token punctuation">,</span>arg2<span class="token punctuation">,</span>arg3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> input<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;fileinput&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;file changed&quot;</span><span class="token punctuation">,</span>input<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            window<span class="token punctuation">.</span>kglobal<span class="token punctuation">.</span>file<span class="token operator">=</span>input<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token function">startprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">startprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;call cmd_dist2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Module<span class="token punctuation">.</span><span class="token function">_cmd_dist2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;call cmd_dist2 end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> last<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">updateProgress</span><span class="token punctuation">(</span><span class="token parameter">start</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> p<span class="token operator">=</span>start<span class="token operator">/</span>kglobal<span class="token punctuation">.</span>file<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token operator">-</span>last<span class="token operator">&gt;</span><span class="token number">0.01</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;progress&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText<span class="token operator">=</span>start<span class="token operator">/</span>kglobal<span class="token punctuation">.</span>file<span class="token punctuation">.</span>size<span class="token operator">*</span><span class="token number">100</span><span class="token operator">+</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">;</span>
            last<span class="token operator">=</span>p<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">readFileAsync</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span>start<span class="token punctuation">,</span>length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;reader error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> fileslice<span class="token operator">=</span>file<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>start<span class="token operator">+</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// reader.result will be an ArrayBuffer</span>
            reader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>fileslice<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">updateProgress</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">ab2str</span><span class="token punctuation">(</span><span class="token parameter">buf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Uint16Array</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span>  heapSpace <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">// 1</span>
    <span class="token keyword">function</span> <span class="token function">transferToHeap</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>heapSpace<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            heapSpace <span class="token operator">=</span>  Module<span class="token punctuation">.</span><span class="token function">_malloc</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// console.log(&quot;arr=&quot;,arr);</span>
        Module<span class="token punctuation">.</span><span class="token constant">HEAPU8</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>heapSpace<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
        <span class="token keyword">return</span> heapSpace<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    window<span class="token punctuation">.</span><span class="token function-variable function">processFile</span><span class="token operator">=</span><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> start<span class="token operator">=</span>kglobal<span class="token punctuation">.</span>start<span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;start=&quot;</span><span class="token punctuation">,</span>start<span class="token punctuation">,</span><span class="token string">&quot;length=&quot;</span><span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> file <span class="token operator">=</span> kglobal<span class="token punctuation">.</span>file<span class="token punctuation">;</span>
            <span class="token keyword">let</span> contentBuffer<span class="token operator">=</span><span class="token keyword">await</span> <span class="token function">readFileAsync</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span>start<span class="token operator">+</span>length<span class="token punctuation">,</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            kglobal<span class="token punctuation">.</span>start<span class="token operator">+=</span>length<span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;jsstring=&quot;</span><span class="token punctuation">,</span>contentBuffer<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span>  <span class="token function">transferToHeap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>contentBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    window<span class="token punctuation">.</span><span class="token function-variable function">processEof</span><span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;call feof start=&quot;</span><span class="token punctuation">,</span>kglobal<span class="token punctuation">.</span>start<span class="token punctuation">,</span><span class="token string">&quot;file size=&quot;</span><span class="token punctuation">,</span>kglobal<span class="token punctuation">.</span>file<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>kglobal<span class="token punctuation">.</span>start<span class="token operator">&gt;=</span>kglobal<span class="token punctuation">.</span>file<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;complete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;DOMContentLoaded&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;dom content loaded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br></div></div><p>\u8BF4\u4E00\u4E0B\u8C03\u7528\u6D41\u7A0B:</p><ol><li>handleFiles\u5C06file\u4FDD\u5B58\u5230\u5168\u5C40\u53D8\u91CF\u4E2D</li><li>\u8C03\u7528_cmd_dist2,\u8FD9\u4E2A\u662Fc\u51FD\u6570,\u662Fc\u5904\u7406\u7684\u6D41\u7A0B</li><li>c\u4E2D\u8BFB\u53D6\u8FD9\u4E2A\u6587\u4EF6\u65F6,\u7528myfgets,\u800Cmyfgets\u771F\u6B63\u8BFB\u53D6\u8C03\u7528\u7684\u662FprocessFile</li><li>processFile\u662F\u4E00\u4E2Aasync\u7684js\u51FD\u6570,\u6BCF\u6B21\u8BFB\u53D6\u90FD\u8981\u8FD9\u4E48\u4E00\u904D,\u6548\u7387\u80AF\u5B9A\u4F4E.</li><li>processFile\u8FD4\u56DEchar* ,\u4F9Bc\u51FD\u6570\u6D88\u8D39.</li></ol><h3 id="uint8array\u5728c\u548Cjs\u4E2D\u7684\u4EA4\u4E92" tabindex="-1">Uint8Array\u5728c\u548CJS\u4E2D\u7684\u4EA4\u4E92 <a class="header-anchor" href="#uint8array\u5728c\u548Cjs\u4E2D\u7684\u4EA4\u4E92" aria-hidden="true">#</a></h3><p>\u9996\u5148\u662Fc\u8C03\u7528js,\u8FD4\u56DE\u4E00\u4E2Achar<em>\u7684\u505A\u6CD5,\u5176\u5B9E\u8FD9\u91CC\u662F\u4E00\u4E2Auint8Array,\u5F53\u505Achar</em>\u5904\u7406\u4E86\u800C\u5DF2.</p><div class="language-js line-numbers-mode"><pre><code>    <span class="token keyword">var</span>  heapSpace <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">// 1</span>
    <span class="token keyword">function</span> <span class="token function">transferToHeap</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>heapSpace<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            heapSpace <span class="token operator">=</span>  Module<span class="token punctuation">.</span><span class="token function">_malloc</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// console.log(&quot;arr=&quot;,arr);</span>
        Module<span class="token punctuation">.</span><span class="token constant">HEAPU8</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>heapSpace<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
        <span class="token keyword">return</span> heapSpace<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>  <span class="token function">transferToHeap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>contentBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5173\u952E\u662FtransferToHeap\u51FD\u6570,\u9996\u5148<code>Module._malloc</code>\u5728c\u4E2D\u5206\u914D\u4E00\u5757\u5185\u5B58,\u8FD9\u4E2A\u5176\u5B9E\u5C31\u662Fmalloc,\u7136\u540E\u7528<code>Module.HEAPU8.set</code>\u5C06Uint8Array\u7684\u5185\u5BB9\u590D\u5236\u5230\u8FD9\u4E2A\u5185\u5B58\u4E2D. \u8FD9\u91CC\u7528\u4E86\u4E00\u4E2A\u5C0F\u6280\u5DE7,\u56E0\u4E3A\u6211\u6BCF\u6B21\u53EA\u4F1A\u5904\u7406\u4E00\u4E2A\u6587\u4EF6,\u5E76\u4E14\u662F\u4E25\u683C\u5355\u7EBF\u7A0B\u7684,\u6240\u4EE5\u5E76\u4E0D\u9700\u8981\u6BCF\u6B21\u90FD\u5206\u914D\u5185\u5B58,\u4E5F\u5C31\u4E0D\u9700\u8981\u6BCF\u6B21\u90FD\u91CA\u653E,\u53EA\u9700\u8981\u4E00\u6B21\u6027\u5206\u914D\u5373\u53EF.</p><h3 id="js\u8C03\u7528\u64CD\u4F5Cc\u4E2D\u7684\u6570\u7EC4" tabindex="-1">JS\u8C03\u7528\u64CD\u4F5Cc\u4E2D\u7684\u6570\u7EC4 <a class="header-anchor" href="#js\u8C03\u7528\u64CD\u4F5Cc\u4E2D\u7684\u6570\u7EC4" aria-hidden="true">#</a></h3><p>\u8FD9\u662Fc\u7684\u5BFC\u51FA\u51FD\u6570</p><div class="language-cpp line-numbers-mode"><pre><code><span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token punctuation">{</span>
  <span class="token keyword">void</span> <span class="token function">readdata</span><span class="token punctuation">(</span><span class="token keyword">char</span> vals<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">readdata</span><span class="token punctuation">(</span><span class="token keyword">char</span> vals<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">char</span> data<span class="token punctuation">[</span><span class="token number">4000</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>vals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// printf(&quot;data[%d]=%d&quot;,i,vals[i]);</span>
  <span class="token punctuation">}</span>
  data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;read vals len=%d,data=%s\\n&quot;</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>js\u4E2D\u5219\u662F\u7C7B\u4F3C:</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5185\u5BB9\u586B\u5145\u5FFD\u7565...</span>
arrayOnHeap <span class="token operator">=</span> <span class="token function">transferToHeap</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
Module<span class="token punctuation">.</span><span class="token function">_readdata</span><span class="token punctuation">(</span>arrayOnHeap<span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u5176\u4ED6\u5C0F\u5751" tabindex="-1">\u5176\u4ED6\u5C0F\u5751 <a class="header-anchor" href="#\u5176\u4ED6\u5C0F\u5751" aria-hidden="true">#</a></h3><ol><li>\u539F\u6765\u7A0B\u5E8F\u4E2D\u7528\u4E86popen,\u8FD8\u8C03\u7528\u4E86shell\u547D\u4EE4,\u8FD9\u79CD\u53EA\u80FD\u91CD\u5199\u4E86.</li><li>\u539F\u7A0B\u5E8F\u7528\u4E86zlib,\u4E00\u5F00\u59CB\u5C1D\u8BD5\u7528\u5B98\u65B9\u7684zlib\u8FDB\u884C\u7F16\u8BD1,\u53D1\u73B0\u6839\u672C\u8FC7\u4E0D\u4E86,\u5E78\u597Demscripten\u5B98\u65B9\u5C31\u6709\u8FD9\u4E2Alib\u7684\u79FB\u690D. <a href="https://github.com/emscripten-core/emscripten/tree/main/tests/third_party/zlib" target="_blank" rel="noopener noreferrer">emscripten zlib</a></li><li>\u539F\u7A0B\u5E8F\u7528\u4E86openmp,\u8FD8\u672A\u627E\u5230\u5408\u9002\u7684\u7F16\u8BD1\u65B9\u6CD5,\u5E78\u597D\u53EA\u5F71\u54CD\u6027\u80FD,\u4E0D\u5F71\u54CD\u529F\u80FD</li><li>EM_ASYNC_JS\u4F7F\u7528,\u7F16\u8BD1\u65F6\u8981\u52A0\u4E0A: <code>-s ASYNCIFY </code></li><li>\u56E0\u4E3A\u4E86\u7528malloc,\u7F16\u8BD1\u65F6\u8981\u52A0\u4E0A<code>-s ALLOW_MEMORY_GROWTH=1 </code></li></ol><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1">\u53C2\u8003\u6587\u7AE0 <a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a></h2><ul><li><a href="https://medium.com/@tdeniffel/c-to-webassembly-pass-and-arrays-to-c-86e0cb0464f5" target="_blank" rel="noopener noreferrer">C++ to WebAssembly: Pass arrays to C++</a></li><li><a href="https://zhuanlan.zhihu.com/p/444335335" target="_blank" rel="noopener noreferrer">WebAssembly C++ \u963B\u585E\u8C03\u7528JS\u5F02\u6B65\u51FD\u6570</a></li></ul>`,46),o=[e];function c(l,u,i,r,k,b){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
