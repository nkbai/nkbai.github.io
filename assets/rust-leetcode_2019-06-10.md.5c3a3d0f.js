import{_ as n,c as s,o as a,a as p}from"./app.7948a4b5.js";const d='{"title":"71. \u7B80\u5316\u8DEF\u5F84","description":"","frontmatter":{"title":"71. \u7B80\u5316\u8DEF\u5F84","date":"2019-06-10T03:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-06-10)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-06-10"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2019-06-10.md"}',t={},o=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-06-10" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-06-10) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-06-10" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p><a href="https://leetcode-cn.com/problems/simplify-path/" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/simplify-path/</a></p><p>\u4EE5 Unix \u98CE\u683C\u7ED9\u51FA\u4E00\u4E2A\u6587\u4EF6\u7684\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u4F60\u9700\u8981\u7B80\u5316\u5B83\u3002\u6216\u8005\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5C06\u5176\u8F6C\u6362\u4E3A\u89C4\u8303\u8DEF\u5F84\u3002</p><p>\u5728 Unix \u98CE\u683C\u7684\u6587\u4EF6\u7CFB\u7EDF\u4E2D\uFF0C\u4E00\u4E2A\u70B9\uFF08.\uFF09\u8868\u793A\u5F53\u524D\u76EE\u5F55\u672C\u8EAB\uFF1B\u6B64\u5916\uFF0C\u4E24\u4E2A\u70B9 \uFF08..\uFF09\xA0\u8868\u793A\u5C06\u76EE\u5F55\u5207\u6362\u5230\u4E0A\u4E00\u7EA7\uFF08\u6307\u5411\u7236\u76EE\u5F55\uFF09\uFF1B\u4E24\u8005\u90FD\u53EF\u4EE5\u662F\u590D\u6742\u76F8\u5BF9\u8DEF\u5F84\u7684\u7EC4\u6210\u90E8\u5206\u3002\u66F4\u591A\u4FE1\u606F\u8BF7\u53C2\u9605\uFF1ALinux / Unix\u4E2D\u7684\u7EDD\u5BF9\u8DEF\u5F84 vs \u76F8\u5BF9\u8DEF\u5F84</p><p>\u8BF7\u6CE8\u610F\uFF0C\u8FD4\u56DE\u7684\u89C4\u8303\u8DEF\u5F84\u5FC5\u987B\u59CB\u7EC8\u4EE5\u659C\u6760 / \u5F00\u5934\uFF0C\u5E76\u4E14\u4E24\u4E2A\u76EE\u5F55\u540D\u4E4B\u95F4\u5FC5\u987B\u53EA\u6709\u4E00\u4E2A\u659C\u6760 /\u3002\u6700\u540E\u4E00\u4E2A\u76EE\u5F55\u540D\uFF08\u5982\u679C\u5B58\u5728\uFF09\u4E0D\u80FD\u4EE5 / \u7ED3\u5C3E\u3002\u6B64\u5916\uFF0C\u89C4\u8303\u8DEF\u5F84\u5FC5\u987B\u662F\u8868\u793A\u7EDD\u5BF9\u8DEF\u5F84\u7684\u6700\u77ED\u5B57\u7B26\u4E32\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1A&quot;/home/&quot; \u8F93\u51FA\uFF1A&quot;/home&quot; \u89E3\u91CA\uFF1A\u6CE8\u610F\uFF0C\u6700\u540E\u4E00\u4E2A\u76EE\u5F55\u540D\u540E\u9762\u6CA1\u6709\u659C\u6760\u3002 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1A&quot;/../&quot; \u8F93\u51FA\uFF1A&quot;/&quot; \u89E3\u91CA\uFF1A\u4ECE\u6839\u76EE\u5F55\u5411\u4E0A\u4E00\u7EA7\u662F\u4E0D\u53EF\u884C\u7684\uFF0C\u56E0\u4E3A\u6839\u662F\u4F60\u53EF\u4EE5\u5230\u8FBE\u7684\u6700\u9AD8\u7EA7\u3002 \u793A\u4F8B 3\uFF1A</p><p>\u8F93\u5165\uFF1A&quot;/home//foo/&quot; \u8F93\u51FA\uFF1A&quot;/home/foo&quot; \u89E3\u91CA\uFF1A\u5728\u89C4\u8303\u8DEF\u5F84\u4E2D\uFF0C\u591A\u4E2A\u8FDE\u7EED\u659C\u6760\u9700\u8981\u7528\u4E00\u4E2A\u659C\u6760\u66FF\u6362\u3002 \u793A\u4F8B 4\uFF1A</p><p>\u8F93\u5165\uFF1A&quot;/a/./b/../../c/&quot; \u8F93\u51FA\uFF1A&quot;/c&quot; \u793A\u4F8B 5\uFF1A</p><p>\u8F93\u5165\uFF1A&quot;/a/../../b/../c//.//&quot; \u8F93\u51FA\uFF1A&quot;/c&quot; \u793A\u4F8B 6\uFF1A</p><p>\u8F93\u5165\uFF1A&quot;/a//b////c/d//././/..&quot; \u8F93\u51FA\uFF1A&quot;/a/b/c&quot;</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><p>\u601D\u8DEF:</p><ol><li>\u6839\u636E/\u5C06string \u5206\u5272</li><li>\u7528\u6808\u6765\u5904\u7406</li><li>\u5982\u679C\u662F\u7A7A\u5FFD\u7565,\u5982\u679C\u662F..\u5219\u51FA\u6808</li><li>\u6700\u540E\u628A\u6808\u91CC\u7684\u5B57\u7B26\u4E32\u62FC\u63A5\u5373\u53EF.</li></ol><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">simplify_path</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> st <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> ss<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span>_<span class="token operator">&gt;</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> s <span class="token keyword">in</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//            println!(&quot;s={}&quot;, s);</span>
            <span class="token keyword">if</span> s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> s <span class="token operator">==</span> <span class="token string">&quot;..&quot;</span> <span class="token punctuation">{</span>
                st<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> s <span class="token operator">==</span> <span class="token string">&quot;.&quot;</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                st<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> t <span class="token keyword">in</span> st <span class="token punctuation">{</span>
            s <span class="token operator">+=</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">;</span>
            s <span class="token operator">+=</span> t<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            s <span class="token operator">+=</span> <span class="token string">&quot;/&quot;</span>
        <span class="token punctuation">}</span>
        s
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test_path</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token string">&quot;/home/foo&quot;</span><span class="token punctuation">,</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">simplify_path</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;/home//foo/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token string">&quot;/home&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">simplify_path</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;/home&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">simplify_path</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;/../&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token string">&quot;/c&quot;</span><span class="token punctuation">,</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">simplify_path</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;/a/./b/../../c/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token string">&quot;/a/b/c&quot;</span><span class="token punctuation">,</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">simplify_path</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;/a//b////c/d//././/..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u592A\u7B80\u5355\u4E86,\u6709\u51D1\u6570\u4E4B\u5ACC,\u4E0B\u6B21\u5E94\u8BE5\u627E\u4E00\u4E9B\u6709\u4EF7\u503C\u7684\u6765\u505A</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,22),e=[o];function c(l,u,i,r,k,b){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
