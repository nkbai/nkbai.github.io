import{_ as t,c as l,o as n,N as e,x as s,a}from"./chunks/framework.3a9190c5.js";const q=JSON.parse('{"title":"阈值签名笔记","description":"","frontmatter":{"title":"阈值签名笔记","date":"2018-09-07T01:14:10.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"other/阈值签名.md"}'),i={name:"other/阈值签名.md"},r=e('<h1 id="阈值签名笔记" tabindex="-1">阈值签名笔记 <a class="header-anchor" href="#阈值签名笔记" aria-label="Permalink to &quot;阈值签名笔记&quot;">​</a></h1><h2 id="分布式生成私钥" tabindex="-1">分布式生成私钥 <a class="header-anchor" href="#分布式生成私钥" aria-label="Permalink to &quot;分布式生成私钥&quot;">​</a></h2><h3 id="_1-1-dlogproof" tabindex="-1">1.1 DLogProof <a class="header-anchor" href="#_1-1-dlogproof" aria-label="Permalink to &quot;1.1  DLogProof&quot;">​</a></h3><p>每个公证人都生成自己的随机数,这个随机数也就是后续feldman vss的种子 同时也生成同态加密用的私钥.</p><p>通过广播DLogProof证明这个随机数对应的公钥自己知道</p><h3 id="_1-2-所有人收到其他人的dlogproof" tabindex="-1">1.2 所有人收到其他人的DLogProof <a class="header-anchor" href="#_1-2-所有人收到其他人的dlogproof" aria-label="Permalink to &quot;1.2 所有人收到其他人的DLogProof&quot;">​</a></h3><p>得到最后生成的私钥的公钥,</p><h3 id="_2-1-同态加密私钥的证明" tabindex="-1">2.1 同态加密私钥的证明 <a class="header-anchor" href="#_2-1-同态加密私钥的证明" aria-label="Permalink to &quot;2.1 同态加密私钥的证明&quot;">​</a></h3><p>使用NICorrectKeyProof 生成步骤1中随机生成的同态加密私钥的证明,证明这个私钥自己拥有.后续要使用它来做同态加密</p><h3 id="_2-2-所有人收集并验证其他人的同态加密公钥" tabindex="-1">2.2 所有人收集并验证其他人的同态加密公钥 <a class="header-anchor" href="#_2-2-所有人收集并验证其他人的同态加密公钥" aria-label="Permalink to &quot;2.2 所有人收集并验证其他人的同态加密公钥&quot;">​</a></h3><p>保存下一步使用 这个是在签名的时候使用</p><h3 id="_3-1-根据n-m生成shamirsecretsharing" tabindex="-1">3.1 根据n,m生成ShamirSecretSharing <a class="header-anchor" href="#_3-1-根据n-m生成shamirsecretsharing" aria-label="Permalink to &quot;3.1 根据n,m生成ShamirSecretSharing&quot;">​</a></h3>',12),o=s("p",null,[a("GeneratePhase3SecretShare phase 3.1基于第一步的随机数生成SecretShares, 假设有三个公证人,我的编号是0 0 生成的shares[s00,s01,s02] 1 生成的shares[s10,s11,s12] 2 生成的shares[s20,s21,s22] 那么分发过程是 0: s01->1 s02->2 1: s10->0 s12->2 2: s20->0 s21->1 最终收集齐以后: 0 持有[s00,s10,s20] 累加即为私钥片x0 1 持有[s01,s11,s21] 累加即为私钥片x1 2 持有[202,s12,s22] 累加即为私钥片x2 每个公证人务必保管好自己的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"X"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"X_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.68333em"}}),s("span",{class:"strut bottom",style:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.07847em"}},"X"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.07847em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a(",这是后续签名必须.")],-1),m=e('<h3 id="_4-验证公钥" tabindex="-1">4. 验证公钥 <a class="header-anchor" href="#_4-验证公钥" aria-label="Permalink to &quot;4. 验证公钥&quot;">​</a></h3><p>每个人对自己的私钥片广播相应的DLogProof, 其他人收集齐以后,通过计算,得到的应该是1.2中的总公钥一致</p><h2 id="阈值签名" tabindex="-1">阈值签名 <a class="header-anchor" href="#阈值签名" aria-label="Permalink to &quot;阈值签名&quot;">​</a></h2><h3 id="_1-根据此次选定的签名人-n中的m个" tabindex="-1">1. 根据此次选定的签名人(n中的m个) <a class="header-anchor" href="#_1-根据此次选定的签名人-n中的m个" aria-label="Permalink to &quot;1.  根据此次选定的签名人(n中的m个)&quot;">​</a></h3>',4),c=s("p",null,[a("根据此次选定的签名人集合,依据自己的私钥片"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"X"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"X_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.68333em"}}),s("span",{class:"strut bottom",style:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.07847em"}},"X"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.07847em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a("生成"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"W_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.68333em"}}),s("span",{class:"strut bottom",style:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.13889em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"W_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.68333em"}}),s("span",{class:"strut bottom",style:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.13889em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a("是此次签名锁使用的私钥片,选定的集合相同,那么每次生成的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"W"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"W_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.68333em"}}),s("span",{class:"strut bottom",style:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.13889em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a("也会相同的")],-1),p=e('<p>同时生成此次签名的临时私钥</p><h3 id="_2-广播对于此次签名的临时私钥的证明" tabindex="-1">2. 广播对于此次签名的临时私钥的证明 <a class="header-anchor" href="#_2-广播对于此次签名的临时私钥的证明" aria-label="Permalink to &quot;2. 广播对于此次签名的临时私钥的证明&quot;">​</a></h3><p>其他人虽然不知道这个临时私钥是什么,但是通过这个证明,以后如果使用的不一致,可以检测出来.</p><h3 id="_3-p2p告知其他所有人步骤一生成的ki的密文" tabindex="-1">3. P2P告知其他所有人步骤一生成的KI的密文 <a class="header-anchor" href="#_3-p2p告知其他所有人步骤一生成的ki的密文" aria-label="Permalink to &quot;3. P2P告知其他所有人步骤一生成的KI的密文&quot;">​</a></h3><p>使用第一部分秘钥生成协商得到的一一对应的同态公钥加密KI,然后分别发送给相应的人</p><h3 id="_4-生成并广播deltai" tabindex="-1">4. 生成并广播DeltaI <a class="header-anchor" href="#_4-生成并广播deltai" aria-label="Permalink to &quot;4. 生成并广播DeltaI&quot;">​</a></h3><p>GeneratePhase3DeltaI 依据上一步协商信息,生成我自己的DeltaI,然后广播给所有其他人,需要这些参与公证人得到完整的的Delta 但是生成的SigmaI自己保留,在生成自己的签名片的时候使用</p><h3 id="_5-根据delta生成签名中的r" tabindex="-1">5. 根据Delta生成签名中的R <a class="header-anchor" href="#_5-根据delta生成签名中的r" aria-label="Permalink to &quot;5. 根据Delta生成签名中的R&quot;">​</a></h3><p>所有公证人各自生成R,但是他们的R一定相同</p>',9),h=s("h3",{id:"_6-各自生成自己的签名片并广播相关证明",tabindex:"-1"},[a("6. 各自生成自己的签名片"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"S"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"S_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.68333em"}}),s("span",{class:"strut bottom",style:{height:"0.83333em","vertical-align":"-0.15em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.05764em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a("并广播相关证明 "),s("a",{class:"header-anchor",href:"#_6-各自生成自己的签名片并广播相关证明","aria-label":'Permalink to "6. 各自生成自己的签名片$S_i$并广播相关证明"'},"​")],-1),d=s("p",null,"这里用到了零知识证明HomoElGamalWitness,后续可以验证收到的其他人的签名片和证明是一致的",-1),u=s("h3",{id:"_7-广播si-各自组合得到完整的签名",tabindex:"-1"},[a("7. 广播Si,各自组合得到完整的签名 "),s("a",{class:"header-anchor",href:"#_7-广播si-各自组合得到完整的签名","aria-label":'Permalink to "7. 广播Si,各自组合得到完整的签名"'},"​")],-1),_=[r,o,m,c,p,h,d,u];function f(x,g,b,y,z,k){return n(),l("div",null,_)}const S=t(i,[["render",f]]);export{q as __pageData,S as default};
