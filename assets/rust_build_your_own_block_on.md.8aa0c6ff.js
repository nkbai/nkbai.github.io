import{_ as n,c as s,o as a,a as p}from"./app.8e8e8923.js";const d='{"title":"\u4ECE\u5934\u5B9E\u73B0Rust\u5F02\u6B65block_on","description":"","frontmatter":{"title":"\u4ECE\u5934\u5B9E\u73B0Rust\u5F02\u6B65block_on","date":"2020-04-12T03:57:03.000Z","draft":false,"tags":["rust","async","tokio"],"categories":["\u6280\u672F\u76F8\u5173"]},"headers":[{"level":2,"title":"\u7B7E\u540D","slug":"\u7B7E\u540D"},{"level":2,"title":"\u521D\u6B21\u5C1D\u8BD5","slug":"\u521D\u6B21\u5C1D\u8BD5"},{"level":2,"title":"park\u95EE\u9898","slug":"park\u95EE\u9898"},{"level":2,"title":"\u4E00\u4E2A\u4F18\u5316","slug":"\u4E00\u4E2A\u4F18\u5316"},{"level":2,"title":"\u5982\u4F55\u5904\u7406\u9012\u5F52","slug":"\u5982\u4F55\u5904\u7406\u9012\u5F52"},{"level":2,"title":"Benchmarks","slug":"benchmarks"},{"level":2,"title":"\u7ED3\u8BBA","slug":"\u7ED3\u8BBA"},{"level":2,"title":"\u8F6C\u8F7D\u8BF4\u660E","slug":"\u8F6C\u8F7D\u8BF4\u660E"}],"relativePath":"rust/build_your_own_block_on.md"}',t={},e=p(`<p><a href="https://stjepang.github.io/2020/01/25/build-your-own-block-on.html" target="_blank" rel="noopener noreferrer">\u539F\u6587\u5730\u5740 Build your own block_on()</a></p><ul><li><a href="#%E7%AD%BE%E5%90%8D">\u7B7E\u540D</a></li><li><a href="#%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95">\u521D\u6B21\u5C1D\u8BD5</a></li><li><a href="#park%E9%97%AE%E9%A2%98">park\u95EE\u9898</a></li><li><a href="#%E4%B8%80%E4%B8%AA%E4%BC%98%E5%8C%96">\u4E00\u4E2A\u4F18\u5316</a></li><li><a href="#%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E9%80%92%E5%BD%92">\u5982\u4F55\u5904\u7406\u9012\u5F52</a></li><li><a href="#benchmarks">Benchmarks</a></li><li><a href="#%E7%BB%93%E8%AE%BA">\u7ED3\u8BBA</a></li></ul><p>\u4F60\u662F\u5426\u66FE\u7ECF\u60F3\u8FC7<a href="https://docs.rs/futures" target="_blank" rel="noopener noreferrer">futures</a>\u4E2D\u7684<a href="https://docs.rs/futures/0.3.1/futures/executor/fn.block_on.html" target="_blank" rel="noopener noreferrer">block_on</a>\u662F\u5982\u4F55\u5DE5\u4F5C\u7684\u5462?\u4ECA\u5929\u6211\u4EEC\u5C31\u6765\u5B9E\u73B0\u4F60\u81EA\u5DF1\u7684block_on\u7248\u672C.</p><p>\u8FD9\u7BC7\u535A\u5BA2\u7075\u611F\u5E94\u8BE5\u6765\u81EA\u4E24\u4E2Acrate, \u5206\u522B\u662F<a href="https://docs.rs/wakeful" target="_blank" rel="noopener noreferrer">wakeful</a>\u548C<a href="https://github.com/spacejam/extreme" target="_blank" rel="noopener noreferrer">extreme</a>. <code>wakeful</code>\u63D0\u4F9B\u4E86\u4E00\u79CD\u7B80\u5355\u7684\u76F4\u63A5\u4ECE\u4E00\u4E2A\u51FD\u6570\u521B\u5EFA<a href="https://doc.rust-lang.org/nightly/std/task/struct.Waker.html" target="_blank" rel="noopener noreferrer">Waker</a>\u7684\u65B9\u6CD5,<code>extreme</code>\u5219\u63D0\u4F9B\u4E86\u4E00\u79CD\u975E\u5E38\u7B80\u6D01\u7684block_on\u5B9E\u73B0.</p><p>\u6211\u4EEC\u7684\u5B9E\u73B0\u76EE\u6807\u5C06\u4E0E<code>extreme</code>\u7565\u6709\u4E0D\u540C\u3002 \u6211\u4EEC\u4E0D\u518D\u8FFD\u6C42\u96F6\u4F9D\u8D56\u6027\u548C\u6700\u5C11\u7684\u4EE3\u7801\u884C\u6570\uFF0C\u800C\u662F\u8FFD\u6C42\u4E00\u4E2A\u5B89\u5168\u3001\u9AD8\u6548\u4F46\u4ECD\u7136\u76F8\u5F53\u7B80\u5355\u7684\u5B9E\u73B0\u3002</p><p>\u6211\u4EEC\u5C06\u4F7F\u7528\u7684\u4F9D\u8D56\u9879\u6709 <a href="https://docs.rs/pin-utils" target="_blank" rel="noopener noreferrer">pin-utils</a>\u3001 <a href="https://docs.rs/crossbeam" target="_blank" rel="noopener noreferrer">crossbeam</a> \u548C <a href="https://docs.rs/async-task" target="_blank" rel="noopener noreferrer">async-task</a>\u3002</p><h2 id="\u7B7E\u540D" tabindex="-1">\u7B7E\u540D <a class="header-anchor" href="#\u7B7E\u540D" aria-hidden="true">#</a></h2><p>block_on\u7684\u7B7E\u540D\u5982\u4E0B\u6240\u793A\u3002 \u6211\u4EEC\u4EE5\u4E00\u4E2A future \u4F5C\u4E3A\u53C2\u6570\uFF0C\u5728\u5F53\u524D\u7EBF\u7A0B\u4E0A\u8FD0\u884C\u5B83(\u5F53\u5B83pending\u65F6\u963B\u585E) \uFF0C\u7136\u540E\u8FD4\u56DE\u5B83\u7684\u8F93\u51FA:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">block_on</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token punctuation">:</span> <span class="token class-name">Future</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>future<span class="token punctuation">:</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">F</span><span class="token punctuation">::</span><span class="token class-name">Output</span> <span class="token punctuation">{</span>
    <span class="token macro property">todo!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u73B0\u5728\u8BA9\u6211\u4EEC\u5B9E\u73B0\u9057\u6F0F\u7684 todo! ()\u90E8\u5206\u3002</p><h2 id="\u521D\u6B21\u5C1D\u8BD5" tabindex="-1">\u521D\u6B21\u5C1D\u8BD5 <a class="header-anchor" href="#\u521D\u6B21\u5C1D\u8BD5" aria-hidden="true">#</a></h2><p>\u8BF7\u6CE8\u610F\uFF0C\u6807\u51C6\u5E93\u7684<a href="./.html">Future</a>\u4E2D\u7684<a href="https://doc.rust-lang.org/nightly/std/future/trait.Future.html#tymethod.poll" target="_blank" rel="noopener noreferrer">poll</a>\u7684\u53C2\u6570\u662F\u4E00\u4E2A <code>Pin&lt;&amp;mut Future&gt;</code>\u3002 \u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5148\u628A\u5B83\u56FA\u5B9A(Pin)\u4F4F\u3002 \u867D\u7136\u6709\u4E00\u79CD\u65B9\u6CD5\u53EF\u4EE5\u5B89\u5168\u5730\u4F7F\u7528<code>Box::pin()</code>\u6765\u5B9E\u73B0\u8FD9\u4E00\u70B9\uFF0C\u4F46\u662F\u6211\u4EEC\u66F4\u613F\u610F\u628AFuture\u653E\u5728\u6808\u4E0A\u800C\u4E0D\u662F\u5806\u4E0A(\u8BD1\u8005\u6CE8 Box::Pin\u4F1A\u628AFuture\u5206\u914D\u5230\u5806\u4E0A,\u7136\u540EPin)\u3002</p><p>\u4E0D\u5E78\u7684\u662F\uFF0C\u5B89\u5168\u5730\u5C06Future\u56FA\u5B9A\u5728\u6808\u4E0A\u7684\u552F\u4E00\u65B9\u6CD5\u662F\u4F7F\u7528 <code>pin-utils</code> :</p><div class="language-rust line-numbers-mode"><pre><code><span class="token namespace">pin_utils<span class="token punctuation">::</span></span><span class="token macro property">pin_mut!</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p><a href="https://docs.rs/pin-utils/0.1.0-alpha.4/pin_utils/macro.pin_mut.html" target="_blank" rel="noopener noreferrer">pin_mut</a>\u8FD9\u4E2A\u5B8F\u4F1A\u5C06\u4E00\u4E2A\u7C7B\u578B\u4E3A<code>F</code>\u7684<code>future</code>\u8F6C\u6362\u4E3A<code>Pin&lt;&amp;mut F&gt;</code>,\u5E76\u5C06\u5176\u56FA\u5B9A\u5728\u6808\u4E0A.</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u9700\u8981\u8BE6\u7EC6\u8BF4\u660E\u5F53\u8FD9\u4E2A<code>future</code>\u88AB\u5524\u9192\u65F6\u4F1A\u53D1\u751F\u4EC0\u4E48\u3002 \u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u5524\u9192\u5E94\u8BE5\u53EA\u662F\u89E3\u9664\u8FD0\u884C<code>future</code>\u7684\u7EBF\u7A0B\u7684\u963B\u585E\u3002</p><p>\u6784\u9020\u4E00\u4E2A\u5524\u9192\u5668\u53EF\u80FD\u5F88\u4E11\u964B\u30FC\u30FC\u53EA\u8981\u770B\u4E00\u773C<code>extreme</code>\u7684\u5B9E\u73B0\u5C31\u53EF\u4EE5\u4E86\u3002 \u8FD9\u662F\u624B\u5DE5\u6784\u5EFA<code>Waker</code>\u6700\u7B80\u5355\u7684\u65B9\u6CD5\uFF01 \u5230\u5904\u90FD\u662F\u539F\u59CB\u6307\u9488\u548C\u4E0D\u5B89\u5168\u7684\u4EE3\u7801... ... \u8BA9\u6211\u4EEC\u6682\u65F6\u8DF3\u8FC7\u8FD9\u4E00\u90E8\u5206\uFF0C\u4EE5\u540E\u518D\u586B\u7A7A\u3002</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">let</span> waker <span class="token operator">=</span> <span class="token macro property">todo!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u6700\u540E\uFF0C\u6211\u4EEC\u4ECE<code>Waker</code>\u521B\u5EFA\u4E00\u4E2A\u4EFB\u52A1\u4E0A\u4E0B\u6587\uFF0C\u5E76\u5728\u5FAA\u73AF\u4E2D\u8F6E\u8BE2<code>future</code>\u3002 \u5982\u679C\u5B8C\u6210\uFF0C\u8FD4\u56DE\u8F93\u51FA\u3002 \u5982\u679C\u5B83\u6302\u8D77\uFF0C\u963B\u6B62\u5F53\u524D\u7EBF\u7A0B:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">let</span> cx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Context</span><span class="token punctuation">::</span><span class="token function">from_waker</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>waker<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">loop</span> <span class="token punctuation">{</span>
    <span class="token keyword">match</span> future<span class="token punctuation">.</span><span class="token function">as_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>cx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Ready</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">return</span> output<span class="token punctuation">,</span>
        <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Pending</span> <span class="token operator">=&gt;</span> <span class="token namespace">thread<span class="token punctuation">::</span></span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8BF7\u522B\u5BF9<a href="https://doc.rust-lang.org/nightly/std/task/struct.Context.html" target="_blank" rel="noopener noreferrer">Contex</a>\u7C7B\u578B\u611F\u5230\u56F0\u60D1,\u5B83\u5C31\u662F Waker \u7684\u4E00\u4E2A\u5305\u88C5\u5668\u30FC\u30FC\u6CA1\u6709\u4EC0\u4E48\u6BD4\u8FD9\u66F4\u597D\u7684\u4E86\u3002 \u5F53\u5728 Rust \u4E2D\u8BBE\u8BA1 async / await \u65F6\uFF0C\u6211\u4EEC\u4E0D\u786E\u5B9A\u9664\u4E86\u4F20\u9012 Waker\u7ED9poll ()\u4E4B\u5916\uFF0C\u4F20\u9012\u5176\u4ED6\u4EFB\u4F55\u4E1C\u897F\u662F\u5426\u6709\u7528\uFF0C\u6240\u4EE5\u6211\u4EEC\u60F3\u51FA\u4E86\u8FD9\u4E2A\u5305\u88C5\u5668\uFF0C\u5B83\u53EF\u80FD\u5728 Rust \u7684\u672A\u6765\u7248\u672C\u4E2D\u5305\u542B\u66F4\u591A\u7684\u4E1C\u897F\u3002</p><p>\u4E0D\u7BA1\u600E\u6837... \u6211\u4EEC\u5DEE\u4E0D\u591A\u5B8C\u6210\u4E86\u3002\u8BA9\u6211\u4EEC\u56DE\u5230\u521A\u624D\u7684block_on\uFF0C\u5E76\u5C06todo\u66FF\u6362\u4E3A\u4E0A\u9762\u7684\u4EE3\u7801\u3002</p><p>\u4ED4\u7EC6\u60F3\u60F3\uFF0CWaker \u5B9E\u9645\u4E0A\u662F<code>Arc&lt;dyn Fn () + Send + Sync&gt;</code>\u7684\u7CBE\u5FC3\u4F18\u5316\u7248\u672C\uFF0C<a href="https://doc.rust-lang.org/nightly/std/task/struct.Waker.html#method.wake" target="_blank" rel="noopener noreferrer">wake()</a>\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\u3002 \u6362\u53E5\u8BDD\u8BF4\uFF0CWaker \u662F\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u5F53\u5C06\u6765\u53EF\u4EE5\u7EE7\u7EED\u6267\u884C\u65F6\uFF0C\u5B83\u5C31\u4F1A\u88AB\u8C03\u7528\u3002</p><p>\u56E0\u4E3A Waker \u662F\u5982\u6B64\u96BE\u4EE5\u6784\u9020\uFF0C\u6240\u4EE5 <a href="https://github.com/sagebind" target="_blank" rel="noopener noreferrer">sagebind</a> \u63D0\u4F9B\u4E86 <a href="https://docs.rs/wakeful/0.1.1/wakeful/fn.waker_fn.html" target="_blank" rel="noopener noreferrer">waker_fn()</a> \uFF0C\u8FD9\u662F\u4E00\u79CD\u5C06\u4EFB\u4F55\u51FD\u6570\u8F6C\u6362\u4E3A Waker \u7684\u76F4\u63A5\u65B9\u6CD5\u3002 \u4E0D\u5E78\u7684\u662F\uFF0C<code>wakeful</code>\u4F3C\u4E4E\u6B64\u523B\u88AB\u731B\u62C9\uFF0C\u6240\u4EE5\u6211\u501F\u7528\u4E86<code>wakerfn()</code>\u5E76\u5C06\u5176\u653E\u5165\u6211\u7684<code>async-task</code>\u4E2D\u3002</p><p>\u5728\u6211\u4EEC\u7684\u4EE3\u7801\u5757\u4E2D\uFF0C\u56DE\u8C03\u51FD\u6570\u5C31\u662F\u5524\u9192future\u6240\u5728\u7EBF\u7A0B:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">let</span> thread <span class="token operator">=</span> <span class="token namespace">thread<span class="token punctuation">::</span></span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> waker <span class="token operator">=</span> <span class="token namespace">async_task<span class="token punctuation">::</span></span><span class="token function">waker_fn</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> thread<span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7B80\u5355\u591A\u4E86! \u6BD4\u8D77\u5904\u7406RawWaker \u548C RawWakerVTable \u597D\u591A\u4E86\u3002</p><p>\u5728\u5185\u90E8\uFF0Cwaker_fn()\u6784\u9020\u51FD\u6570\u5B9E\u9645\u4E0A\u521B\u5EFA\u4E86 <code>Arc&lt;impl Fn () + Send + Sync&gt;</code>\uFF0C\u7136\u540E\u7528\u4E0D\u5B89\u5168\u7684\u4EE3\u7801\u5C06\u5176\u8F6C\u6362\u4E3A Waker\uFF0C\u8FD9\u4E9B\u4EE3\u7801\u770B\u8D77\u6765\u4E0E\u6211\u4EEC\u5728extreme\u4E2D\u770B\u5230\u7684\u7C7B\u4F3C\u3002</p><p>\u4E0B\u9762\u662F\u5BF9block_on\u7684\u5B8C\u6574\u5B9E\u73B0:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">block_on</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token punctuation">:</span> <span class="token class-name">Future</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>future<span class="token punctuation">:</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">F</span><span class="token punctuation">::</span><span class="token class-name">Output</span> <span class="token punctuation">{</span>
    <span class="token namespace">pin_utils<span class="token punctuation">::</span></span><span class="token macro property">pin_mut!</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> thread <span class="token operator">=</span> <span class="token namespace">thread<span class="token punctuation">::</span></span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> waker <span class="token operator">=</span> <span class="token namespace">async_task<span class="token punctuation">::</span></span><span class="token function">waker_fn</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> thread<span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> cx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Context</span><span class="token punctuation">::</span><span class="token function">from_waker</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>waker<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">loop</span> <span class="token punctuation">{</span>
        <span class="token keyword">match</span> future<span class="token punctuation">.</span><span class="token function">as_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>cx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Ready</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">return</span> output<span class="token punctuation">,</span>
            <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Pending</span> <span class="token operator">=&gt;</span> <span class="token namespace">thread<span class="token punctuation">::</span></span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5B8C\u6574\u4EE3\u7801\u89C1<a href="https://github.com/stjepang/byo-block-on/blob/master/examples/v1.rs" target="_blank" rel="noopener noreferrer">v1.rs</a></p><h2 id="park\u95EE\u9898" tabindex="-1">park\u95EE\u9898 <a class="header-anchor" href="#park\u95EE\u9898" aria-hidden="true">#</a></h2><p>\u4F46\u662F\uFF0C\u73B0\u5728\u8FD8\u4E0D\u662F\u5E86\u795D\u7684\u65F6\u5019\u3002 \u6709\u4E2A\u95EE\u9898\u3002 \u5982\u679Cfuture\u7684\u7528\u6237\u4EE3\u7801\u4E5F\u4F7F\u7528 park / unpark API\uFF0C\u5B83\u53EF\u80FD\u4F1A\u4ECE\u56DE\u8C03\u51FD\u6570\u4E2D\u83B7\u53D6\u5E76\u201C\u5077\u53D6\u201D unpark \u901A\u77E5\u3002 \u9605\u8BFB<a href="https://github.com/rust-lang/futures-rs/pull/2010" target="_blank" rel="noopener noreferrer">\u8FD9\u4E2A\u95EE\u9898</a>\u53EF\u4EE5\u5F97\u5230\u66F4\u8BE6\u7EC6\u7684\u89E3\u91CA\u3002</p><blockquote><p>\u8BD1\u8005\u6CE8 \u8BF4\u767D\u4E86\u5C31\u662F\u56E0\u4E3A\u90FD\u5728\u7528unpark,\u4F1A\u8BA9\u5BFC\u81F4\u4E0D\u8BE5\u5524\u9192\u7684\u65F6\u5019\u88AB\u5524\u9192,\u6216\u8005\u6536\u4E0D\u5230\u5524\u9192\u901A\u77E5.</p></blockquote><p>\u4E00\u4E2A\u53EF\u80FD\u7684\u89E3\u51B3\u65B9\u6848\u662F\u4F7F\u7528\u4E00\u79CD\u4E0D\u540C\u4E8E std: : thread \u6A21\u5757\u4E2D\u7684\u7EBF\u7A0B\u7684park/unpark\u65B9\u6CD5\u3002 \u8FD9\u6837\uFF0Cfuture\u7684\u4EE3\u7801\u5C31\u4E0D\u4F1A\u5E72\u6270\u5524\u9192\u3002</p><p>\u5728crossbeam\u4E2D\u6709\u4E00\u4E2A\u975E\u5E38\u7C7B\u4F3C\u7684 park / unpark \u673A\u5236\uFF0C\u53EA\u4E0D\u8FC7\u5B83\u5141\u8BB8\u6211\u4EEC\u521B\u5EFA\u4EFB\u610F\u591A\u7684\u72EC\u7ACB\u7684 parkers\uFF0C\u800C\u4E0D\u662F\u6BCF\u4E2A\u7EBF\u7A0B\u90FD\u6709\u4E00\u4E2A\u3002 \u8BA9\u6211\u4EEC\u4E3Ablock_on\u7684\u6BCF\u4E00\u6B21\u8C03\u90FD\u72EC\u7ACB\u521B\u5EFA\u4E00\u4E2Aparker:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">block_on</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token punctuation">:</span> <span class="token class-name">Future</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>future<span class="token punctuation">:</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">F</span><span class="token punctuation">::</span><span class="token class-name">Output</span> <span class="token punctuation">{</span>
    <span class="token namespace">pin_utils<span class="token punctuation">::</span></span><span class="token macro property">pin_mut!</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> parker <span class="token operator">=</span> <span class="token class-name">Parker</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> unparker <span class="token operator">=</span> parker<span class="token punctuation">.</span><span class="token function">unparker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> waker <span class="token operator">=</span> <span class="token namespace">async_task<span class="token punctuation">::</span></span><span class="token function">waker_fn</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> unparker<span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> cx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Context</span><span class="token punctuation">::</span><span class="token function">from_waker</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>waker<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">loop</span> <span class="token punctuation">{</span>
        <span class="token keyword">match</span> future<span class="token punctuation">.</span><span class="token function">as_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>cx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Ready</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">return</span> output<span class="token punctuation">,</span>
            <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Pending</span> <span class="token operator">=&gt;</span> parker<span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5C31\u8FD9\u6837! \u95EE\u9898\u89E3\u51B3\u4E86\u3002 \u5B8C\u6574\u7684\u4EE3\u7801\u5728<a href="https://github.com/stjepang/byo-block-on/blob/master/examples/v2.rs" target="_blank" rel="noopener noreferrer">v2.rs</a>,\u4F60\u53EF\u4EE5\u53BB\u8FD0\u884C\u4ED6.</p><h2 id="\u4E00\u4E2A\u4F18\u5316" tabindex="-1">\u4E00\u4E2A\u4F18\u5316 <a class="header-anchor" href="#\u4E00\u4E2A\u4F18\u5316" aria-hidden="true">#</a></h2><p>\u521B\u5EFA\u4E00\u4E2A Parker \u548C Waker \u5E76\u4E0D\u662F\u514D\u8D39\u7684\u30FC\u30FC\u8FD9\u4E24\u8005\u90FD\u4F1A\u5F15\u8D77\u5185\u5B58\u5206\u914D\uFF0C \u6211\u4EEC\u80FD\u6539\u8FDB\u5417\uFF1F</p><p>\u4E3A\u4EC0\u4E48\u4E0D\u5728\u7EBF\u7A0B\u672C\u5730\u5B58\u50A8\u5668\u4E2D\u7F13\u5B58\u5B83\u4EEC\uFF0C\u800C\u4E0D\u662F\u5728\u6BCF\u6B21\u8C03\u7528block_on\u65F6\u6784\u9020 Parker \u548C Waker \u5462\uFF1F \u8FD9\u6837\uFF0C\u7EBF\u7A0B\u5C31\u53EF\u4EE5\u5728 block on ()\u7684\u6240\u6709\u8C03\u7528\u4E2D\u91CD\u7528\u76F8\u540C\u7684\u5B9E\u4F8B:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">block_on</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token punctuation">:</span> <span class="token class-name">Future</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>future<span class="token punctuation">:</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">F</span><span class="token punctuation">::</span><span class="token class-name">Output</span> <span class="token punctuation">{</span>
    <span class="token namespace">pin_utils<span class="token punctuation">::</span></span><span class="token macro property">pin_mut!</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">thread_local!</span> <span class="token punctuation">{</span>
        <span class="token keyword">static</span> <span class="token constant">CACHE</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">Parker</span><span class="token punctuation">,</span> <span class="token class-name">Waker</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> parker <span class="token operator">=</span> <span class="token class-name">Parker</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> unparker <span class="token operator">=</span> parker<span class="token punctuation">.</span><span class="token function">unparker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> waker <span class="token operator">=</span> <span class="token namespace">async_task<span class="token punctuation">::</span></span><span class="token function">waker_fn</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> unparker<span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">(</span>parker<span class="token punctuation">,</span> waker<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token constant">CACHE</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token punctuation">(</span>parker<span class="token punctuation">,</span> waker<span class="token punctuation">)</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> cx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Context</span><span class="token punctuation">::</span><span class="token function">from_waker</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>waker<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">loop</span> <span class="token punctuation">{</span>
            <span class="token keyword">match</span> future<span class="token punctuation">.</span><span class="token function">as_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>cx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Ready</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">return</span> output<span class="token punctuation">,</span>
                <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Pending</span> <span class="token operator">=&gt;</span> parker<span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u5982\u679Cfuture\u80FD\u591F\u5FEB\u901F\u6267\u884C\uFF0C\u8FD9\u4E2A\u5C0F\u5C0F\u7684\u66F4\u6539\u5C06\u4F7F block on ()\u6548\u7387\u5927\u5927\u63D0\u5347\uFF01</p><p>\u5B8C\u6574\u7684\u4EE3\u7801\u5728<a href="https://github.com/stjepang/byo-block-on/blob/master/examples/v3.rs" target="_blank" rel="noopener noreferrer">v3.rs</a>\u4E2D</p><h2 id="\u5982\u4F55\u5904\u7406\u9012\u5F52" tabindex="-1">\u5982\u4F55\u5904\u7406\u9012\u5F52 <a class="header-anchor" href="#\u5982\u4F55\u5904\u7406\u9012\u5F52" aria-hidden="true">#</a></h2><p>\u662F\u5426\u8FD8\u6709\u5176\u4ED6\u95EE\u9898?</p><p>\u5982\u679Cfuture\u5728block_on\u7684\u5185\u90E8\u5757\u518D\u6B21\u9012\u5F52\u5730\u8C03\u7528block_on\u4F1A\u600E\u6837? \u5F53\u7136\u6211\u4EEC\u53EF\u4EE5\u5141\u8BB8\u4E5F\u53EF\u4EE5\u7981\u6B62\u9012\u5F52\u3002</p><p>\u5982\u679C\u6211\u4EEC\u9009\u62E9\u5141\u8BB8\u9012\u5F52\uFF0C\u90A3\u4E48\u6211\u4EEC\u8FD8\u9700\u8981\u786E\u4FDD block on ()\u7684\u9012\u5F52\u8C03\u7528\u4E0D\u5171\u4EAB\u76F8\u540C\u7684 Parker \u548C Waker \u5B9E\u4F8B\uFF0C\u5426\u5219\u5C31\u65E0\u6CD5\u77E5\u9053\u54EA\u4E2A block on ()\u8C03\u7528\u4F1A\u88AB\u5524\u9192\u3002</p><p>futures\u7684block on \u53D1\u751F\u9012\u5F52\u8C03\u7528\u4F1Apanic\u3002 \u5BF9\u4E8E\u5141\u8BB8\u9012\u5F52\u8FD8\u662F\u7981\u6B62\u9012\u5F52\uFF0C\u6211\u6CA1\u6709\u5F3A\u70C8\u7684\u610F\u89C1---- \u8FD9\u4E24\u79CD\u884C\u4E3A\u90FD\u662F\u660E\u667A\u7684\u3002 \u4F46\u662F\uFF0C\u65E2\u7136\u6211\u4EEC\u5728\u6A21\u4EFFfutures\u7684\u7248\u672C\uFF0C\u90A3\u4E48\u5C31\u4E0D\u8981\u4F7F\u7528\u9012\u5F52\u3002</p><p>\u4E3A\u4E86\u68C0\u6D4B\u9012\u5F52\u8C03\u7528\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5F15\u5165\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u672C\u5730\u53D8\u91CF\u6765\u6307\u793A\u6211\u4EEC\u5F53\u524D\u662F\u5426\u5728 block on()\u4E2D\u3002 \u4F46\u8FD9\u662F\u4E00\u4E2A\u5F88\u5927\u7684\u5DE5\u4F5C\u91CF\u3002</p><p>\u8FD9\u91CC\u6709\u4E00\u4E2A\u5F88\u9177\u7684\u6280\u5DE7\uFF0C\u5B83\u53EA\u9700\u5BF9\u4EE3\u7801\u8FDB\u884C\u66F4\u5C11\u7684\u66F4\u6539\u3002 \u8BA9\u6211\u4EEC\u628A(Parker\uFF0CWaker)\u5305\u88C5\u5230 RefCell \u4E2D\uFF0C\u5982\u679C\u591A\u6B21\u53D1\u751F\u53EF\u53D8\u7684\u501F\u7528\uFF0C\u7A0B\u5E8F\u5C31\u4F1Apanic:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">block_on</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token punctuation">:</span> <span class="token class-name">Future</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>future<span class="token punctuation">:</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">F</span><span class="token punctuation">::</span><span class="token class-name">Output</span> <span class="token punctuation">{</span>
    <span class="token namespace">pin_utils<span class="token punctuation">::</span></span><span class="token macro property">pin_mut!</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">thread_local!</span> <span class="token punctuation">{</span>
        <span class="token keyword">static</span> <span class="token constant">CACHE</span><span class="token punctuation">:</span> <span class="token class-name">RefCell</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token class-name">Parker</span><span class="token punctuation">,</span> <span class="token class-name">Waker</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> parker <span class="token operator">=</span> <span class="token class-name">Parker</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> unparker <span class="token operator">=</span> parker<span class="token punctuation">.</span><span class="token function">unparker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> waker <span class="token operator">=</span> <span class="token namespace">async_task<span class="token punctuation">::</span></span><span class="token function">waker_fn</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> unparker<span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">RefCell</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">(</span>parker<span class="token punctuation">,</span> waker<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token constant">CACHE</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>cache<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token punctuation">(</span>parker<span class="token punctuation">,</span> waker<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token operator">*</span>cache<span class="token punctuation">.</span><span class="token function">try_borrow_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;recursive \`block_on\`&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> cx <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Context</span><span class="token punctuation">::</span><span class="token function">from_waker</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>waker<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">loop</span> <span class="token punctuation">{</span>
            <span class="token keyword">match</span> future<span class="token punctuation">.</span><span class="token function">as_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>cx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Ready</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">return</span> output<span class="token punctuation">,</span>
                <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Pending</span> <span class="token operator">=&gt;</span> parker<span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u7EC8\u4E8E\u3002 \u73B0\u5728\u6211\u4EEC\u771F\u7684\u7ED3\u675F\u4E86\uFF0C\u6211\u4FDD\u8BC1\uFF01 \u6700\u7EC8\u7684\u5B9E\u73B0\u662F\u6B63\u786E\u7684\uFF0C\u5065\u58EE\u7684\uFF0C\u9AD8\u6548\u7684\u3002 \u5DEE\u4E0D\u591A\u5427\u3002 \u{1F603}</p><p>\u5B8C\u6574\u7684\u4EE3\u7801\u89C1<a href="https://github.com/stjepang/byo-block-on/blob/master/examples/v4.rs" target="_blank" rel="noopener noreferrer">v4.rs</a></p><h2 id="benchmarks" tabindex="-1">Benchmarks <a class="header-anchor" href="#benchmarks" aria-hidden="true">#</a></h2><p>\u4E3A\u4E86\u6D4B\u8BD5block_on\u7684\u6548\u7387\uFF0C\u8BA9\u6211\u4EEC\u5C06\u5B83\u4E0Efutures\u7684\u8FDB\u884C\u57FA\u51C6\u6D4B\u8BD5\u6BD4\u8F83\u3002</p><p>\u4F46\u662F\u9996\u5148\uFF0C\u6211\u4EEC\u5C06\u7F16\u5199\u4E00\u4E2A helper future \u7C7B\u578B\uFF0C\u5B83\u53EF\u4EE5\u53CD\u590D\u88AB\u8F6E\u8BE2\uFF0C\u76F4\u5230\u5B8C\u6210:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Yields</span><span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">impl</span> <span class="token class-name">Future</span> <span class="token keyword">for</span> <span class="token class-name">Yields</span> <span class="token punctuation">{</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">Output</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">poll</span><span class="token punctuation">(</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">:</span> <span class="token class-name">Pin</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">Self</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> cx<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Context</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Poll</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Ready</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            cx<span class="token punctuation">.</span><span class="token function">waker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wake_by_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Poll</span><span class="token punctuation">::</span><span class="token class-name">Pending</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u4E3A\u4E86\u6D4B\u8BD5\u8F6E\u8BE2\u5341\u6B21\u7684\u6027\u80FD,\u53EF\u4EE5\u8FD9\u6837\u5199:</p><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[bench]</span>
<span class="token keyword">fn</span> <span class="token function-definition function">custom_block_on_10_yields</span><span class="token punctuation">(</span>b<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Bencher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    b<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token function">block_on</span><span class="token punctuation">(</span><span class="token class-name">Yields</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8BA9\u6211\u4EEC\u8BBE\u5B9A\u4E00\u7EC4\u4E09\u4E2A\u57FA\u51C6\uFF0C\u8F6E\u8BE2\u6B21\u6570\u5206\u522B\u4E3A0\u300110\u548C50\u3002 \u6211\u4EEC\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684block_on\uFF0C\u7136\u540E\u4F7F\u7528 futures \u7684\u3002 \u60A8\u53EF\u4EE5\u5728 <a href="https://github.com/stjepang/byo-block-on/blob/master/benches/yield.rs" target="_blank" rel="noopener noreferrer">yield.rs</a> \u4E2D\u627E\u5230\u5B8C\u6574\u7684\u57FA\u51C6\u6D4B\u8BD5\u4EE3\u7801\u3002</p><p>\u4E0B\u9762\u662F\u6211\u7684\u673A\u5668\u4E0A\u7684\u7ED3\u679C:</p><div class="language-"><pre><code>
test custom_block_on_0_yields   ... bench:           3 ns/iter (+/- 0)
test custom_block_on_10_yields  ... bench:         130 ns/iter (+/- 12)
test custom_block_on_50_yields  ... bench:         638 ns/iter (+/- 20)
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-"><pre><code>test futures_block_on_0_yields  ... bench:          10 ns/iter (+/- 0)
test futures_block_on_10_yields ... bench:         236 ns/iter (+/- 10)
test futures_block_on_50_yields ... bench:       1,139 ns/iter (+/- 30)
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u7ED3\u679C\u663E\u793A\uFF0C\u5728\u8FD9\u4E2A\u7279\u5B9A\u7684\u57FA\u51C6\u6D4B\u8BD5\u4E2D\uFF0C\u6211\u4EEC\u7684block_on\u6BD4futures\u7684\u5927\u7EA6\u5FEB2\u52303\u500D\uFF0C\u8FD9\u4E00\u70B9\u90FD\u4E0D\u5DEE\uFF01</p><h2 id="\u7ED3\u8BBA" tabindex="-1">\u7ED3\u8BBA <a class="header-anchor" href="#\u7ED3\u8BBA" aria-hidden="true">#</a></h2><p>Async Rust \u4E4B\u6240\u4EE5\u4EE4\u4EBA\u751F\u754F\uFF0C\u662F\u56E0\u4E3A\u5B83\u5305\u542B\u4E86\u592A\u591A\u7684\u673A\u5236: Future trait\u3001 pinning\u3001 Context\u3001 Waker \u53CA\u5176\u76F8\u5173\u7684RawWaker \u548C RawWakerVTable\u3001 Async \u548C await \u7684\u8BED\u6CD5\u7CD6\u80CC\u540E\u7684\u673A\u5236\u3001\u4E0D\u5B89\u5168\u7684\u4EE3\u7801\u3001\u539F\u59CB\u6307\u9488\u7B49\u7B49\u3002</p><p>\u4F46\u95EE\u9898\u662F\uFF0C\u8BB8\u591A\u4E11\u964B\u7684\u4E1C\u897F\u751A\u81F3\u4E0D\u662F\u90A3\u4E48\u91CD\u8981\u30FC\u30FC\u5B9E\u9645\u4E0A\u5B83\u4EEC\u53EA\u662F\u65E0\u804A\u7684\u6837\u677F\u6587\u4EF6\uFF0C\u53EF\u4EE5\u7528\u50CF pin-utils\u3001async-task\u548C crossbeam\u8FD9\u6837\u7684crate\u7ED5\u5F00\u3002</p><p>\u5B9E\u9645\u4E0A\uFF0C\u4ECA\u5929\u6211\u4EEC\u5DF2\u7ECF\u5728\u51E0\u884C\u5B89\u5168\u4EE3\u7801\u4E2D\u6784\u5EFA\u4E86\u4E00\u4E2A\u9AD8\u6548\u7684block_on\uFF0C\u800C\u4E0D\u9700\u8981\u7406\u89E3\u5927\u90E8\u5206\u7684\u6837\u677F\u6587\u4EF6\u3002 \u5728\u53E6\u4E00\u7BC7\u535A\u6587\u4E2D\uFF0C\u6211\u4EEC\u5C06\u5EFA\u7ACB\u4E00\u4E2A\u771F\u6B63\u7684\u6267\u884C\u5668..\u3002</p><h2 id="\u8F6C\u8F7D\u8BF4\u660E" tabindex="-1">\u8F6C\u8F7D\u8BF4\u660E <a class="header-anchor" href="#\u8F6C\u8F7D\u8BF4\u660E" aria-hidden="true">#</a></h2><p>\u672C\u6587\u5141\u8BB8\u8F6C\u8F7D,\u4F46\u662F\u8BF7\u6CE8\u660E\u51FA\u5904.\u4F5C\u8005:stevenbai \u672C\u4EBA\u535A\u5BA2:<a href="https://stevenbai.top/" target="_blank" rel="noopener noreferrer">https://stevenbai.top/</a></p>`,71),o=[e];function c(l,u,r,k,i,b){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
