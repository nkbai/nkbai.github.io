import{o as s,c as a,e as n}from"./app.735ab1d2.js";const e='{"title":"[9485733]bitcoin script","description":"","frontmatter":{"title":"[9485733]bitcoin script","date":"2018-11-21T06:12:53.000Z","draft":false,"markup":"mmark"},"headers":[{"level":2,"title":"1.P2PK paytopublic_key","slug":"_1-p2pk-pay-to-public-key"},{"level":2,"title":"2. P2PKH paytopublickeyhash","slug":"_2-p2pkh-pay-to-public-key-hash"},{"level":2,"title":"3.P2SH paytoscript_hash","slug":"_3-p2sh-pay-to-script-hash"},{"level":2,"title":"4.P2WPKH paytowitnesspublickey_hash","slug":"_4-p2wpkh-pay-to-witness-public-key-hash"},{"level":2,"title":"5. P2WSH paytowitnessscripthash","slug":"_5-p2wsh-pay-to-witness-script-hash"},{"level":2,"title":"矿工如何区分交易类型?","slug":"矿工如何区分交易类型"},{"level":2,"title":"scriptSig包含什么内容?","slug":"scriptsig包含什么内容"}],"relativePath":"blockchain/btcd/[9485733]bitcoin script.md","lastUpdated":1640094729233}',p={},t=[n('<h1 id="p2pk-p2pkh-ms-p2sh-op-return-等的区别"><a class="header-anchor" href="#p2pk-p2pkh-ms-p2sh-op-return-等的区别" aria-hidden="true">#</a> P2PK P2PKH,MS,P2SH,OP_RETURN 等的区别</h1><h2 id="_1-p2pk-pay-to-public-key"><a class="header-anchor" href="#_1-p2pk-pay-to-public-key" aria-hidden="true">#</a> 1.P2PK pay_to_public_key</h2><p>pubkey script:</p><div class="language-"><pre><code> &lt;pubkey&gt; OP_CHECKSIG\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>signature script: [sig]</p><h2 id="_2-p2pkh-pay-to-public-key-hash"><a class="header-anchor" href="#_2-p2pkh-pay-to-public-key-hash" aria-hidden="true">#</a> 2. P2PKH pay_to_public_key_hash</h2><p>pubkey script:</p><div class="language-"><pre><code> OP_DUP OP_HASH160 hash(pubkey) OP_EQUALVERIFY \n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>signature script:</p><div class="language-"><pre><code>[sig] &lt;pubkey&gt;\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="_3-p2sh-pay-to-script-hash"><a class="header-anchor" href="#_3-p2sh-pay-to-script-hash" aria-hidden="true">#</a> 3.P2SH pay_to_script_hash</h2><p>pubkey script:</p><div class="language-"><pre><code>OP_HASH160 hash(Redeem script) OP_EQUAL\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>signature script 此处和上面两个都不一样,解锁需要分成两部 第一步: 验证 redeem script hash 值是否正确,也就是将redeem script 作为数据放到栈上,然后执行 OP_HASH160,如果为真才会执行第二步,否则失败 第二步:执行redeem script, 将signature script+redeem script 一起执行,如果为真则成功,否则交易失败</p><h2 id="_4-p2wpkh-pay-to-witness-public-key-hash"><a class="header-anchor" href="#_4-p2wpkh-pay-to-witness-public-key-hash" aria-hidden="true">#</a> 4.P2WPKH pay_to_witness_public_key_hash</h2><p>pubkey script:</p><div class="language-"><pre><code>0 HASH160(public key)\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>解锁脚本 signature script(scriptSig): 空 还增加了一个 witness 字段,用于验证交易合法性 <code>witness: &lt;signature&gt;</code></p><p>如果按照前面的验证规则,所有的隔离见证交易都是合法的,所以这是一个软分叉.</p><h2 id="_5-p2wsh-pay-to-witness-script-hash"><a class="header-anchor" href="#_5-p2wsh-pay-to-witness-script-hash" aria-hidden="true">#</a> 5. P2WSH pay_to_witness_script_hash</h2><p>pubkey script:</p><div class="language-"><pre><code>0 SHA256(redeem script)\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>scriptSig: 空 <code>witness: &lt;signature&gt; &lt;redeem script&gt;</code></p><h2 id="矿工如何区分交易类型"><a class="header-anchor" href="#矿工如何区分交易类型" aria-hidden="true">#</a> 矿工如何区分交易类型?</h2><p>主要是根据 pubkey script 的模式进行匹配,不同的模式匹配不同的验证规则.尤其是隔离见证部分.</p><h2 id="scriptsig包含什么内容"><a class="header-anchor" href="#scriptsig包含什么内容" aria-hidden="true">#</a> scriptSig包含什么内容?</h2><p>没看源码,纯属个人猜想. 一个 tx 的结构如下:</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">type</span> MsgTx <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n\tVersion  <span class="token builtin">int32</span>\n\tTxIn     <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>TxIn\n\tTxOut    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>TxOut\n\tLockTime <span class="token builtin">uint32</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// TxIn defines a bitcoin transaction input.</span>\n<span class="token keyword">type</span> TxIn <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n\tPreviousOutPoint OutPoint\n\tSignatureScript  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>\n\tWitness          TxWitness\n\tSequence         <span class="token builtin">uint32</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// TxOut defines a bitcoin transaction output.</span>\n<span class="token keyword">type</span> TxOut <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n\tValue    <span class="token builtin">int64</span>\n\tPkScript <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>签名放在 TxIn 中,因此签名应该是对hash(Version,LockTime, current TxIn(exclude signature script),all TxOut)) 进行签名.</p><p>这样矿工可以验证交易,但是不能修改交易. 至于 TxID 为什么会变,是否因为 TxIn以及 TxOut 的顺序可以被矿工调整?</p>',30)];p.render=function(n,e,p,i,r,c){return s(),a("div",null,t)};export{e as __pageData,p as default};
