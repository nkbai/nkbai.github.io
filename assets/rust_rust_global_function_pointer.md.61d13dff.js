import{_ as n,c as s,o as a,a as p}from"./app.577f36ad.js";const m='{"title":"rust\u4E2D\u51FD\u6570\u6307\u9488\u4F5C\u4E3A\u5168\u5C40\u53D8\u91CF\u4F7F\u7528","description":"","frontmatter":{"title":"rust\u4E2D\u51FD\u6570\u6307\u9488\u4F5C\u4E3A\u5168\u5C40\u53D8\u91CF\u4F7F\u7528","date":"2022-08-01T05:29:51.000Z"},"headers":[{"level":2,"title":"1. \u58F0\u660E\u5168\u5C40\u53D8\u91CF","slug":"_1-\u58F0\u660E\u5168\u5C40\u53D8\u91CF"},{"level":2,"title":"2. \u521D\u59CB\u5316","slug":"_2-\u521D\u59CB\u5316"},{"level":2,"title":"3. \u4F7F\u7528","slug":"_3-\u4F7F\u7528"},{"level":2,"title":"4. \u5916\u90E8crate\u5982\u4F55\u4F7F\u7528","slug":"_4-\u5916\u90E8crate\u5982\u4F55\u4F7F\u7528"}],"relativePath":"rust/rust_global_function_pointer.md"}',t={},e=p(`<p>\u8FD9\u7BC7\u6587\u7AE0\u4E3B\u8981\u662F\u4ECB\u7ECD\u4E00\u4E2A\u5C0F\u6280\u5DE7,\u600E\u4E48\u5C06\u5168\u5C40\u53D8\u91CF\u5F53\u505A\u51FD\u6570\u6307\u9488\u6765\u4F7F\u7528. \u6CE8\u610F\u8FD9\u91CC\u4E0D\u53EF\u907F\u514D\u7684\u4F7F\u7528\u5230unsafe.</p><p>\u5148\u8BF4\u4E00\u4E0B,\u8981\u89E3\u51B3\u7684\u95EE\u9898,<a href="http://console.rs" target="_blank" rel="noopener noreferrer">console.rs</a> \u662F\u5728\u8FD9\u6837\u4E00\u4E2Acrate,\u8FD9\u4E2Acrate\u65E2\u8981\u5728\u5185\u6838\u4E2D\u4F7F\u7528,\u4E5F\u8981\u5728\u666E\u901A\u7528\u6237\u7A0B\u5E8F\u4E2D\u4F7F\u7528. \u4F46\u662F\u6211\u53C8\u60F3\u8981\u4E00\u4E2A\u6253\u5370\u65E5\u5FD7\u7684\u529F\u80FD,\u600E\u4E48\u505A\u5462?.</p><h2 id="_1-\u58F0\u660E\u5168\u5C40\u53D8\u91CF" tabindex="-1">1. \u58F0\u660E\u5168\u5C40\u53D8\u91CF <a class="header-anchor" href="#_1-\u58F0\u660E\u5168\u5C40\u53D8\u91CF" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">pub</span> <span class="token keyword">static</span> <span class="token keyword">mut</span> fn_console_putchar<span class="token punctuation">:</span><span class="token keyword">usize</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u5168\u5C40\u53D8\u91CF\uFF0C\u7528\u4E8E\u8BB0\u5F55\u63A7\u5236\u53F0\u7684\u5730\u5740</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="_2-\u521D\u59CB\u5316" tabindex="-1">2. \u521D\u59CB\u5316 <a class="header-anchor" href="#_2-\u521D\u59CB\u5316" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">set_console_putchar</span><span class="token punctuation">(</span>f<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        fn_console_putchar<span class="token operator">=</span>f <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_3-\u4F7F\u7528" tabindex="-1">3. \u4F7F\u7528 <a class="header-anchor" href="#_3-\u4F7F\u7528" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">console_putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">unsafe</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> fn_console_putchar<span class="token operator">==</span><span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;fn_console_putchar not set  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> p<span class="token operator">=</span> fn_console_putchar <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> f<span class="token punctuation">:</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token keyword">usize</span><span class="token punctuation">)</span><span class="token operator">=</span> <span class="token namespace">core<span class="token punctuation">::</span>mem<span class="token punctuation">::</span></span><span class="token function">transmute</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Write</span> <span class="token keyword">for</span> <span class="token class-name">Stdout</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">write_str</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">fmt<span class="token punctuation">::</span></span><span class="token class-name">Result</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">.</span><span class="token function">chars</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">console_putchar</span><span class="token punctuation">(</span>c <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">print</span><span class="token punctuation">(</span>args<span class="token punctuation">:</span> <span class="token namespace">fmt<span class="token punctuation">::</span></span><span class="token class-name">Arguments</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Stdout</span><span class="token punctuation">.</span><span class="token function">write_fmt</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="_4-\u5916\u90E8crate\u5982\u4F55\u4F7F\u7528" tabindex="-1">4. \u5916\u90E8crate\u5982\u4F55\u4F7F\u7528 <a class="header-anchor" href="#_4-\u5916\u90E8crate\u5982\u4F55\u4F7F\u7528" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">putchar</span><span class="token punctuation">(</span>c<span class="token punctuation">:</span><span class="token keyword">usize</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span>c <span class="token keyword">as</span> <span class="token keyword">u8</span> <span class="token keyword">as</span> <span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">set_console_putchar</span><span class="token punctuation">(</span>putchar <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">const</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u4F53\u73B0\u51FA\u4E86unsafe\u7684\u5F3A\u5927\u6027,\u4E5F\u4F53\u73B0\u51FA\u4E86rust\u4F5C\u4E3A\u7CFB\u7EDF\u8BED\u8A00,\u5E94\u4ED8\u5404\u79CD\u9700\u6C42\u7684\u80FD\u529B.</p>`,11),o=[e];function c(l,u,r,i,k,d){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{m as __pageData,f as default};
