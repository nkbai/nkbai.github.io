import{_ as s,c as a,o as n,N as l}from"./chunks/framework.3a9190c5.js";const b=JSON.parse('{"title":"在ubuntu 18.04上交叉编译rust 程序","description":"","frontmatter":{"title":"在ubuntu 18.04上交叉编译rust 程序","date":"2019-10-30T03:57:03.000Z","draft":false,"tags":["rust","arm"],"series":["rust"],"categories":["技术相关"]},"headers":[],"relativePath":"rust/交叉编译rust.md"}'),e={name:"rust/交叉编译rust.md"},p=l(`<h2 id="在ubuntu-18-04上交叉编译rust-程序" tabindex="-1">在ubuntu 18.04上交叉编译rust 程序 <a class="header-anchor" href="#在ubuntu-18-04上交叉编译rust-程序" aria-label="Permalink to &quot;在ubuntu 18.04上交叉编译rust 程序&quot;">​</a></h2><p>因项目需要,将rust的一个动态库编译到arm-linux上,用的交叉编译器是 arm-none-linux-gnueabi-gcc 这里主要是记录一下过程</p><h3 id="cargo的使用" tabindex="-1">cargo的使用 <a class="header-anchor" href="#cargo的使用" aria-label="Permalink to &quot;cargo的使用&quot;">​</a></h3><ol><li>~/.cargo/config 添加如下</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[target.armv7-unknown-linux-gnueabi]</span></span>
<span class="line"><span style="color:#A6ACCD;">linker = &quot;arm-none-linux-gnueabi-gcc&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>编译 cargo build --target=armv7-unknown-linux-gnueabi</li></ol><h3 id="编译openssl" tabindex="-1">编译openssl <a class="header-anchor" href="#编译openssl" aria-label="Permalink to &quot;编译openssl&quot;">​</a></h3><p>项目依赖openssl,需要交叉编译</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">wget</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://www.openssl.org/source/openssl-1.0.1t.tar.gz</span></span>
<span class="line"><span style="color:#FFCB6B;">tar</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xzf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">openssl-1.0.1t.tar.gz</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> MACHINE</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">armv7</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> ARCH</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">arm</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> CC</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">arm-linux-gnueabihf-gcc</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">openssl-1.0.1t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">.</span><span style="color:#FFCB6B;">/config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">shared</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> OPENSSL_LIB_DIR</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">~/openssl-1.0.1t/</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> OPENSSL_INCLUDE_DIR</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">~/openssl-1.0.1t/include</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--target=armv7-unknown-linux-gnueabi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--release</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>rust 的debug和release模式编译出来的差别巨大,一个debug版本的so文件由100M,release的则只有3M了.</p>`,10),o=[p];function r(t,c,i,u,C,y){return n(),a("div",null,o)}const D=s(e,[["render",r]]);export{b as __pageData,D as default};
