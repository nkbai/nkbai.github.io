import{_ as s,c as n,o as a,N as e}from"./chunks/framework.3a9190c5.js";const b=JSON.parse('{"title":"wire_common","description":"","frontmatter":{"title":"wire_common","date":"2018-11-12T11:07:31.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/btcd/wire_common.md"}'),l={name:"blockchain/btcd/wire_common.md"},p=e(`<h1 id="btcd-wire-common-go" tabindex="-1">btcd/wire/common.go <a class="header-anchor" href="#btcd-wire-common-go" aria-label="Permalink to &quot;btcd/wire/common.go&quot;">​</a></h1><h2 id="基于chan的buf管理" tabindex="-1">基于chan的buf管理 <a class="header-anchor" href="#基于chan的buf管理" aria-label="Permalink to &quot;基于chan的buf管理&quot;">​</a></h2><p>type binaryFreeList chan []byte //数字缓冲区 type scriptFreeList chan []byte //脚本缓冲区</p><p>这里的思路还是比较巧妙的,使用了chan的方式来管理[]byte,减少了不断的分配[]byte,同时使用chan来规避锁的问题. 我不知道go内部chan写入读出是否要用到锁,但是至少规避了List的管理.</p><p>Borrow 方法: 如果有可用的缓冲区则取走,否则分配 Return 方法:将用完的缓冲区通过chan放回去,为下次Borrow做准备.</p><p>这里面预设了最大的缓冲区大小,总的来说还是满巧妙的.</p><h2 id="varint编码" tabindex="-1">VarInt编码 <a class="header-anchor" href="#varint编码" aria-label="Permalink to &quot;VarInt编码&quot;">​</a></h2><p>0-0xfd 直接是0xfd, 0xfd-maxuint16 0xfd+ 两个字节的数值本身 maxuint16-maxuint32 0xfe+加四字节数值本身 maxuint32-maxuint64 0xff+8字节数值本身</p><p>实际上这类似于以太坊的RLP编码思路,</p><h2 id="varbytes-varstring编码方式" tabindex="-1">VarBytes,VarString编码方式 <a class="header-anchor" href="#varbytes-varstring编码方式" aria-label="Permalink to &quot;VarBytes,VarString编码方式&quot;">​</a></h2><p>VarInt编码的长度+数据本身</p><h2 id="比特币的消息通信" tabindex="-1">比特币的消息通信 <a class="header-anchor" href="#比特币的消息通信" aria-label="Permalink to &quot;比特币的消息通信&quot;">​</a></h2><h3 id="消息往来" tabindex="-1">消息往来 <a class="header-anchor" href="#消息往来" aria-label="Permalink to &quot;消息往来&quot;">​</a></h3><pre><code>    Peer A Sends                          Peer B Responds
----------------------------------------------------------------------------
getaddr message (MsgGetAddr)          addr message (MsgAddr)
getblocks message (MsgGetBlocks)      inv message (MsgInv)
inv message (MsgInv)                  getdata message (MsgGetData)
getdata message (MsgGetData)          block message (MsgBlock) -or-
                                      tx message (MsgTx) -or-
                                      notfound message (MsgNotFound)
getheaders message (MsgGetHeaders)    headers message (MsgHeaders)
ping message (MsgPing)                pong message (MsgHeaders)* -or-
                                      (none -- Ability to send message is enough)
</code></pre><h3 id="读取消息" tabindex="-1">读取消息 <a class="header-anchor" href="#读取消息" aria-label="Permalink to &quot;读取消息&quot;">​</a></h3><p>pver是消息版本信息,(BIP定义了很多版本),目前是FeeFilterVersion 70013 btcnet 有四种情况,分别如下</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// MainNet represents the main bitcoin network.</span></span>
<span class="line"><span style="color:#A6ACCD;">	MainNet BitcoinNet </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0xd9b4bef9</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// TestNet represents the regression test network.</span></span>
<span class="line"><span style="color:#A6ACCD;">	TestNet BitcoinNet </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0xdab5bffa</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// TestNet3 represents the test network (version 3).</span></span>
<span class="line"><span style="color:#A6ACCD;">	TestNet3 BitcoinNet </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x0709110b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// SimNet represents the simulation test network.</span></span>
<span class="line"><span style="color:#A6ACCD;">	SimNet BitcoinNet </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x12141c16</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-Go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Use the most recent protocol version supported by the package and the</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// main bitcoin network.</span></span>
<span class="line"><span style="color:#A6ACCD;">	pver </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ProtocolVersion</span></span>
<span class="line"><span style="color:#A6ACCD;">	btcnet </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MainNet</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Reads and validates the next bitcoin message from conn using the</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// protocol version pver and the bitcoin network btcnet.  The returns</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// are a wire.Message, a []byte which contains the unmarshalled</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// raw payload, and a possible error.</span></span>
<span class="line"><span style="color:#A6ACCD;">	msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> rawPayload</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> wire</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ReadMessage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pver</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> btcnet</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// Log and handle the error</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="发送消息" tabindex="-1">发送消息 <a class="header-anchor" href="#发送消息" aria-label="Permalink to &quot;发送消息&quot;">​</a></h3><div class="language-Go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Use the most recent protocol version supported by the package and the</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// main bitcoin network.</span></span>
<span class="line"><span style="color:#A6ACCD;">	pver </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ProtocolVersion</span></span>
<span class="line"><span style="color:#A6ACCD;">	btcnet </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MainNet</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Create a new getaddr bitcoin message.</span></span>
<span class="line"><span style="color:#A6ACCD;">	msg </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> wire</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewMsgGetAddr</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Writes a bitcoin message msg to conn using the protocol version</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// pver, and the bitcoin network btcnet.  The return is a possible</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// error.</span></span>
<span class="line"><span style="color:#A6ACCD;">	err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> wire</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteMessage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pver</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> btcnet</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// Log and handle the error</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="消息类型验证" tabindex="-1">消息类型验证 <a class="header-anchor" href="#消息类型验证" aria-label="Permalink to &quot;消息类型验证&quot;">​</a></h3><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Assumes msg is already a valid concrete message such as one created</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// via NewMsgVersion or read via ReadMessage.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#A6ACCD;"> msg </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">.(</span><span style="color:#A6ACCD;">type</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgVersion</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// The message is a pointer to a MsgVersion struct.</span></span>
<span class="line"><span style="color:#A6ACCD;">		fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Protocol version: %v</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ProtocolVersion</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgBlock</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// The message is a pointer to a MsgBlock struct.</span></span>
<span class="line"><span style="color:#A6ACCD;">		fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Number of tx in block: %v</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TxnCount</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,22),o=[p];function t(r,c,i,y,D,C){return a(),n("div",null,o)}const F=s(l,[["render",t]]);export{b as __pageData,F as default};
