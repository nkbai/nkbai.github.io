import{_ as n,c as s,o as a,a as p}from"./app.1b76eb5d.js";const d='{"title":"959. \u7531\u659C\u6760\u5212\u5206\u533A\u57DF","description":"","frontmatter":{"title":"959. \u7531\u659C\u6760\u5212\u5206\u533A\u57DF","date":"2020-03-18T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-19)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-19"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2020-03-19.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-19" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-19) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-19" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u5728\u7531 1 x 1 \u65B9\u683C\u7EC4\u6210\u7684 N x N \u7F51\u683C\xA0grid \u4E2D\uFF0C\u6BCF\u4E2A 1 x 1\xA0\u65B9\u5757\u7531 /\u3001\\ \u6216\u7A7A\u683C\u6784\u6210\u3002\u8FD9\u4E9B\u5B57\u7B26\u4F1A\u5C06\u65B9\u5757\u5212\u5206\u4E3A\u4E00\u4E9B\u5171\u8FB9\u7684\u533A\u57DF\u3002</p><p>\uFF08\u8BF7\u6CE8\u610F\uFF0C\u53CD\u659C\u6760\u5B57\u7B26\u662F\u8F6C\u4E49\u7684\uFF0C\u56E0\u6B64 \\ \u7528 &quot;\\&quot;\xA0\u8868\u793A\u3002\uFF09\u3002</p><p>\u8FD4\u56DE\u533A\u57DF\u7684\u6570\u76EE\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1A [ &quot; /&quot;, &quot;/ &quot; ] \u8F93\u51FA\uFF1A2 \u89E3\u91CA\uFF1A2x2 \u7F51\u683C\u5982\u4E0B\uFF1A</p><p>\u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1A [ &quot; /&quot;, &quot; &quot; ] \u8F93\u51FA\uFF1A1 \u89E3\u91CA\uFF1A2x2 \u7F51\u683C\u5982\u4E0B\uFF1A</p><p>\u793A\u4F8B 3\uFF1A</p><p>\u8F93\u5165\uFF1A [ &quot;\\/&quot;, &quot;/\\&quot; ] \u8F93\u51FA\uFF1A4 \u89E3\u91CA\uFF1A\uFF08\u56DE\u60F3\u4E00\u4E0B\uFF0C\u56E0\u4E3A \\ \u5B57\u7B26\u662F\u8F6C\u4E49\u7684\uFF0C\u6240\u4EE5 &quot;\\/&quot; \u8868\u793A /\uFF0C\u800C &quot;/\\&quot; \u8868\u793A /\\\u3002\uFF09 2x2 \u7F51\u683C\u5982\u4E0B\uFF1A</p><p>\u793A\u4F8B 4\uFF1A</p><p>\u8F93\u5165\uFF1A [ &quot;/\\&quot;, &quot;\\/&quot; ] \u8F93\u51FA\uFF1A5 \u89E3\u91CA\uFF1A\uFF08\u56DE\u60F3\u4E00\u4E0B\uFF0C\u56E0\u4E3A \\ \u5B57\u7B26\u662F\u8F6C\u4E49\u7684\uFF0C\u6240\u4EE5 &quot;/\\&quot; \u8868\u793A /\\\uFF0C\u800C &quot;\\/&quot; \u8868\u793A /\u3002\uFF09 2x2 \u7F51\u683C\u5982\u4E0B\uFF1A</p><p>\u793A\u4F8B 5\uFF1A</p><p>\u8F93\u5165\uFF1A [ &quot;//&quot;, &quot;/ &quot; ] \u8F93\u51FA\uFF1A3 \u89E3\u91CA\uFF1A2x2 \u7F51\u683C\u5982\u4E0B\uFF1A</p><p>\u63D0\u793A\uFF1A</p><p>1 &lt;= grid.length == grid[0].length &lt;= 30 grid[i][j] \u662F\xA0&#39;/&#39;\u3001&#39;&#39;\u3001\u6216\xA0&#39; &#39;\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/regions-cut-by-slashes" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/regions-cut-by-slashes</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u6BCF\u4E2A\u683C\u5B50\u6700\u591A\u5206\u6210\u4E24\u4EFD,\u8981\u4E48\u5DE6\u4E0A,\u53F3\u4E0B,\u8981\u4E48\u5DE6\u4E0B,\u53F3\u4E0A \u5BF9\u4EFB\u610F\u4E00\u4E2A\u683C\u5B50\u90FD\u8FDB\u884C\u7F16\u7801\u7ED9\u4E24\u4E2A\u7F16\u53F7, \u8FD9\u6837\u4E00\u4E2Anxn\u7684\u683C\u5B50\u5C31\u6709nxnx2\u4E2A\u7F16\u53F7, \u7136\u540E\u6765\u770B\u770B\u5982\u4F55\u5904\u7406:</p><ol><li><p>\u5982\u679C\u4E00\u4E2A\u683C\u5B50\u6CA1\u6709\u659C\u6760,\u90A3\u4E48\u4ED6\u76840,1\u4E24\u4E2A\u7F16\u53F7\u5C31\u53EF\u4EE5merge \u5982\u679C\u53F3\u4FA7\u662F\u7A7A\u683C,\u5219\u81EA\u5DF1\u76841\u53F7\u548C\u53F3\u4FA7\u76840\u53F7merge \u5982\u679C\u53F3\u4FA7\u662F/,\u5219\u81EA\u5DF1\u76841\u53F7\u548C\u53F3\u4FA7\u76840\u53F7merge \u5982\u679C\u53F3\u4FA7\u662F,\u5219\u81EA\u5DF1\u76841\u53F7\u548C\u53F3\u4FA7\u76840\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F\u7A7A\u683C,\u5219\u81EA\u5DF1\u76840\u53F7\u548C\u4E0B\u8FB9\u76841\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F,\u5728\u81EA\u5DF1\u76840\u53F7\u548C\u4E0B\u8FB9\u76841\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F/,\u5219\u81EA\u5DF1\u76840\u53F7\u548C\u4E0B\u8FB9\u76840\u53F7merge</p></li><li><p>\u5982\u679C\u4E00\u4E2A\u683C\u5B50\u662F/, \u90A3\u4E48\u4ED6\u76841\u53F7\u53EF\u4EE5\u548C\u53F3\u4FA7\u7684\u683C\u5B50\u76840\u53F7merge \u5982\u679C\u4E0B\u4FA7\u662F\u7A7A\u683C,\u5219\u4ED6\u81EA\u5DF1\u76841\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76841\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F,\u5219\u4ED6\u81EA\u5DF1\u76841\u53F7\u53EF\u4EE5\u548C\u4E0B\u9762\u76841\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F/,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u9762\u76840\u53F7merge</p></li><li><p>\u5982\u679C\u4E00\u4E2A\u683C\u5B50\u662F<br> \u90A3\u4E48\u4ED6\u81EA\u5DF1\u76841\u53F7\u53EF\u4EE5\u548C\u53F3\u4FA7\u7684\u683C\u5B50\u76840\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F\u7A7A\u683C,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76840\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76841\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F/,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76840\u53F7merge</p></li></ol><p><strong>\u603B\u7ED3\u5982\u4E0B:</strong> \u4E00\u4E2A\u683C\u5B50\u662F\u7A7A\u683C,\u5219\u4ED6\u81EA\u5DF1\u76840,1\u53EF\u4EE5merge \u7136\u540E\u4E00\u4E2A\u683C\u5B50\u76841\u53F7\u603B\u662F\u53EF\u4EE5\u548C\u53F3\u4FA7\u683C\u5B50\u76840\u53F7merge \u9EBB\u70E6\u7684\u662F\u548C\u4E0B\u8FB9\u683C\u5B50\u7684\u5408\u5E76: \u7B80\u5316\u5904\u7406\u4E00\u4E0B,\u5C06\u81EA\u5DF1\u662F\u7A7A\u683C\u8BA4\u5B9A\u4E3A\u548C/\u4E00\u6837,\u90A3\u4E48\u53EF\u4EE5\u7B80\u5316\u5982\u4E0B: \u5982\u679C\u4E00\u4E2A\u683C\u5B50\u662F/: \u5982\u679C\u4E0B\u4FA7\u662F\u7A7A\u683C,\u5219\u4ED6\u81EA\u5DF1\u76841\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76841\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F,\u5219\u4ED6\u81EA\u5DF1\u76841\u53F7\u53EF\u4EE5\u548C\u4E0B\u9762\u76841\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F/,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u9762\u76840\u53F7merge \u5982\u679C\u4E00\u4E2A\u683C\u5B50\u662F: \u5982\u679C\u4E0B\u8FB9\u662F\u7A7A\u683C,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76840\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76841\u53F7merge \u5982\u679C\u4E0B\u8FB9\u662F/,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76840\u53F7merge</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">DSU</span> <span class="token punctuation">{</span>
    pre<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token constant">DSU</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">new</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token constant">DSU</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> v <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">with_capacity</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>n <span class="token punctuation">{</span>
            v<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token constant">DSU</span> <span class="token punctuation">{</span> pre<span class="token punctuation">:</span> v <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span>pre<span class="token punctuation">[</span>x <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span> <span class="token operator">==</span> x <span class="token punctuation">{</span>
            <span class="token keyword">return</span> x<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// let prex = self.pre[x];</span>
        <span class="token keyword">let</span> prex <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>pre<span class="token punctuation">[</span>x <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u56E0\u4E3A\u9012\u5F52,\u8FD9\u91CC\u4F1A\u628A\u4E00\u4E32\u4E0A\u9762\u7684\u6240\u6709\u8DEF\u5F84\u90FD\u538B\u7F29\u4E86,</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>pre<span class="token punctuation">[</span>x <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span> <span class="token operator">=</span> prex<span class="token punctuation">;</span>
        <span class="token keyword">return</span> prex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u8FD4\u56DEfalse,\u8BF4\u660Ex,y\u5728\u540C\u4E00\u4E2A\u96C6\u5408\u91CC</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">merge</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> prex <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> prey <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> prex <span class="token operator">==</span> prey <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u6CE8\u610F\u8FD9\u91CC\u662F\u8BBE\u7F6E\u7684\u662Fprex\u7684parent,\u800C\u4E0D\u662Fx\u7684parent</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>pre<span class="token punctuation">[</span>prey <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span> <span class="token operator">=</span> prex<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">regions_by_slashes</span><span class="token punctuation">(</span>grid<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token constant">SPC</span><span class="token punctuation">:</span> <span class="token keyword">u8</span> <span class="token operator">=</span> <span class="token char">&#39; &#39;</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token constant">SLASH</span><span class="token punctuation">:</span> <span class="token keyword">u8</span> <span class="token operator">=</span> <span class="token char">&#39;/&#39;</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token constant">BACK_SLASH</span><span class="token punctuation">:</span> <span class="token keyword">u8</span> <span class="token operator">=</span> <span class="token char">&#39;\\\\&#39;</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> <span class="token keyword">mut</span> g <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> s <span class="token keyword">in</span> grid <span class="token punctuation">{</span>
            <span class="token keyword">let</span> s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> <span class="token keyword">mut</span> v <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> c <span class="token keyword">in</span> s <span class="token punctuation">{</span>
                v<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">*</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            g<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> row <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> col <span class="token operator">=</span> g<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> dsu <span class="token operator">=</span> <span class="token constant">DSU</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>row <span class="token operator">*</span> col <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>row <span class="token punctuation">{</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>col <span class="token punctuation">{</span>
                <span class="token comment">/*
                 \u4E00\u4E2A\u683C\u5B50\u662F\u7A7A\u683C,\u5219\u4ED6\u81EA\u5DF1\u76840,1\u53EF\u4EE5merge
                 \u7136\u540E\u4E00\u4E2A\u683C\u5B50\u76841\u53F7\u603B\u662F\u53EF\u4EE5\u548C\u53F3\u4FA7\u683C\u5B50\u76840\u53F7merge
                 \u9EBB\u70E6\u7684\u662F\u548C\u4E0B\u8FB9\u683C\u5B50\u7684\u5408\u5E76:
                 \u7B80\u5316\u5904\u7406\u4E00\u4E0B,\u5C06\u81EA\u5DF1\u662F\u7A7A\u683C\u8BA4\u5B9A\u4E3A\u548C/\u4E00\u6837,\u90A3\u4E48\u53EF\u4EE5\u7B80\u5316\u5982\u4E0B:
                 \u5982\u679C\u4E00\u4E2A\u683C\u5B50\u662F/:
                    \u5982\u679C\u4E0B\u4FA7\u662F\u7A7A\u683C,\u5219\u4ED6\u81EA\u5DF1\u76841\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76841\u53F7merge
                    \u5982\u679C\u4E0B\u8FB9\u662F\\,\u5219\u4ED6\u81EA\u5DF1\u76841\u53F7\u53EF\u4EE5\u548C\u4E0B\u9762\u76841\u53F7merge
                    \u5982\u679C\u4E0B\u8FB9\u662F/,\u5219\u4ED6\u81EA\u5DF1\u76841\u53F7\u53EF\u4EE5\u548C\u4E0B\u9762\u76840\u53F7merge
                 \u5982\u679C\u4E00\u4E2A\u683C\u5B50\u662F\\:
                     \u5982\u679C\u4E0B\u8FB9\u662F\u7A7A\u683C,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76840\u53F7merge
                    \u5982\u679C\u4E0B\u8FB9\u662F\\,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76841\u53F7merge
                    \u5982\u679C\u4E0B\u8FB9\u662F/,\u5219\u4ED6\u81EA\u5DF1\u76840\u53F7\u53EF\u4EE5\u548C\u4E0B\u8FB9\u76840\u53F7merge
                */</span>
                <span class="token keyword">let</span> c <span class="token operator">=</span> g<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> i0 <span class="token operator">=</span> i <span class="token operator">*</span> col <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> j <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> i1 <span class="token operator">=</span> i0 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> c <span class="token operator">==</span> <span class="token constant">SPC</span> <span class="token punctuation">{</span>
                    dsu<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>i0 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> i1 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> j <span class="token operator">&lt;</span> col <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> r0 <span class="token operator">=</span> i <span class="token operator">*</span> col <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> j <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
                    dsu<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>i1 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> r0 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> i <span class="token operator">&lt;</span> row <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> d0 <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> col <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> j <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
                    <span class="token keyword">let</span> d1 <span class="token operator">=</span> d0 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token keyword">let</span> d <span class="token operator">=</span> g<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> c <span class="token operator">==</span> <span class="token constant">SLASH</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> d <span class="token operator">==</span> <span class="token constant">SLASH</span> <span class="token punctuation">{</span>
                            dsu<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>i1 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> d0 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            dsu<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>i1 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> d1 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> d <span class="token operator">==</span> <span class="token constant">BACK_SLASH</span> <span class="token punctuation">{</span>
                            dsu<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>i0 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> d1 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            dsu<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>i0 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> d0 <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> map<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span> dsu<span class="token punctuation">.</span>pre<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>dsu<span class="token punctuation">.</span>pre<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> x <span class="token operator">=</span> dsu<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>i <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// println!(&quot;{}-&gt;{}&quot;, i, x);</span>
            <span class="token keyword">if</span> map<span class="token punctuation">[</span>x <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            map<span class="token punctuation">[</span>x <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        count
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">regions_by_slashes</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token string">&quot; /&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/ &quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">regions_by_slashes</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token string">&quot; /&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;  &quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">regions_by_slashes</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token string">&quot;\\\\/&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/\\\\&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">regions_by_slashes</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token string">&quot;/\\\\&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;\\\\/&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">regions_by_slashes</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token string">&quot;//&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/ &quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">regions_by_slashes</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token string">&quot;  /&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/ /&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;\\\\/ &quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u6B64\u9898\u76EE\u9EBB\u70E6\u7684\u662F\u8981\u5BF9\u5404\u79CD\u7EC4\u5408\u8FDB\u884C\u7A77\u4E3E,\u7136\u540E\u518D\u7B80\u5316,\u5426\u5219\u5F88\u5BB9\u6613\u51FA\u9519.</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,29),o=[e];function c(l,u,r,k,i,b){return a(),s("div",null,o)}var y=n(t,[["render",c]]);export{d as __pageData,y as default};
