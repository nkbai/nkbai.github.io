import{_ as e,c as t,o as a,N as r}from"./chunks/framework.3a9190c5.js";const v=JSON.parse('{"title":"异常退出各种情况","description":"","frontmatter":{"title":"异常退出各种情况","date":"2018-08-27T02:48:47.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/ethereum/异常退出各种情况.md"}'),n={name:"blockchain/ethereum/异常退出各种情况.md"},c=r('<h1 id="发送消息崩溃" tabindex="-1">发送消息崩溃 <a class="header-anchor" href="#发送消息崩溃" aria-label="Permalink to &quot;发送消息崩溃&quot;">​</a></h1><p>收到消息处理完毕,消息可能发送也可能没法送出去，不建议使用。 EventSendMediatedTransferAfter 作为中间节点,只处理了这一种情况. EventSendRevealSecretAfter EventSendBalanceProofAfter EventSendSecretRequestAfter EventSendRefundTransferAfter EventSendRemoveExpiredHashlockTransferAfter 当移除超时 lock 时发送此消息</p><h1 id="收到消息崩溃" tabindex="-1">收到消息崩溃 <a class="header-anchor" href="#收到消息崩溃" aria-label="Permalink to &quot;收到消息崩溃&quot;">​</a></h1><p>ActionInitTargetStateChange 收到mtr,它是接收方 ReceiveSecretRequestStateChange ReceiveTransferRefundStateChange ReceiveBalanceProofStateChange ActionInitMediatorStateChange 收到mtr,它是中间节点 //ActionInitInitiatorStateChange 收到用户发起的交易请求崩溃,没成功 它是发起方 //ReceiveSecretRevealStateChange 收到 secret披露后崩溃 BeforeSendRevealSecret 发送secret之前</p><h1 id="收到-ack-崩溃" tabindex="-1">收到 ack 崩溃 <a class="header-anchor" href="#收到-ack-崩溃" aria-label="Permalink to &quot;收到 ack 崩溃&quot;">​</a></h1><p>SecretRequestRecevieAck SecretRecevieAck #balanceproof MediatedTransferRecevieAck RefundTransferRecevieAck RevealSecretRecevieAck</p>',6),o=[c];function i(s,d,_,l,h,f){return a(),t("div",null,o)}const R=e(n,[["render",i]]);export{v as __pageData,R as default};
