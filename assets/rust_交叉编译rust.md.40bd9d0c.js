import{o as s,c as a,e as n}from"./app.f9082c82.js";const e='{"title":"在ubuntu 18.04上交叉编译rust 程序","description":"","frontmatter":{"title":"在ubuntu 18.04上交叉编译rust 程序","date":"2019-10-30T03:57:03.000Z","draft":false,"tags":["rust","arm"],"series":["rust"],"categories":["技术相关"]},"headers":[{"level":2,"title":"在ubuntu 18.04上交叉编译rust 程序","slug":"在ubuntu-18-04上交叉编译rust-程序"},{"level":3,"title":"cargo的使用","slug":"cargo的使用"},{"level":3,"title":"编译openssl","slug":"编译openssl"}],"relativePath":"rust/交叉编译rust.md","lastUpdated":1641604782429}',l={},r=[n('<h2 id="在ubuntu-18-04上交叉编译rust-程序"><a class="header-anchor" href="#在ubuntu-18-04上交叉编译rust-程序" aria-hidden="true">#</a> 在ubuntu 18.04上交叉编译rust 程序</h2><p>因项目需要,将rust的一个动态库编译到arm-linux上,用的交叉编译器是 arm-none-linux-gnueabi-gcc 这里主要是记录一下过程</p><h3 id="cargo的使用"><a class="header-anchor" href="#cargo的使用" aria-hidden="true">#</a> cargo的使用</h3><ol><li>~/.cargo/config 添加如下</li></ol><div class="language-"><pre><code>[target.armv7-unknown-linux-gnueabi]\nlinker = &quot;arm-none-linux-gnueabi-gcc&quot;\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li>编译 cargo build --target=armv7-unknown-linux-gnueabi</li></ol><h3 id="编译openssl"><a class="header-anchor" href="#编译openssl" aria-hidden="true">#</a> 编译openssl</h3><p>项目依赖openssl,需要交叉编译</p><div class="language-bash line-numbers-mode"><pre><code><span class="token function">wget</span> https://www.openssl.org/source/openssl-1.0.1t.tar.gz\n<span class="token function">tar</span> xzf openssl-1.0.1t.tar.gz\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">MACHINE</span><span class="token operator">=</span>armv7\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">CC</span><span class="token operator">=</span>arm-linux-gnueabihf-gcc\n<span class="token builtin class-name">cd</span> openssl-1.0.1t <span class="token operator">&amp;&amp;</span> ./config shared <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> -\n\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">OPENSSL_LIB_DIR</span><span class="token operator">=~</span>/openssl-1.0.1t/\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">OPENSSL_INCLUDE_DIR</span><span class="token operator">=~</span>/openssl-1.0.1t/include\ncargo build --target<span class="token operator">=</span>armv7-unknown-linux-gnueabi --release\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>rust 的debug和release模式编译出来的差别巨大,一个debug版本的so文件由100M,release的则只有3M了.</p>',10)];l.render=function(n,e,l,p,t,o){return s(),a("div",null,r)};export{e as __pageData,l as default};
