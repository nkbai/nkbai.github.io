import{_ as n,c as s,o as a,a as p}from"./app.4bbc222c.js";const d='{"title":"146. LRU\u7F13\u5B58\u673A\u5236-O(1)","description":"","frontmatter":{"title":"146. LRU\u7F13\u5B58\u673A\u5236-O(1)","date":"2019-08-19T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-08-20)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-08-20"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2019-08-20.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-08-20" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-08-20) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-08-20" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u8FD0\u7528\u4F60\u6240\u638C\u63E1\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u8BBE\u8BA1\u548C\u5B9E\u73B0\u4E00\u4E2A\xA0 LRU (\u6700\u8FD1\u6700\u5C11\u4F7F\u7528) \u7F13\u5B58\u673A\u5236\u3002\u5B83\u5E94\u8BE5\u652F\u6301\u4EE5\u4E0B\u64CD\u4F5C\uFF1A \u83B7\u53D6\u6570\u636E get \u548C \u5199\u5165\u6570\u636E put \u3002</p><p>\u83B7\u53D6\u6570\u636E get(key) - \u5982\u679C\u5BC6\u94A5 (key) \u5B58\u5728\u4E8E\u7F13\u5B58\u4E2D\uFF0C\u5219\u83B7\u53D6\u5BC6\u94A5\u7684\u503C\uFF08\u603B\u662F\u6B63\u6570\uFF09\uFF0C\u5426\u5219\u8FD4\u56DE -1\u3002 \u5199\u5165\u6570\u636E put(key, value) - \u5982\u679C\u5BC6\u94A5\u4E0D\u5B58\u5728\uFF0C\u5219\u5199\u5165\u5176\u6570\u636E\u503C\u3002\u5F53\u7F13\u5B58\u5BB9\u91CF\u8FBE\u5230\u4E0A\u9650\u65F6\uFF0C\u5B83\u5E94\u8BE5\u5728\u5199\u5165\u65B0\u6570\u636E\u4E4B\u524D\u5220\u9664\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u6570\u636E\u503C\uFF0C\u4ECE\u800C\u4E3A\u65B0\u7684\u6570\u636E\u503C\u7559\u51FA\u7A7A\u95F4\u3002</p><p>\u8FDB\u9636:</p><p>\u4F60\u662F\u5426\u53EF\u4EE5\u5728\xA0O(1) \u65F6\u95F4\u590D\u6742\u5EA6\u5185\u5B8C\u6210\u8FD9\u4E24\u79CD\u64CD\u4F5C\uFF1F</p><p>\u793A\u4F8B:</p><div class="language-"><pre><code>LRUCache cache = new LRUCache( 2 /* \u7F13\u5B58\u5BB9\u91CF */ );

cache.put(1, 1);
cache.put(2, 2);
cache.get(1);       // \u8FD4\u56DE  1
cache.put(3, 3);    // \u8BE5\u64CD\u4F5C\u4F1A\u4F7F\u5F97\u5BC6\u94A5 2 \u4F5C\u5E9F
cache.get(2);       // \u8FD4\u56DE -1 (\u672A\u627E\u5230)
cache.put(4, 4);    // \u8BE5\u64CD\u4F5C\u4F1A\u4F7F\u5F97\u5BC6\u94A5 1 \u4F5C\u5E9F
cache.get(1);       // \u8FD4\u56DE -1 (\u672A\u627E\u5230)
cache.get(3);       // \u8FD4\u56DE  3
cache.get(4);       // \u8FD4\u56DE  4
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/lru-cache" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/lru-cache</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u601D\u8DEF: O(1)\u590D\u6742\u5EA6\u7684\u601D\u8DEF:</p><ol><li>\u4F7F\u7528map\u6765\u4FDD\u5B58\u6570\u636E key\u5230\u6620\u5C04value\u4EE5\u53CA\u53CC\u5411\u94FE\u8868\u4E2D\u7684\u5143\u7D20</li><li>get \u67E5\u8BE2,\u5982\u679C\u67E5\u8BE2\u5F97\u5230,\u4ECE\u53CC\u5411\u94FE\u8868\u4E2D\u79FB\u9664\u5E76\u6DFB\u52A0\u5230\u5C3E\u90E8</li><li>put \u5982\u679C\u6EE1\u4E86,\u5219\u79FB\u9664\u53CC\u5411\u94FE\u8868\u9996\u90E8\u5143\u7D20,\u540C\u65F6\u63D2\u5165map,\u6DFB\u52A0\u5230\u5C3E\u90E8 \u624B\u5DE5\u6A21\u62DF\u53CC\u5411\u94FE\u8868. \u53CC\u5411\u94FE\u8868\u64CD\u4F5C\u76F4\u63A5\u501F\u9274\u81EA\u6807\u51C6\u5E93</li></ol><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>collections<span class="token punctuation">::</span>hash_map<span class="token punctuation">::</span></span><span class="token class-name">Entry</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>collections<span class="token punctuation">::</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span>
<span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">LRUCache</span> <span class="token punctuation">{</span>
    capacity<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span>
    head<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    tail<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    caches<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token punctuation">,</span> <span class="token class-name">Cache</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Clone, Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Cache</span> <span class="token punctuation">{</span>
    value<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    next<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    prev<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \`&amp;self\` means the method takes an immutable reference.
 * If you need a mutable reference, change it to \`&amp;mut self\` instead.
 */</span>
<span class="token keyword">impl</span> <span class="token class-name">LRUCache</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">new</span><span class="token punctuation">(</span>capacity<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token class-name">LRUCache</span> <span class="token punctuation">{</span>
            capacity<span class="token punctuation">:</span> capacity <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">,</span>
            head<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            tail<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            caches<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    push_back_node,pop_front_node,unlink_node \u76F4\u63A5\u501F\u9274\u81EA\u6807\u51C6\u5E93\u4E2D\u7684LinkedList

    */</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">push_back_node</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> node <span class="token operator">=</span> <span class="token class-name">Cache</span> <span class="token punctuation">{</span>
            next<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            prev<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span>tail<span class="token punctuation">,</span>
            value<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">match</span> <span class="token keyword">self</span><span class="token punctuation">.</span>tail <span class="token punctuation">{</span>
            <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token keyword">self</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Some</span><span class="token punctuation">(</span>tail<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tail<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">pop_front_node</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>key<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span>head <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">match</span> <span class="token keyword">self</span><span class="token punctuation">.</span>head <span class="token punctuation">{</span>
                <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">self</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token class-name">None</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">Some</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>head<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            key
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">unlink_node</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> c<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Cache</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">match</span> c<span class="token punctuation">.</span>prev <span class="token punctuation">{</span>
            <span class="token class-name">Some</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> prev_cache <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>prev<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                prev_cache<span class="token punctuation">.</span>next <span class="token operator">=</span> c<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token keyword">self</span><span class="token punctuation">.</span>head <span class="token operator">=</span> c<span class="token punctuation">.</span>next<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">match</span> c<span class="token punctuation">.</span>next <span class="token punctuation">{</span>
            <span class="token class-name">Some</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> next_cache <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>next<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                next_cache<span class="token punctuation">.</span>prev <span class="token operator">=</span> c<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token keyword">self</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> c<span class="token punctuation">.</span>prev<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">match</span> <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">entry</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Entry</span><span class="token punctuation">::</span><span class="token class-name">Occupied</span><span class="token punctuation">(</span><span class="token keyword">mut</span> x<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">/*
                \u5DF2\u7ECF\u5B58\u5728\u7684\u60C5\u51B5\u4E0B,\u5148\u79FB\u9664\u65E7\u7684,\u7136\u540E\u6DFB\u52A0\u65B0\u7684\u5230\u5C3E\u90E8
                */</span>
                <span class="token comment">//\u79FB\u9664\u65E7\u7684</span>
                <span class="token keyword">let</span> c <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5426\u5219\u4F1A\u51FA\u73B0\u8FDE\u7EED\u4E24\u6B21mut\u501F\u7528\u7684\u60C5\u51B5,\u7B2C\u4E00\u6B21\u53D1\u751F\u5728Occupied,\u7B2C\u4E8C\u6B21\u53D1\u751F\u5728unlink_node</span>
                <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">unlink_node</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">push_back_node</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> c<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                c<span class="token punctuation">.</span>value
            <span class="token punctuation">}</span>
            <span class="token class-name">Entry</span><span class="token punctuation">::</span><span class="token class-name">Vacant</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">put</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5B58\u5728\u7684\u60C5\u5F62</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span>caches<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>capacity <span class="token keyword">as</span> <span class="token keyword">usize</span> <span class="token punctuation">{</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">pop_front_node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">push_back_node</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">tests</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test_lru</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> cache <span class="token operator">=</span> <span class="token class-name">LRUCache</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE  1</span>
        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BE5\u64CD\u4F5C\u4F1A\u4F7F\u5F97\u5BC6\u94A5 2 \u4F5C\u5E9F</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE -1 (\u672A\u627E\u5230)</span>
        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BE5\u64CD\u4F5C\u4F1A\u4F7F\u5F97\u5BC6\u94A5 1 \u4F5C\u5E9F</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE -1 (\u672A\u627E\u5230)</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE  3</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE  4</span>
    <span class="token punctuation">}</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test_lru2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> cache <span class="token operator">=</span> <span class="token class-name">LRUCache</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;cache={:?}&quot;</span><span class="token punctuation">,</span> cache<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BE5\u64CD\u4F5C\u4F1A\u4F7F\u5F97\u5BC6\u94A5 1 \u4F5C\u5E9F</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u56E0\u4E3A\u751F\u547D\u5468\u671F\u7BA1\u7406\u95EE\u9898,\u5BFC\u81F4rust\u5B9E\u73B0\u94FE\u8868\u6BD4\u8F83\u9EBB\u70E6,\u5185\u7F6E\u7684\u53CC\u5411\u94FE\u8868\u4E5F\u4E0D\u50CFgolang\u4E00\u6837,\u53EF\u4EE5\u5F15\u7528\u5185\u90E8\u7684node.</p><p><strong>\u6807\u51C6\u5E93\u91CC\u6709\u5F88\u591A\u53EF\u4EE5\u53C2\u8003\u7684\u4E1C\u897F,\u5E94\u8BE5\u591A\u8BFB\u6807\u51C6\u5E93</strong></p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,20),c=[e];function o(l,u,k,i,r,b){return a(),s("div",null,c)}var f=n(t,[["render",o]]);export{d as __pageData,f as default};
