import{_ as n,c as s,o as a,a as p}from"./app.634a8744.js";const m='{"title":"205. \u540C\u6784\u5B57\u7B26\u4E32","description":"","frontmatter":{"title":"205. \u540C\u6784\u5B57\u7B26\u4E32","date":"2020-03-26T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-27)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-27"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2020-03-27.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-27" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-27) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-27" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u7ED9\u5B9A\u4E24\u4E2A\u5B57\u7B26\u4E32\xA0s\xA0\u548C\xA0t\uFF0C\u5224\u65AD\u5B83\u4EEC\u662F\u5426\u662F\u540C\u6784\u7684\u3002</p><p>\u5982\u679C\xA0s\xA0\u4E2D\u7684\u5B57\u7B26\u53EF\u4EE5\u88AB\u66FF\u6362\u5F97\u5230\xA0t\xA0\uFF0C\u90A3\u4E48\u8FD9\u4E24\u4E2A\u5B57\u7B26\u4E32\u662F\u540C\u6784\u7684\u3002</p><p>\u6240\u6709\u51FA\u73B0\u7684\u5B57\u7B26\u90FD\u5FC5\u987B\u7528\u53E6\u4E00\u4E2A\u5B57\u7B26\u66FF\u6362\uFF0C\u540C\u65F6\u4FDD\u7559\u5B57\u7B26\u7684\u987A\u5E8F\u3002\u4E24\u4E2A\u5B57\u7B26\u4E0D\u80FD\u6620\u5C04\u5230\u540C\u4E00\u4E2A\u5B57\u7B26\u4E0A\uFF0C\u4F46\u5B57\u7B26\u53EF\u4EE5\u6620\u5C04\u81EA\u5DF1\u672C\u8EAB\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: s = &quot;egg&quot;, t = &quot;add&quot; \u8F93\u51FA: true \u793A\u4F8B 2:</p><p>\u8F93\u5165: s = &quot;foo&quot;, t = &quot;bar&quot; \u8F93\u51FA: false \u793A\u4F8B 3:</p><p>\u8F93\u5165: s = &quot;paper&quot;, t = &quot;title&quot; \u8F93\u51FA: true \u8BF4\u660E: \u4F60\u53EF\u4EE5\u5047\u8BBE\xA0s\xA0\u548C t \u5177\u6709\u76F8\u540C\u7684\u957F\u5EA6\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/isomorphic-strings" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/isomorphic-strings</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u9010\u4E00\u6620\u5C04,\u5982\u679C\u51FA\u73B0\u51B2\u7A81\u5C31\u8FD4\u56DEfalse, \u6CA1\u6709\u4EFB\u4F55\u51B2\u7A81,\u8FD4\u56DEtrue</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(N) \u5176\u4E2DN\u662Fs\u7684\u957F\u5EA6 \u7A7A\u95F4\u590D\u6742\u5EA6\u662FO(1) \u65E0\u8BBA\u5B57\u7B26\u4E32\u591A\u957F,\u7A7A\u95F4\u90FD\u662F512\u5B57\u8282</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">is_isomorphic</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> t<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u7528\u6570\u7EC4\u6765\u66FF\u4EE3map,\u56E0\u4E3A\u660E\u786E\u77E5\u9053\u6570\u91CF. s-&gt;t</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> m <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//t-&gt;s \u7684\u6620\u5C04,\u5FC5\u987B\u662F\u53CC\u5411\u7684\u624D\u7B26\u5408\u9898\u610F</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> m2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> si <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> ti <span class="token operator">=</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> m<span class="token punctuation">[</span>si<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> m<span class="token punctuation">[</span>si<span class="token punctuation">]</span> <span class="token operator">!=</span> ti <span class="token keyword">as</span> <span class="token keyword">u8</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> m2<span class="token punctuation">[</span>ti<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> m2<span class="token punctuation">[</span>ti<span class="token punctuation">]</span> <span class="token operator">!=</span> si <span class="token keyword">as</span> <span class="token keyword">u8</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            m<span class="token punctuation">[</span>si<span class="token punctuation">]</span> <span class="token operator">=</span> ti <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span>
            m2<span class="token punctuation">[</span>ti<span class="token punctuation">]</span> <span class="token operator">=</span> si <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">is_isomorphic</span><span class="token punctuation">(</span><span class="token string">&quot;egg&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;add&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">is_isomorphic</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">is_isomorphic</span><span class="token punctuation">(</span><span class="token string">&quot;ab&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,19),o=[e];function c(l,u,i,r,k,d){return a(),s("div",null,o)}var h=n(t,[["render",c]]);export{m as __pageData,h as default};
