import{_ as n,c as s,o as a,a as p}from"./app.3dd4ae37.js";const d='{"title":"632. \u6700\u5C0F\u533A\u95F4","description":"","frontmatter":{"title":"632. \u6700\u5C0F\u533A\u95F4","date":"2019-12-12T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-12-13)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-12-13"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2019-12-13.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-12-13" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-12-13) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-12-13" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u4F60\u6709\xA0k\xA0\u4E2A\u5347\u5E8F\u6392\u5217\u7684\u6574\u6570\u6570\u7EC4\u3002\u627E\u5230\u4E00\u4E2A\u6700\u5C0F\u533A\u95F4\uFF0C\u4F7F\u5F97\xA0k\xA0\u4E2A\u5217\u8868\u4E2D\u7684\u6BCF\u4E2A\u5217\u8868\u81F3\u5C11\u6709\u4E00\u4E2A\u6570\u5305\u542B\u5728\u5176\u4E2D\u3002</p><p>\u6211\u4EEC\u5B9A\u4E49\u5982\u679C\xA0b-a &lt; d-c\xA0\u6216\u8005\u5728\xA0b-a == d-c\xA0\u65F6\xA0a &lt; c\uFF0C\u5219\u533A\u95F4 [a,b] \u6BD4 [c,d] \u5C0F\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165:[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]] \u8F93\u51FA: [20,24] \u89E3\u91CA: \u5217\u8868 1\uFF1A[4, 10, 15, 24, 26]\uFF0C24 \u5728\u533A\u95F4 [20,24] \u4E2D\u3002 \u5217\u8868 2\uFF1A[0, 9, 12, 20]\uFF0C20 \u5728\u533A\u95F4 [20,24] \u4E2D\u3002 \u5217\u8868 3\uFF1A[5, 18, 22, 30]\uFF0C22 \u5728\u533A\u95F4 [20,24] \u4E2D\u3002 \u6CE8\u610F:</p><p>\u7ED9\u5B9A\u7684\u5217\u8868\u53EF\u80FD\u5305\u542B\u91CD\u590D\u5143\u7D20\uFF0C\u6240\u4EE5\u5728\u8FD9\u91CC\u5347\u5E8F\u8868\u793A &gt;= \u3002 1 &lt;= k &lt;= 3500 -105 &lt;= \u5143\u7D20\u7684\u503C\xA0&lt;= 105 \u5BF9\u4E8E\u4F7F\u7528Java\u7684\u7528\u6237\uFF0C\u8BF7\u6CE8\u610F\u4F20\u5165\u7C7B\u578B\u5DF2\u4FEE\u6539\u4E3A<code>List&lt;List&lt;Integer&gt;&gt;</code>\u3002\u91CD\u7F6E\u4EE3\u7801\u6A21\u677F\u540E\u53EF\u4EE5\u770B\u5230\u8FD9\u9879\u6539\u52A8\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/smallest-range-covering-elements-from-k-lists" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/smallest-range-covering-elements-from-k-lists</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u6ED1\u52A8\u7A97\u53E3\u52A0\u4F18\u5148\u961F\u5217 \u4F18\u5148\u961F\u5217\u4E2D\u7684\u662Fk\u4E2A\u6570\u7EC4\u6309\u7167\u6700\u5C0F\u503C\u7684\u6392\u5217 left: \u521D\u59CB\u7A7A\u6216\u8005\u4E0D\u6EE1\u8DB3\u8986\u76D6k\u4E2A\u6570\u7EC4\u4EFB\u610F\u5143\u7D20\u7684\u6392\u5217 right: \u521A\u597D\u6EE1\u8DB3\u8986\u76D6\u5230k\u4E2A\u6570\u7EC4\u4EFB\u610F\u5143\u7D20\u7684\u7EC8\u70B9</p><p>\u6B65\u9AA4:</p><ol><li>left,right\u4E3A0</li><li>\u4ECE\u4F18\u5148\u961F\u5217\u4E2D\u53D6\u51FA\u4E00\u4E2A\u6570\u7EC4,\u79FB\u9664\u6700\u5C0F\u6570,\u7136\u540E\u653E\u56DE\u961F\u5217\u4E2D</li><li>\u5C06\u6700\u5C0F\u6570\u653E\u5165\u8BA1\u6570\u5668\u4E2D,</li><li>\u68C0\u67E5\u662F\u5426\u6EE1\u8DB3\u6761\u4EF6(\u8986\u76D6k\u4E2A\u6570\u7EC4\u4EFB\u610F\u5143\u7D20\u7684\u6392\u5217)</li><li>\u5982\u679C\u6EE1\u8DB3,\u5219\u79FB\u52A8left\u76F4\u5230\u521A\u597D\u4E0D\u6EE1\u8DB3\u6761\u4EF6,\u7136\u540E\u8BA1\u7B97\u5F97\u5230\u4E00\u4E2A\u533A\u95F4</li><li>\u56DE\u52302,right\u7EE7\u7EED\u5411\u524D\u8D70</li></ol><p>\u4F18\u5148\u961F\u5217\u5728rust\u4E2D\u4F7F\u7528binaryHeap\u5B9E\u73B0. \u590D\u6742\u5EA6\u5206\u6790: \u961F\u5217\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\u90FD\u8981\u8D70\u4E24\u904D,\u6709k\u4E2A\u6570\u7EC4,\u6BCF\u4E2A\u6570\u7EC4\u6709m\u4E2A\u5143\u7D20,\u603B\u6570\u662Fk*m=N \u90A3\u4E48\u590D\u6742\u5EA6\u5C31\u662FO(Nlogk),\u6BCF\u4E2A\u5143\u7D20\u8D70\u7B2C\u4E00\u904D\u7684\u65F6\u5019,\u9700\u8981\u5BF9k\u4E2A\u6570\u7EC4\u8FDB\u884C\u987A\u5E8F\u8C03\u6574,\u8FD9\u4E2A\u662Flogk,\u56E0\u6B64\u603B\u4F53\u590D\u6742\u5EA6\u5C31\u662F O(Nlogk) \u7A7A\u95F4\u590D\u6742\u5EA6:\u4E3B\u8981\u662F\u961F\u5217\u5360\u7528\u7A7A\u95F4\u5C31\u662FO(k),\u6781\u7AEF\u60C5\u51B5\u4E0B\u53EF\u80FD\u662FO(N)</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>cmp<span class="token punctuation">::</span></span><span class="token class-name">Ordering</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>collections<span class="token punctuation">::</span></span><span class="token class-name">BinaryHeap</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Clone, Eq, PartialEq)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Element</span><span class="token punctuation">(</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">usize</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u7B2C\u4E00\u4E2A\u5143\u7D20\u662F\u6570\u7EC4\u672C\u8EAB,\u7B2C\u4E8C\u4E2A\u5219\u662F\u4ED6\u7684\u7F16\u53F7</span>
<span class="token keyword">impl</span> <span class="token class-name">Ord</span> <span class="token keyword">for</span> <span class="token class-name">Element</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">cmp</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> other<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">Self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Ordering</span> <span class="token punctuation">{</span>
        other
            <span class="token punctuation">.</span><span class="token number">0</span>
            <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;self must have one element&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">cmp</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;other must have one element&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">PartialOrd</span> <span class="token keyword">for</span> <span class="token class-name">Element</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">partial_cmp</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> other<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">Self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Ordering</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">cmp</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">smallest_range</span><span class="token punctuation">(</span>nums<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> nums <span class="token operator">=</span> nums<span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> h <span class="token operator">=</span> <span class="token class-name">BinaryHeap</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> k <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> current_max <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token keyword">i32</span><span class="token punctuation">::</span><span class="token constant">MAX</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> range_start <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> range_end <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5BF9\u5E94\u7684\u67D0\u4E2A\u6570\u7EC4\u662F\u5426\u5DF2\u7ECF\u79FB\u9664\u4E86\u4E00\u4E2A\u6570\u5230q\u4E2D</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> k_cnt<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">with_capacity</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5143\u7D20\u503C\u4EE5\u53CA\u5176\u5BF9\u5E94\u7684\u6570\u7EC4\u4E0B\u6807</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> q<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">usize</span><span class="token punctuation">,</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> over <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">with_capacity</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u521D\u59CB\u5316\u961F\u5217,\u653E\u5165\u6240\u6709\u7684\u6570\u7EC4</span>
        <span class="token keyword">for</span> n <span class="token keyword">in</span> nums<span class="token punctuation">.</span><span class="token function">iter_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> n<span class="token number">.1</span><span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span>range_start<span class="token punctuation">,</span> range_end<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u4E0D\u53EF\u80FD\u6EE1\u8DB3\u6761\u4EF6,\u56E0\u4E3A\u521D\u59CB\u5C31\u6709\u6570\u7EC4\u662F\u7A7A\u7684</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u600E\u4E48\u79FB\u51FA\u5462?</span>
            h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">(</span>n<span class="token number">.1</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n<span class="token number">.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            k_cnt<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            over<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">/*
        1,2,3,4,5,6\u8FD9\u4E9B\u6B65\u9AA4\u624D\u5F00\u59CB
        */</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> current_cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//\u521D\u59CBk_cnt\u4E2D\u5DF2\u7ECF\u586B\u5145\u6EE1\u4E86\u6709\u6548\u503C</span>
        <span class="token keyword">while</span> h<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> <span class="token keyword">mut</span> v <span class="token operator">=</span> h<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;h must have one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> min <span class="token operator">=</span> v<span class="token number">.0</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> ke <span class="token operator">=</span> k_cnt<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span>v<span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;must have&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token operator">*</span>ke <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u7B2C\u4E00\u6B21\u627E\u5230\u4E86\u8FD9\u4E2A\u4F4D\u7F6E\u4E0A\u7684\u5143\u7D20</span>
                current_cnt <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token operator">*</span>ke <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token number">.1</span><span class="token punctuation">,</span> min<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> v<span class="token number">.0</span><span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u67D0\u4E00\u4E2A\u6570\u7EC4\u904D\u5386\u5B8C\u4E86,\u8FD8\u4E0D\u80FD\u7ED3\u675F\u8981\u7B49\u5230\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4F7F\u7528\u5B8C\u4E86\u624D\u80FD\u7ED3\u675F</span>
                over<span class="token punctuation">[</span>v<span class="token number">.1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                h<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">(</span>v<span class="token number">.0</span><span class="token punctuation">,</span> v<span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u5DF2\u7ECF\u6EE1\u8DB3\u6761\u4EF6,\u90A3\u4E48\u79FB\u52A8left,\u76F4\u5230</span>
            <span class="token keyword">if</span> current_cnt <span class="token operator">==</span> k <span class="token punctuation">{</span>
                <span class="token keyword">let</span> <span class="token keyword">mut</span> min <span class="token operator">=</span> q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> max <span class="token operator">=</span> q<span class="token punctuation">[</span>q<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> current_cnt <span class="token operator">==</span> k <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> first <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    k_cnt<span class="token punctuation">[</span>first<span class="token number">.0</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> k_cnt<span class="token punctuation">[</span>first<span class="token number">.0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                        <span class="token comment">//\u67D0\u4E2A\u6570\u7EC4\u964D\u5230\u4E860,\u518D\u8BB2\u5C31\u4E0D\u6EE1\u8DB3\u76EE\u6807\u4E86.</span>
                        min <span class="token operator">=</span> first<span class="token punctuation">;</span>
                        current_cnt <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> max<span class="token number">.1</span> <span class="token operator">-</span> min<span class="token number">.1</span> <span class="token operator">&lt;</span> current_max <span class="token punctuation">{</span>
                    current_max <span class="token operator">=</span> max<span class="token number">.1</span> <span class="token operator">-</span> min<span class="token number">.1</span><span class="token punctuation">;</span>
                    range_start <span class="token operator">=</span> min<span class="token number">.1</span><span class="token punctuation">;</span>
                    range_end <span class="token operator">=</span> max<span class="token number">.1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token macro property">vec!</span><span class="token punctuation">[</span>range_start<span class="token punctuation">,</span> range_end<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">smallest_range</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]]</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">smallest_range</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span>
            <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u4E00\u5F00\u59CB\u603B\u662F\u60F3\u7740\u4F18\u5316left\u5411\u524D\u79FB\u52A8\u90E8\u5206,\u60F3\u7740\u5728\u4E00\u4E2Alogk\u65F6\u95F4\u8303\u56F4\u5185, \u4F7F\u7528\u4E86BTreeMap\u7B49\u5DE5\u5177,\u7ED3\u679C\u5904\u7406\u4E0D\u4E86\u6570\u7EC4\u4E2D\u5143\u7D20\u76F8\u540C\u7684\u60C5\u51B5,\u5F92\u589E\u9EBB\u70E6.</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,20),o=[e];function c(l,u,r,k,i,m){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
