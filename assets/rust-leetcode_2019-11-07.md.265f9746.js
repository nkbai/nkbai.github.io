import{_ as n,c as s,o as a,a as p}from"./app.4bbc222c.js";const d='{"title":"1104. \u4E8C\u53C9\u6811\u5BFB\u8DEF","description":"","frontmatter":{"title":"1104. \u4E8C\u53C9\u6811\u5BFB\u8DEF","date":"2019-11-06T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-11-07)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-11-07"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2019-11-07.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-11-07" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-11-07) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-11-07" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u5728\u4E00\u68F5\u65E0\u9650\u7684\u4E8C\u53C9\u6811\u4E0A\uFF0C\u6BCF\u4E2A\u8282\u70B9\u90FD\u6709\u4E24\u4E2A\u5B50\u8282\u70B9\uFF0C\u6811\u4E2D\u7684\u8282\u70B9 \u9010\u884C \u4F9D\u6B21\u6309\xA0\u201C\u4E4B\u201D \u5B57\u5F62\u8FDB\u884C\u6807\u8BB0\u3002</p><p>\u5982\u4E0B\u56FE\u6240\u793A\uFF0C\u5728\u5947\u6570\u884C\uFF08\u5373\uFF0C\u7B2C\u4E00\u884C\u3001\u7B2C\u4E09\u884C\u3001\u7B2C\u4E94\u884C\u2026\u2026\uFF09\u4E2D\uFF0C\u6309\u4ECE\u5DE6\u5230\u53F3\u7684\u987A\u5E8F\u8FDB\u884C\u6807\u8BB0\uFF1B</p><p>\u800C\u5076\u6570\u884C\uFF08\u5373\uFF0C\u7B2C\u4E8C\u884C\u3001\u7B2C\u56DB\u884C\u3001\u7B2C\u516D\u884C\u2026\u2026\uFF09\u4E2D\uFF0C\u6309\u4ECE\u53F3\u5230\u5DE6\u7684\u987A\u5E8F\u8FDB\u884C\u6807\u8BB0\u3002</p><p><img alt="" data-src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/06/28/tree.png" loading="lazy" class="lazy"></p><p>\u7ED9\u4F60\u6811\u4E0A\u67D0\u4E00\u4E2A\u8282\u70B9\u7684\u6807\u53F7 label\uFF0C\u8BF7\u4F60\u8FD4\u56DE\u4ECE\u6839\u8282\u70B9\u5230\u8BE5\u6807\u53F7\u4E3A label \u8282\u70B9\u7684\u8DEF\u5F84\uFF0C\u8BE5\u8DEF\u5F84\u662F\u7531\u9014\u7ECF\u7684\u8282\u70B9\u6807\u53F7\u6240\u7EC4\u6210\u7684\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Alabel = 14 \u8F93\u51FA\uFF1A[1,3,4,14] \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1Alabel = 26 \u8F93\u51FA\uFF1A[1,2,6,10,26]</p><p>\u63D0\u793A\uFF1A</p><p>1 &lt;= label &lt;= 10^6</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/path-in-zigzag-labelled-binary-tree" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/path-in-zigzag-labelled-binary-tree</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u5982\u679C\u4E0D\u8003\u8651zigzag,\u90A3\u4E48label\u5C31\u662F\u4F4D\u7F6E,\u7F16\u53F7\u4ECE1\u5F00\u59CB,\u5047\u8BBElabel\u662F26,\u5176\u5BF9\u5E94\u7684\u4F4D\u7F6E\u5C31\u662F16, \u90A3\u4E48\u6B64\u65F6\u8FD4\u56DE\u7684\u5E94\u8BE5\u662F[14,7,3,1] \u56E0\u4E3Azigzag\u7684\u7F18\u6545,\u8981\u662F\u522B\u51FA\u6765\u5076\u6570\u884C\u662F\u4ECE\u53F3\u5230\u5DE6\u7684,\u5176\u4E2D14,3,\u662F\u5076\u6570\u884C 14 \u9700\u8981\u4ECE[8..15]\u8FDB\u884C\u8F6C\u6362,\u6240\u4EE514\u5BF9\u5E94\u7684\u4F4D\u7F6E\u662F9,\u4F46\u662F\u56E0\u4E3A14\u662F\u7B2C\u4E00\u4E2A\u6570,\u6240\u4EE5\u76F4\u63A5\u4ECE\u8FD9\u4E2A\u4F4D\u7F6E\u5F00\u59CB. \u90A3\u4E489\u8FD9\u4E2A\u4F4D\u7F6E\u5BF9\u5E94\u7684\u7236\u8282\u70B9\u5C31\u662F9/2=4,\u5947\u6570\u884C\u4E0D\u505A\u5904\u7406. \u5F97\u5230[14,4] \u7136\u540E4\u7684\u7236\u8282\u70B9\u662F2,\u5176\u6240\u5728\u884C\u662F[2,3],\u5076\u6570\u884C \u6240\u4EE5\u8F6C\u6362\u4E3A3,\u5F97\u5230[14,4,3] 3\u7684\u7236\u8282\u70B9\u4E3A1,\u5947\u6570\u884C\u4E0D\u8F6C\u6362,\u5F97\u5230[14,4,3,1],\u9006\u5E8F\u8F93\u51FA\u5373\u53EF. \u6CE8\u610F\u8BA1\u7B97\u7236\u8282\u70B9\u7684\u65F6\u5019\u90FD\u5E94\u8BE5\u4F7F\u7528\u4F4D\u7F6E,\u800C\u4E0D\u5E94\u8BE5\u4F7F\u7528\u4F4D\u7F6E\u4E0A\u7684\u503C</p><p>\u65F6\u95F4\u590D\u6742\u5EA6: O(LogN) \u7A7A\u95F4\u590D\u6742\u5EA6 O(LogN)</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span><span class="token punctuation">;</span>

<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">path_in_zig_zag_tree</span><span class="token punctuation">(</span>label<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> v <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> isFirst <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> cur_pos <span class="token operator">=</span> label<span class="token punctuation">;</span>
        <span class="token keyword">while</span> cur_pos <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> first_one_pos <span class="token operator">=</span> <span class="token number">32</span> <span class="token operator">-</span> <span class="token function">leading_zero</span><span class="token punctuation">(</span>cur_pos <span class="token keyword">as</span> <span class="token keyword">u32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;cur={},first_one_pos={}&quot;</span><span class="token punctuation">,</span> cur_pos<span class="token punctuation">,</span> first_one_pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> isEven <span class="token operator">=</span> first_one_pos <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//\u7B2C\u4E00\u4E2A1\u662F\u5947\u6570\u884C,\u4ECE1\u5F00\u59CB</span>
            <span class="token keyword">let</span> <span class="token keyword">mut</span> order_num <span class="token operator">=</span> cur_pos<span class="token punctuation">;</span>
            <span class="token keyword">if</span> isEven <span class="token punctuation">{</span>
                <span class="token comment">//\u5076\u6570\u884C\u9700\u8981\u8F6C\u6362</span>
                <span class="token keyword">let</span> first <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>first_one_pos <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9488\u5BF98-15,\u8303\u56F4\u662F1000\u52301111,first_one_pos=4</span>
                <span class="token keyword">let</span> end <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> first_one_pos<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                order_num <span class="token operator">=</span> end <span class="token operator">-</span> <span class="token punctuation">(</span>order_num <span class="token operator">-</span> first<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> isFirst <span class="token punctuation">{</span>
                v<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> cur_pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
                isFirst <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                cur_pos <span class="token operator">=</span> order_num<span class="token punctuation">;</span> <span class="token comment">//\u7B2C\u4E00\u4E2A\u6570\u662F\u9006\u5E8F,\u9700\u8981\u4FDD\u8BC1\u771F\u6B63\u7684\u4F4D\u7F6E</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                v<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> order_num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9664\u7B2C\u4E00\u4E2A\u503C\u4EE5\u5916\u90FD\u5E94\u8BE5\u4F7F\u7528\u5BF9\u5E94\u4F4D\u7F6E\u4E0A\u7684\u503C,\u800C\u4E0D\u662F\u4F4D\u7F6E\u672C\u8EAB</span>
            <span class="token punctuation">}</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;orderPos={}&quot;</span><span class="token punctuation">,</span> order_num<span class="token punctuation">)</span><span class="token punctuation">;</span>
            cur_pos <span class="token operator">=</span> cur_pos <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">//\u627E\u4E0B\u4E00\u4E2A</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> v<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5224\u65AD\u4E00\u4E2A\u6574\u6570\u6709\u591A\u5C11\u4E2A\u524D\u7F000</span>
<span class="token keyword">fn</span> <span class="token function-definition function">leading_zero</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> x <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">if</span> x <span class="token operator">&lt;=</span> <span class="token number">0x0000ffff</span> <span class="token punctuation">{</span>
        n <span class="token operator">+=</span> <span class="token number">16</span><span class="token punctuation">;</span>
        x <span class="token operator">&lt;&lt;=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> x <span class="token operator">&lt;=</span> <span class="token number">0x00ffffff</span> <span class="token punctuation">{</span>
        n <span class="token operator">+=</span> <span class="token number">8</span><span class="token punctuation">;</span>
        x <span class="token operator">&lt;&lt;=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> x <span class="token operator">&lt;=</span> <span class="token number">0x0fffffff</span> <span class="token punctuation">{</span>
        n <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>
        x <span class="token operator">&lt;&lt;=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> <span class="token number">0x3fffffff</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        n <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        x <span class="token operator">&lt;&lt;=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> x <span class="token operator">&lt;=</span> <span class="token number">0x7fffffff</span> <span class="token punctuation">{</span>
        n <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> n<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">tests</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>share<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">path_in_zig_zag_tree</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">path_in_zig_zag_tree</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">path_in_zig_zag_tree</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">path_in_zig_zag_tree</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">path_in_zig_zag_tree</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test_leading_zeros</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token function">leading_zero</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token function">leading_zero</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span> <span class="token function">leading_zero</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,22),o=[e];function c(l,u,r,k,i,b){return a(),s("div",null,o)}var _=n(t,[["render",c]]);export{d as __pageData,_ as default};
