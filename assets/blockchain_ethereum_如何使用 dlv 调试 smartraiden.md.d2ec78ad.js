import{_ as s,c as n,o as a,N as e}from"./chunks/framework.3a9190c5.js";const h=JSON.parse('{"title":"如何使用 dlv 调试 smartraiden","description":"","frontmatter":{"title":"如何使用 dlv 调试 smartraiden","date":"2018-08-27T02:48:47.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/ethereum/如何使用 dlv 调试 smartraiden.md"}'),l={name:"blockchain/ethereum/如何使用 dlv 调试 smartraiden.md"},t=e(`<p>#使用 dlv 调试smartraiden</p><p>对于程序运行过程中碰到的莫名其妙的问题,比如不明原因的阻塞,命令行 dlv 调试可能比 ide 调试效果更好</p><h2 id="一-正常启动-smartraiden" tabindex="-1">一 正常启动 smartraiden <a class="header-anchor" href="#一-正常启动-smartraiden" aria-label="Permalink to &quot;一 正常启动 smartraiden&quot;">​</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">./smartraiden --datadir=.smartraiden --api-address=0.0.0.0:5001 --listen-address=127.0.0.1:40001  --address=&quot;0x292650fee408320D888e06ed89D938294Ea42f99&quot; --keystore-path ~/privnet3/keystore --registry-contract-address 0xf450955d87F23DF5DFc7297ed6DdDF4fb896Eff2  --password-file 123      --verbosity 5    --debug  --conditionquit &quot;{\\&quot;QuitEvent\\&quot;:\\&quot;EventSendRevealSecretBeforex\\&quot;}&quot; --debugcrash  --eth-rpc-endpoint ws://127.0.0.1:8546</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="二-dlv-调试" tabindex="-1">二 dlv 调试 <a class="header-anchor" href="#二-dlv-调试" aria-label="Permalink to &quot;二 dlv 调试&quot;">​</a></h2><ol><li>出了问题,但是没有崩溃,直接 attach 即可</li><li>出了问题,但是崩溃了,可以提前设置断点</li></ol><h3 id="三-dlv-attach-pid" tabindex="-1">三 dlv attach pid <a class="header-anchor" href="#三-dlv-attach-pid" aria-label="Permalink to &quot;三 dlv attach pid&quot;">​</a></h3><p>attach 成功以后,程序会停止运行</p><h4 id="goroutines-s-查看所有-goroutine-的栈" tabindex="-1">goroutines -s 查看所有 goroutine 的栈 <a class="header-anchor" href="#goroutines-s-查看所有-goroutine-的栈" aria-label="Permalink to &quot;goroutines -s 查看所有 goroutine 的栈&quot;">​</a></h4><h4 id="解决问题" tabindex="-1">解决问题 <a class="header-anchor" href="#解决问题" aria-label="Permalink to &quot;解决问题&quot;">​</a></h4><ol><li>如果觉得某个 goroutine 有问题 <code>goroutine 108</code> 就可以切换到这个 goroutine, 进行调试</li><li>bt 查看堆栈</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(dlv) goroutine 108</span></span>
<span class="line"><span style="color:#A6ACCD;">Switched from 0 to 108 (thread 4644478)</span></span>
<span class="line"><span style="color:#A6ACCD;">(dlv) bt</span></span>
<span class="line"><span style="color:#A6ACCD;">0  0x000000000402f66a in runtime.gopark</span></span>
<span class="line"><span style="color:#A6ACCD;">  at /usr/local/go/src/runtime/proc.go:292</span></span>
<span class="line"><span style="color:#A6ACCD;">1  0x000000000403f150 in runtime.selectgo</span></span>
<span class="line"><span style="color:#A6ACCD;">  at /usr/local/go/src/runtime/select.go:392</span></span>
<span class="line"><span style="color:#A6ACCD;">2  0x0000000004608329 in github.com/SmartMeshFoundation/SmartRaiden/blockchain.(*Events).startListenEvent.func1</span></span>
<span class="line"><span style="color:#A6ACCD;">  at /Volumes/dev/smdev2/src/github.com/SmartMeshFoundation/SmartRaiden/blockchain/events.go:275</span></span>
<span class="line"><span style="color:#A6ACCD;">3  0x000000000405c3d1 in runtime.goexit</span></span>
<span class="line"><span style="color:#A6ACCD;">  at /usr/local/go/src/runtime/asm_amd64.s:2361</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="3"><li>在栈之间移动up/down</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">up</span></span>
<span class="line"><span style="color:#A6ACCD;">up</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>会显示当前可以控制的栈</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Frame 2: /Volumes/dev/smdev2/src/github.com/SmartMeshFoundation/SmartRaiden/blockchain/events.go:275 (PC: 4608329)</span></span>
<span class="line"><span style="color:#A6ACCD;">  270:			go func(name string) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  271:				ch := be.LogChannelMap[name]</span></span>
<span class="line"><span style="color:#A6ACCD;">  272:				sub := be.Subscribes[name]</span></span>
<span class="line"><span style="color:#A6ACCD;">  273:				defer rpanic.PanicRecover(fmt.Sprintf(&quot;startListenEvent %s&quot;, name))</span></span>
<span class="line"><span style="color:#A6ACCD;">  274:				for {</span></span>
<span class="line"><span style="color:#A6ACCD;">=&gt; 275:					select {</span></span>
<span class="line"><span style="color:#A6ACCD;">  276:					case l, ok := &lt;-ch:</span></span>
<span class="line"><span style="color:#A6ACCD;">  277:						if !ok {</span></span>
<span class="line"><span style="color:#A6ACCD;">  278:							//channel closed</span></span>
<span class="line"><span style="color:#A6ACCD;">  279:							return</span></span>
<span class="line"><span style="color:#A6ACCD;">  280:						}</span></span>
<span class="line"><span style="color:#A6ACCD;">(dlv)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ol start="4"><li>查看局部变量 <code>locals</code> 可以显示目前所有的局部变量,也可以通过p 来打印具体的局部变量和全局变量.</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(dlv) p ch</span></span>
<span class="line"><span style="color:#A6ACCD;">chan github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log {</span></span>
<span class="line"><span style="color:#A6ACCD;">	qcount: 0,</span></span>
<span class="line"><span style="color:#A6ACCD;">	dataqsiz: 10,</span></span>
<span class="line"><span style="color:#A6ACCD;">	buf: *[10]struct github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log [</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc420335500),</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc4203355a8),</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc420335650),</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc4203356f8),</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc4203357a0),</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc420335848),</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc4203358f0),</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc420335998),</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc420335a40),</span></span>
<span class="line"><span style="color:#A6ACCD;">		(*github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log)(0xc420335ae8),</span></span>
<span class="line"><span style="color:#A6ACCD;">	],</span></span>
<span class="line"><span style="color:#A6ACCD;">	elemsize: 168,</span></span>
<span class="line"><span style="color:#A6ACCD;">	closed: 0,</span></span>
<span class="line"><span style="color:#A6ACCD;">	elemtype: *runtime._type {</span></span>
<span class="line"><span style="color:#A6ACCD;">		size: 168,</span></span>
<span class="line"><span style="color:#A6ACCD;">		ptrdata: 56,</span></span>
<span class="line"><span style="color:#A6ACCD;">		hash: 3390961113,</span></span>
<span class="line"><span style="color:#A6ACCD;">		tflag: tflagUncommon|tflagExtraStar|tflagNamed,</span></span>
<span class="line"><span style="color:#A6ACCD;">		align: 8,</span></span>
<span class="line"><span style="color:#A6ACCD;">		fieldalign: 8,</span></span>
<span class="line"><span style="color:#A6ACCD;">		kind: 25,</span></span>
<span class="line"><span style="color:#A6ACCD;">		alg: *(*runtime.typeAlg)(0x5218c40),</span></span>
<span class="line"><span style="color:#A6ACCD;">		gcdata: *72,</span></span>
<span class="line"><span style="color:#A6ACCD;">		str: 56993,</span></span>
<span class="line"><span style="color:#A6ACCD;">		ptrToThis: 1205856,},</span></span>
<span class="line"><span style="color:#A6ACCD;">	sendx: 0,</span></span>
<span class="line"><span style="color:#A6ACCD;">	recvx: 0,</span></span>
<span class="line"><span style="color:#A6ACCD;">	recvq: waitq&lt;github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">		first: *(*sudog&lt;github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log&gt;)(0xc4304ae4e0),</span></span>
<span class="line"><span style="color:#A6ACCD;">		last: *(*sudog&lt;github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log&gt;)(0xc4304ae4e0),},</span></span>
<span class="line"><span style="color:#A6ACCD;">	sendq: waitq&lt;github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">		first: *sudog&lt;github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log&gt; nil,</span></span>
<span class="line"><span style="color:#A6ACCD;">		last: *sudog&lt;github.com/SmartMeshFoundation/SmartRaiden/vendor/github.com/ethereum/go-ethereum/core/types.Log&gt; nil,},</span></span>
<span class="line"><span style="color:#A6ACCD;">	lock: runtime.mutex {key: 0},}</span></span>
<span class="line"><span style="color:#A6ACCD;">(dlv)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>可以看到 ch 这个 chann\b 目前没有任何数据,所以阻塞. 5. 也可以查看全局\b变量.也就是包级别的变量.</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(dlv) p &quot;github.com/SmartMeshFoundation/SmartRaiden/params&quot;.MobileMode</span></span>
<span class="line"><span style="color:#A6ACCD;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">(dlv) p &quot;github.com/SmartMeshFoundation/SmartRaiden/params&quot;.ChainID</span></span>
<span class="line"><span style="color:#A6ACCD;">*math/big.Int {</span></span>
<span class="line"><span style="color:#A6ACCD;">	neg: false,</span></span>
<span class="line"><span style="color:#A6ACCD;">	abs: math/big.nat len: 1, cap: 5, [8888],}</span></span>
<span class="line"><span style="color:#A6ACCD;">(dlv)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,20),p=[t];function r(o,i,c,m,u,b){return a(),n("div",null,p)}const C=s(l,[["render",r]]);export{h as __pageData,C as default};
