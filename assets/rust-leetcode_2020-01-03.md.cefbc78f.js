import{_ as n,c as s,o as a,a as p}from"./app.4bbc222c.js";const d='{"title":"452. \u7528\u6700\u5C11\u6570\u91CF\u7684\u7BAD\u5F15\u7206\u6C14\u7403","description":"","frontmatter":{"title":"452. \u7528\u6700\u5C11\u6570\u91CF\u7684\u7BAD\u5F15\u7206\u6C14\u7403","date":"2020-01-02T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-01-03)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-01-03"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2020-01-03.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-01-03" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-01-03) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-01-03" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u5728\u4E8C\u7EF4\u7A7A\u95F4\u4E2D\u6709\u8BB8\u591A\u7403\u5F62\u7684\u6C14\u7403\u3002\u5BF9\u4E8E\u6BCF\u4E2A\u6C14\u7403\uFF0C\u63D0\u4F9B\u7684\u8F93\u5165\u662F\u6C34\u5E73\u65B9\u5411\u4E0A\uFF0C\u6C14\u7403\u76F4\u5F84\u7684\u5F00\u59CB\u548C\u7ED3\u675F\u5750\u6807\u3002\u7531\u4E8E\u5B83\u662F\u6C34\u5E73\u7684\uFF0C\u6240\u4EE5y\u5750\u6807\u5E76\u4E0D\u91CD\u8981\uFF0C\u56E0\u6B64\u53EA\u8981\u77E5\u9053\u5F00\u59CB\u548C\u7ED3\u675F\u7684x\u5750\u6807\u5C31\u8DB3\u591F\u4E86\u3002\u5F00\u59CB\u5750\u6807\u603B\u662F\u5C0F\u4E8E\u7ED3\u675F\u5750\u6807\u3002\u5E73\u9762\u5185\u6700\u591A\u5B58\u5728104\u4E2A\u6C14\u7403\u3002</p><p>\u4E00\u652F\u5F13\u7BAD\u53EF\u4EE5\u6CBF\u7740x\u8F74\u4ECE\u4E0D\u540C\u70B9\u5B8C\u5168\u5782\u76F4\u5730\u5C04\u51FA\u3002\u5728\u5750\u6807x\u5904\u5C04\u51FA\u4E00\u652F\u7BAD\uFF0C\u82E5\u6709\u4E00\u4E2A\u6C14\u7403\u7684\u76F4\u5F84\u7684\u5F00\u59CB\u548C\u7ED3\u675F\u5750\u6807\u4E3A xstart\uFF0Cxend\uFF0C \u4E14\u6EE1\u8DB3 \xA0xstart\xA0\u2264 x \u2264 xend\uFF0C\u5219\u8BE5\u6C14\u7403\u4F1A\u88AB\u5F15\u7206\u3002\u53EF\u4EE5\u5C04\u51FA\u7684\u5F13\u7BAD\u7684\u6570\u91CF\u6CA1\u6709\u9650\u5236\u3002 \u5F13\u7BAD\u4E00\u65E6\u88AB\u5C04\u51FA\u4E4B\u540E\uFF0C\u53EF\u4EE5\u65E0\u9650\u5730\u524D\u8FDB\u3002\u6211\u4EEC\u60F3\u627E\u5230\u4F7F\u5F97\u6240\u6709\u6C14\u7403\u5168\u90E8\u88AB\u5F15\u7206\uFF0C\u6240\u9700\u7684\u5F13\u7BAD\u7684\u6700\u5C0F\u6570\u91CF\u3002</p><p>Example:</p><p>\u8F93\u5165: [[10,16], [2,8], [1,6], [7,12]]</p><p>\u8F93\u51FA: 2</p><p>\u89E3\u91CA: \u5BF9\u4E8E\u8BE5\u6837\u4F8B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728x = 6\uFF08\u5C04\u7206[2,8],[1,6]\u4E24\u4E2A\u6C14\u7403\uFF09\u548C x = 11\uFF08\u5C04\u7206\u53E6\u5916\u4E24\u4E2A\u6C14\u7403\uFF09\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u601D\u8DEF:</p><ol><li>\u9996\u5148\u6309\u7167\u8D77\u59CB\u4F4D\u7F6E\u6392\u5E8F,</li><li>\u8D2A\u5FC3\u7B97\u6CD5,\u5C3D\u53EF\u80FD\u7684\u591A\u5403\u8FDB\u53BB</li><li>\u8FDB\u6765\u4E00\u4E2A\u4F1A\u4E0D\u65AD\u7684\u7F29\u51CF\u533A\u57DF.</li><li>\u5982\u679C\u65B0\u8FDB\u6765\u4E00\u4E2A\u4E0D\u80FD\u653E\u5230\u73B0\u5728\u7684\u533A\u57DF\u5C31\u65B0\u5F00\u4E00\u4E2A. \u56E0\u4E3A\u65B0\u6765\u7684\u8981\u4E48\u548C\u5DE6\u8FB9\u7684\u5408\u5E76 ,\u8981\u4E48\u65B0\u5F00, \u5982\u679C\u548C\u5DE6\u8FB9\u90BB\u5C45\u7684\u5408\u5E76,\u90A3\u4E48\u610F\u5473\u7740\u6700\u5DE6\u8FB9\u7684\u4E00\u5B9A\u4F1A\u88AB\u8E22\u51FA\u53BB. \u6BD4\u5982 1 6 2 8 3 7 [1,6]\u8FDB\u6765\u4F1A\u628A\u533A\u57DF\u9650\u5B9A\u4E3A[1,6] [2,8]\u8FDB\u6765\u5219\u4F1A\u5427\u533A\u57DF\u9650\u5B9A\u4E3A[2,6] \u8FD9\u65F6\u5019[3,7]\u8FDB\u6765,\u80AF\u5B9A\u653E\u4E0D\u8FDB[2,6],\u5982\u679C\u548C[2,8]\u7EC4\u5408\u5C31\u4F1A\u628A[1,6]\u8E22\u51FA\u53BB \u8FD9\u65F6\u5019\u4F7F\u7528\u7684\u7BAD\u7684\u6570\u91CF\u662F\u4E0D\u53D8\u7684.</li></ol><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>cmp<span class="token punctuation">::</span></span><span class="token punctuation">{</span>max<span class="token punctuation">,</span> min<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">find_min_arrow_shots</span><span class="token punctuation">(</span>points<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> points<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> points <span class="token operator">=</span> points<span class="token punctuation">;</span>
        points<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//        println!(&quot;points={:?}&quot;, points);</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> cnt <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token keyword">mut</span> start<span class="token punctuation">,</span> <span class="token keyword">mut</span> end<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span>points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">..</span>points<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> p <span class="token operator">=</span> points<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> end <span class="token punctuation">{</span>
                start <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> start<span class="token punctuation">)</span><span class="token punctuation">;</span>
                end <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u653E\u4E0D\u8FDB\u53BB\u8FD9\u4E2A\u533A\u57DF\u4E86.</span>
                start <span class="token operator">=</span> p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                end <span class="token operator">=</span> p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                cnt <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        cnt
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>

    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">find_min_arrow_shots</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,18),o=[e];function c(l,u,r,i,k,b){return a(),s("div",null,o)}var h=n(t,[["render",c]]);export{d as __pageData,h as default};
