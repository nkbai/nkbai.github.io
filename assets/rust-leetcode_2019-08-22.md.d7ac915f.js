import{_ as n,c as s,o as a,a as p}from"./app.7ecda22b.js";const d='{"title":"925. \u957F\u6309\u952E\u5165","description":"","frontmatter":{"title":"925. \u957F\u6309\u952E\u5165","date":"2019-08-21T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-08-22)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-08-22"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2019-08-22.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-08-22" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-08-22) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-08-22" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u4F60\u7684\u670B\u53CB\u6B63\u5728\u4F7F\u7528\u952E\u76D8\u8F93\u5165\u4ED6\u7684\u540D\u5B57\xA0name\u3002\u5076\u5C14\uFF0C\u5728\u952E\u5165\u5B57\u7B26\xA0c\xA0\u65F6\uFF0C\u6309\u952E\u53EF\u80FD\u4F1A\u88AB\u957F\u6309\uFF0C\u800C\u5B57\u7B26\u53EF\u80FD\u88AB\u8F93\u5165 1 \u6B21\u6216\u591A\u6B21\u3002</p><p>\u4F60\u5C06\u4F1A\u68C0\u67E5\u952E\u76D8\u8F93\u5165\u7684\u5B57\u7B26\xA0typed\u3002\u5982\u679C\u5B83\u5BF9\u5E94\u7684\u53EF\u80FD\u662F\u4F60\u7684\u670B\u53CB\u7684\u540D\u5B57\uFF08\u5176\u4E2D\u4E00\u4E9B\u5B57\u7B26\u53EF\u80FD\u88AB\u957F\u6309\uFF09\uFF0C\u90A3\u4E48\u5C31\u8FD4\u56DE\xA0True\u3002</p><div class="language-"><pre><code>\u793A\u4F8B 1\uFF1A

\u8F93\u5165\uFF1Aname = &quot;alex&quot;, typed = &quot;aaleex&quot;
\u8F93\u51FA\uFF1Atrue
\u89E3\u91CA\uFF1A&#39;alex&#39; \u4E2D\u7684 &#39;a&#39; \u548C &#39;e&#39; \u88AB\u957F\u6309\u3002
\u793A\u4F8B 2\uFF1A

\u8F93\u5165\uFF1Aname = &quot;saeed&quot;, typed = &quot;ssaaedd&quot;
\u8F93\u51FA\uFF1Afalse
\u89E3\u91CA\uFF1A&#39;e&#39; \u4E00\u5B9A\u9700\u8981\u88AB\u952E\u5165\u4E24\u6B21\uFF0C\u4F46\u5728 typed \u7684\u8F93\u51FA\u4E2D\u4E0D\u662F\u8FD9\u6837\u3002
\u793A\u4F8B 3\uFF1A

\u8F93\u5165\uFF1Aname = &quot;leelee&quot;, typed = &quot;lleeelee&quot;
\u8F93\u51FA\uFF1Atrue
\u793A\u4F8B 4\uFF1A

\u8F93\u5165\uFF1Aname = &quot;laiden&quot;, typed = &quot;laiden&quot;
\u8F93\u51FA\uFF1Atrue
\u89E3\u91CA\uFF1A\u957F\u6309\u540D\u5B57\u4E2D\u7684\u5B57\u7B26\u5E76\u4E0D\u662F\u5FC5\u8981\u7684\u3002


\u63D0\u793A\uFF1A

name.length &lt;= 1000
typed.length &lt;= 1000
name \u548C\xA0typed\xA0\u7684\u5B57\u7B26\u90FD\u662F\u5C0F\u5199\u5B57\u6BCD\u3002
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/long-pressed-name" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/long-pressed-name</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u601D\u8DEF: \u5F88\u7B80\u5355,\u8FD9\u4E2A\u5C31\u662F\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u7684\u95EE\u9898. \u56E0\u4E3A\u6D89\u53CA\u5230\u5339\u914D\u91CD\u590D\u5B57\u7B26\u95EE\u9898,\u78B0\u5230\u91CD\u590D\u7684\u5B57\u7B26,\u4E00\u6B21\u6027\u5403\u4E0B\u5168\u90E8\u5373\u53EF.</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">get_next_bytes_len</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">usize</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> a <span class="token operator">=</span> name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">..</span>name<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> name<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> a <span class="token punctuation">{</span>
                <span class="token keyword">return</span> j <span class="token operator">-</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        name<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> i <span class="token comment">//\u5168\u90E8\u90FD\u4E00\u6837\u4E86</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">is_long_pressed_name</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> typed<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> typed <span class="token operator">=</span> typed<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> ni <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> ti <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">loop</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u90FD\u8D70\u5B8C\u4E86,\u5339\u914D\u6210\u529F,\u7ED3\u675F</span>
            <span class="token keyword">if</span> name<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> ti <span class="token operator">&amp;&amp;</span> typed<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> ti <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">let</span> c <span class="token operator">=</span> name<span class="token punctuation">[</span>ni<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> nl <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">get_next_bytes_len</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> ni<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ni <span class="token operator">+=</span> nl<span class="token punctuation">;</span> <span class="token comment">//ni\u79FB\u52A8</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> ti<span class="token punctuation">..</span><span class="token punctuation">(</span>ti <span class="token operator">+</span> nl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> ti <span class="token operator">&gt;=</span> typed<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> typed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> c <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">//\u5FC5\u987B\u5339\u914D\u7684,\u6CA1\u6709\u5339\u914D\u4E0A,\u5931\u8D25</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u5C3D\u53EF\u80FD\u5403\u4E0B\u6240\u6709\u7684\u76F8\u540C\u5B57\u7B26</span>
            ti <span class="token operator">=</span> ti <span class="token operator">+</span> nl<span class="token punctuation">;</span> <span class="token comment">//ti\u5148\u79FB\u52A8\u76F8\u540C\u7684</span>
            <span class="token keyword">let</span> range <span class="token operator">=</span> ti<span class="token punctuation">..</span>typed<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> range <span class="token punctuation">{</span>
                <span class="token keyword">if</span> typed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> c <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                ti <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//\u79FB\u52A8\u5C3D\u53EF\u80FD\u591A\u7684</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">tests</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test_long_pressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">is_long_pressed_name</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;saeed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;ssaaedd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token boolean">false</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">is_long_pressed_name</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;leelee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;lleeelee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token boolean">true</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">is_long_pressed_name</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;laiden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;laiden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token boolean">true</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">is_long_pressed_name</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;alex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;aaleex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token boolean">true</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u5F88\u7B80\u5355,\u51D1\u51D1\u6570, rust \u80FD\u8BA9\u601D\u8DEF\u66F4\u6E05\u6670,\u4F46\u662F\u5728\u8FD9\u9053\u9898\u4E0A\u597D\u50CF\u6CA1\u5565\u6548\u679C.</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,15),o=[e];function c(l,u,r,i,k,b){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
