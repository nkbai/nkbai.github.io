import{o as n,c as s,e}from"./app.f8197458.js";const a='{"title":"897. 递增顺序查找树","description":"","frontmatter":{"title":"897. 递增顺序查找树","date":"2020-02-24T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["技术相关"],"plugins":["viz"]},"headers":[{"level":2,"title":"每天一道Rust-LeetCode(2020-02-25)","slug":"每天一道rust-leetcode-2020-02-25"},{"level":2,"title":"题目描述","slug":"题目描述"}],"relativePath":"rust-leetcode/2020-02-25.md","lastUpdated":1582075863000}',r={},l=[e('<h2 id="每天一道rust-leetcode-2020-02-25"><a class="header-anchor" href="#每天一道rust-leetcode-2020-02-25" aria-hidden="true">#</a> 每天一道Rust-LeetCode(2020-02-25)</h2><p>坚持每天一道题,刷题学习Rust.</p><h2 id="题目描述"><a class="header-anchor" href="#题目描述" aria-hidden="true">#</a> 题目描述</h2><p>给定一个树，按中序遍历重新排列树，使树中最左边的结点现在是树的根，并且每个结点没有左子结点，只有一个右子结点。</p><p>示例 ：</p><div class="language-"><pre><code>输入：[5,3,6,2,4,null,8,1,null,null,null,7,9]\n\n       5\n      / \\\n    3    6\n   / \\    \\\n  2   4    8\n/        / \\\n1        7   9\n```\n输出：[1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]\n```\n 1\n  \\\n   2\n    \\\n     3\n      \\\n       4\n        \\\n         5\n          \\\n           6\n            \\\n             7\n              \\\n               8\n                \\\n                 9  \n\n \n```\n提示：\n\n给定树中的结点数介于 1 和 100 之间。\n每个结点都有一个从 0 到 1000 范围内的唯一整数值。\n\n\n## 解题思路\n递归中序遍历,\n1. 先遍历左子树,\n 如果左子树为空,则直接追加在当前根上,否则追加在左子树返回的右下角节点上.\n2. 自己成为新的根\n3. 将自己作为新的根来遍历右子树.\n如果右子树为空,新的根仍然是自己,否则是右子树返回节点\n\n## 解题过程\n\n```rust\n\nstruct Solution {}\nuse crate::share::TreeNode;\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nimpl Solution {\n    pub fn increasing_bst(root: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;) -&gt; Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt; {\n        let mut new_root = None;\n        Self::inorder_traverse(&amp;mut new_root, root);\n        new_root\n    }\n    pub fn inorder_traverse(\n        new_root: &amp;mut Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n        root: Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt;,\n    ) -&gt; Option&lt;Rc&lt;RefCell&lt;TreeNode&gt;&gt;&gt; {\n        if root.is_none() {\n            return None;\n        }\n        let r = root.unwrap();\n        println!(&quot;visit:{}&quot;, r.borrow().val);\n        let left = r.borrow_mut().left.take();\n        let mut r2 = Self::inorder_traverse(new_root, left);\n        match r2 {\n            None =&gt; {\n                if new_root.is_none() {\n                    *new_root = Some(r.clone());\n                } else {\n                    new_root.as_ref().unwrap().borrow_mut().right = Some(r.clone());\n                }\n            }\n            Some(ref mut new_root) =&gt; {\n                new_root.borrow_mut().right = Some(r.clone());\n            }\n        };\n        let right = r.borrow_mut().right.take();\n        let mut new_root = Some(r);\n        let r3 = Self::inorder_traverse(&amp;mut new_root, right);\n        if r3.is_none() {\n            return new_root;\n        } else {\n            return r3;\n        }\n    }\n}\n#[cfg(test)]\nmod test {\n    use super::*;\n    use crate::share::NULL;\n    #[test]\n    fn test() {\n        let t = crate::share::build_tree_ignore_parent(&amp;vec![\n            5, 3, 6, 2, 4, NULL, 8, 1, NULL, NULL, NULL, 7, 9,\n        ]);\n        println!(&quot;t={}&quot;, t.as_ref().unwrap().borrow().to_string());\n        let r = Solution::increasing_bst(t);\n        println!(&quot;r={}&quot;, r.unwrap().borrow().to_string());\n        let r = Solution::increasing_bst(None);\n        println!(&quot;r2={:?}&quot;, r);\n    }\n}\n```\n## 一点感悟\n这个题,递归,要想清楚,否则容易绕进去\n## 其他\n\n欢迎关注我的[github](https://github.com/nkbai/rust-leetcode),本项目文章所有代码都可以找到.</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br></div></div>',6)];r.render=function(e,a,r,p,b,t){return n(),s("div",null,l)};export{a as __pageData,r as default};
