import{_ as n,c as s,o as a,a as p}from"./app.eccc2abf.js";const m='{"title":"299. \u731C\u6570\u5B57\u6E38\u620F","description":"","frontmatter":{"title":"299. \u731C\u6570\u5B57\u6E38\u620F","date":"2020-03-24T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-25)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-25"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2020-03-25.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-25" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-25) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-25" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u4F60\u6B63\u5728\u548C\u4F60\u7684\u670B\u53CB\u73A9\xA0\u731C\u6570\u5B57\uFF08Bulls and Cows\uFF09\u6E38\u620F\uFF1A\u4F60\u5199\u4E0B\u4E00\u4E2A\u6570\u5B57\u8BA9\u4F60\u7684\u670B\u53CB\u731C\u3002\u6BCF\u6B21\u4ED6\u731C\u6D4B\u540E\uFF0C\u4F60\u7ED9\u4ED6\u4E00\u4E2A\u63D0\u793A\uFF0C\u544A\u8BC9\u4ED6\u6709\u591A\u5C11\u4F4D\u6570\u5B57\u548C\u786E\u5207\u4F4D\u7F6E\u90FD\u731C\u5BF9\u4E86\uFF08\u79F0\u4E3A\u201CBulls\u201D, \u516C\u725B\uFF09\uFF0C\u6709\u591A\u5C11\u4F4D\u6570\u5B57\u731C\u5BF9\u4E86\u4F46\u662F\u4F4D\u7F6E\u4E0D\u5BF9\uFF08\u79F0\u4E3A\u201CCows\u201D, \u5976\u725B\uFF09\u3002\u4F60\u7684\u670B\u53CB\u5C06\u4F1A\u6839\u636E\u63D0\u793A\u7EE7\u7EED\u731C\uFF0C\u76F4\u5230\u731C\u51FA\u79D8\u5BC6\u6570\u5B57\u3002</p><p>\u8BF7\u5199\u51FA\u4E00\u4E2A\u6839\u636E\u79D8\u5BC6\u6570\u5B57\u548C\u670B\u53CB\u7684\u731C\u6D4B\u6570\u8FD4\u56DE\u63D0\u793A\u7684\u51FD\u6570\uFF0C\u7528 A \u8868\u793A\u516C\u725B\uFF0C\u7528\xA0B\xA0\u8868\u793A\u5976\u725B\u3002</p><p>\u8BF7\u6CE8\u610F\u79D8\u5BC6\u6570\u5B57\u548C\u670B\u53CB\u7684\u731C\u6D4B\u6570\u90FD\u53EF\u80FD\u542B\u6709\u91CD\u590D\u6570\u5B57\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: secret = &quot;1807&quot;, guess = &quot;7810&quot;</p><p>\u8F93\u51FA: &quot;1A3B&quot;</p><p>\u89E3\u91CA: 1\xA0\u516C\u725B\u548C\xA03\xA0\u5976\u725B\u3002\u516C\u725B\u662F 8\uFF0C\u5976\u725B\u662F 0, 1\xA0\u548C 7\u3002 \u793A\u4F8B 2:</p><p>\u8F93\u5165: secret = &quot;1123&quot;, guess = &quot;0111&quot;</p><p>\u8F93\u51FA: &quot;1A1B&quot;</p><p>\u89E3\u91CA: \u670B\u53CB\u731C\u6D4B\u6570\u4E2D\u7684\u7B2C\u4E00\u4E2A 1\xA0\u662F\u516C\u725B\uFF0C\u7B2C\u4E8C\u4E2A\u6216\u7B2C\u4E09\u4E2A 1\xA0\u53EF\u88AB\u89C6\u4E3A\u5976\u725B\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/bulls-and-cows" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/bulls-and-cows</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u5148\u7EDF\u8BA1secret\u6BCF\u4E2A\u6570\u5B57\u51FA\u73B0\u7684\u6B21\u6570, \u7136\u540E\u5904\u7406guess,\u5982\u679C\u548Csecret\u76F8\u5E94\u4F4D\u7F6E\u76F8\u540C,\u5219a+1,\u540C\u65F6\u521A\u521A\u7EDF\u8BA1\u7684\u6B21\u6570-1 \u5982\u679C\u4E0D\u540C,\u5982\u679C\u76F8\u5E94\u7684\u6570\u5B57\u7EDF\u8BA1\u6B21\u6570\u5927\u4E8E0,\u5219\u7EDF\u8BA1\u6B21\u6570-1,\u7136\u540Eb+1 a\u8868\u793A\u516C\u725B\u7684\u4E2A\u6570,b\u8868\u793A\u5976\u725B\u7684\u4E2A\u6570</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_hint</span><span class="token punctuation">(</span>secret<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> guess<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> secret <span class="token operator">=</span> secret<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> guess <span class="token operator">=</span> guess<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> stats <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//0-9\u51FA\u73B0\u7684\u6B21\u6570</span>
        <span class="token keyword">for</span> c <span class="token keyword">in</span> secret <span class="token punctuation">{</span>
            <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token operator">*</span>c <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span>
            stats<span class="token punctuation">[</span>c <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token keyword">in</span> guess<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>c <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token operator">*</span>c <span class="token operator">==</span> secret<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">{</span>
                a <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> stats<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                    stats<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    b <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//1122,1222\u8FD9\u79CD\u60C5\u5F62,\u5148\u628A2\u632A\u7528\u7ED9\u4E86B</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> stats<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                    stats<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    b <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;{}A{}B&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">get_hint</span><span class="token punctuation">(</span><span class="token string">&quot;1807&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;7810&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">&quot;1A3B&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">get_hint</span><span class="token punctuation">(</span><span class="token string">&quot;1123&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;0111&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">&quot;1A1B&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">get_hint</span><span class="token punctuation">(</span><span class="token string">&quot;1122&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;1222&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">&quot;3A0B&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>1122,1222\u8FD9\u79CD\u60C5\u5F62\u5BB9\u6613\u88AB\u5FFD\u7565</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,22),o=[e];function c(u,l,r,i,k,b){return a(),s("div",null,o)}var h=n(t,[["render",c]]);export{m as __pageData,h as default};
