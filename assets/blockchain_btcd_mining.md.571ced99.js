import{_ as s,c as n,o as a,N as l}from"./chunks/framework.3a9190c5.js";const C=JSON.parse('{"title":"mining","description":"","frontmatter":{"title":"mining","date":"2018-11-26T02:01:09.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/btcd/mining.md"}'),p={name:"blockchain/btcd/mining.md"},e=l(`<h1 id="mining模块" tabindex="-1">mining模块 <a class="header-anchor" href="#mining模块" aria-label="Permalink to &quot;mining模块&quot;">​</a></h1><h2 id="coinbase-交易长什么样子" tabindex="-1">coinbase 交易长什么样子 <a class="header-anchor" href="#coinbase-交易长什么样子" aria-label="Permalink to &quot;coinbase 交易长什么样子&quot;">​</a></h2><p>这个交易的输入就一个,TxIn引用的OutPoint,hash值是0,index是0xffffffff 这个OutPoint毫无疑问是无效的.</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#676E95;font-style:italic;">// IsCoinBaseTx determines whether or not a transaction is a coinbase.  A coinbase</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// is a special transaction created by miners that has no inputs.  This is</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// represented in the block chain by a transaction with a single input that has</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// a previous output transaction index set to the maximum value along with a</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// zero hash.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// This function only differs from IsCoinBase in that it works with a raw wire</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// transaction as opposed to a higher level util transaction.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">IsCoinBaseTx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msgTx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgTx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// A coin base must only have one transaction input.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msgTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TxIn</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// The previous output of a coin base must have a max value index and</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// a zero hash.</span></span>
<span class="line"><span style="color:#A6ACCD;">	prevOut </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">msgTx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TxIn</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">PreviousOutPoint</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> prevOut</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Index </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> math</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MaxUint32 </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">prevOut</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">IsEqual</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">zeroHash</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// createCoinbaseTx returns a coinbase transaction paying an appropriate subsidy</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// based on the passed block height to the provided address.  When the address</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// is nil, the coinbase transaction will instead be redeemable by anyone.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// See the comment for NewBlockTemplate for more information about why the nil</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// address handling is useful.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createCoinbaseTx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">params </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">chaincfg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Params</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> coinbaseScript </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">byte</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> nextBlockHeight </span><span style="color:#C792EA;">int32</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> addr btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Address</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Create the script to pay to the provided payment address if one was</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// specified.  Otherwise create a script that allows the coinbase to be</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// redeemable by anyone.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> pkScript </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">byte</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> addr </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span></span>
<span class="line"><span style="color:#A6ACCD;">		pkScript</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> txscript</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">PayToAddrScript</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">addr</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil,</span><span style="color:#A6ACCD;"> err</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span></span>
<span class="line"><span style="color:#A6ACCD;">		scriptBuilder </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> txscript</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewScriptBuilder</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		pkScript</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> scriptBuilder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddOp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txscript</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OP_TRUE</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Script</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil,</span><span style="color:#A6ACCD;"> err</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	tx </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> wire</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewMsgTx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TxVersion</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddTxIn</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TxIn</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// Coinbase transactions have no inputs, so previous outpoint is</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// zero hash and max index.</span></span>
<span class="line"><span style="color:#A6ACCD;">		PreviousOutPoint</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewOutPoint</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">chainhash</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#A6ACCD;">			wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MaxPrevOutIndex</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		SignatureScript</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> coinbaseScript</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		Sequence</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">        wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MaxTxInSequenceNum</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">	tx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddTxOut</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TxOut</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">    blockchain</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CalcBlockSubsidy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">nextBlockHeight</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> params</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">		PkScript</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> pkScript</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewTx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tx</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h2 id="挖矿函数" tabindex="-1">挖矿函数 <a class="header-anchor" href="#挖矿函数" aria-label="Permalink to &quot;挖矿函数&quot;">​</a></h2><p>位于cpuminger.go中的solveBlock 就是暴力破解hash值</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#676E95;font-style:italic;">// solveBlock attempts to find some combination of a nonce, extra nonce, and</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// current timestamp which makes the passed block hash to a value less than the</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// target difficulty.  The timestamp is updated periodically and the passed</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// block is modified with all tweaks during this process.  This means that</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// when the function returns true, the block is ready for submission.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// This function will return early with false when conditions that trigger a</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// stale block such as a new block showing up or periodically when there are</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// new transactions and enough time has elapsed without finding a solution.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">CPUMiner</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">solveBlock</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msgBlock </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">wire</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MsgBlock</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> blockHeight </span><span style="color:#C792EA;">int32</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	ticker </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Ticker</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> quit </span><span style="color:#89DDFF;">chan</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct{})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Choose a random extra nonce offset for this block template and</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// worker.</span></span>
<span class="line"><span style="color:#A6ACCD;">	enOffset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> wire</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RandomUint64</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Errorf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Unexpected error while generating random </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">extra nonce offset: %v</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		enOffset </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Create some convenience variables.</span></span>
<span class="line"><span style="color:#A6ACCD;">	header </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">msgBlock</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span></span>
<span class="line"><span style="color:#A6ACCD;">	targetDifficulty </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> blockchain</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CompactToBig</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">header</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Bits</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Initial state.</span></span>
<span class="line"><span style="color:#A6ACCD;">	lastGenerated </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Now</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	lastTxUpdate </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> m</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TxSource</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">LastUpdated</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	hashesCompleted </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">uint64</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Note that the entire extra nonce range is iterated and the offset is</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// added relying on the fact that overflow will wrap around 0 as</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// provided by the Go spec.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> extraNonce </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">uint64</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> extraNonce </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> maxExtraNonce</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> extraNonce</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// Update the extra nonce in the block template with the</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// new value by regenerating the coinbase script and</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// setting the merkle root to the new value.</span></span>
<span class="line"><span style="color:#A6ACCD;">		m</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UpdateExtraNonce</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msgBlock</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> blockHeight</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> extraNonce</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">enOffset</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// Search through the entire nonce range for a solution while</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// periodically checking for early quit and stale block</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// conditions along with updates to the speed monitor.</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">uint32</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> maxNonce</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;">quit</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;">ticker</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">C</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">				m</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">updateHashes </span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;"> hashesCompleted</span></span>
<span class="line"><span style="color:#A6ACCD;">				hashesCompleted </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">// The current block is stale if the best block</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">// has changed.</span></span>
<span class="line"><span style="color:#A6ACCD;">				best </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> m</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BestSnapshot</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">header</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PrevBlock</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">IsEqual</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">best</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">					</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">// The current block is stale if the memory pool</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">// has been updated since the block template was</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">// generated and it has been at least one</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">// minute.</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> lastTxUpdate </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> m</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TxSource</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">LastUpdated</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#A6ACCD;">					time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Now</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">After</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">lastGenerated</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Minute</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">					</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">				m</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UpdateBlockTime</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">msgBlock</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">// Non-blocking select to fall through</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">// Update the nonce and hash the block header.  Each</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">// hash is actually a double sha256 (two hashes), so</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">// increment the number of hashes completed for each</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">// attempt accordingly.</span></span>
<span class="line"><span style="color:#A6ACCD;">			header</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Nonce </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> i</span></span>
<span class="line"><span style="color:#A6ACCD;">			hash </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> header</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">BlockHash</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">			hashesCompleted </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">// The block is solved when the new block hash is less</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">// than the target difficulty.  Yay!</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> blockchain</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">HashToBig</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">hash</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Cmp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">targetDifficulty</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				m</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">updateHashes </span><span style="color:#89DDFF;">&lt;-</span><span style="color:#A6ACCD;"> hashesCompleted</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br></div></div><h2 id="transaciton的priority" tabindex="-1">Transaciton的Priority <a class="header-anchor" href="#transaciton的priority" aria-label="Permalink to &quot;Transaciton的Priority&quot;">​</a></h2><p>可以看到在放进block的时候,会优先选择priority高的Tx.</p>`,9),o=[e];function t(r,c,D,i,y,A){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{C as __pageData,b as default};
