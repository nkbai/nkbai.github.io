import{o as n,c as s,e as a}from"./app.cf442953.js";const e='{"title":"waddrmgr模块","description":"","frontmatter":{"title":"waddrmgr模块","date":"2019-05-18T13:57:08.732Z","draft":false,"markup":"mmark"},"headers":[{"level":3,"title":"地址","slug":"地址"},{"level":2,"title":"manager","slug":"manager"},{"level":3,"title":"manager","slug":"manager-1"},{"level":3,"title":"ScopedKeyManager 对应着具体的某个子账户","slug":"scopedkeymanager-对应着具体的某个子账户"},{"level":3,"title":"其他","slug":"其他"}],"relativePath":"btcwallet/waddrmgr模块.md","lastUpdated":1561507892000}',t={},p=[a('<h1 id="waddrmgr模块"><a class="header-anchor" href="#waddrmgr模块" aria-hidden="true">#</a> waddrmgr模块</h1><h4 id="_1-waddrmgrnamespacekey"><a class="header-anchor" href="#_1-waddrmgrnamespacekey" aria-hidden="true">#</a> 1. waddrmgrNamespaceKey</h4><h5 id="_1-1-mainbucketname"><a class="header-anchor" href="#_1-1-mainbucketname" aria-hidden="true">#</a> 1.1 mainBucketName</h5><pre><code>    stores the encrypted crypto keys that encrypt all other generated keys\n</code></pre><h5 id="_1-2-syncbucketname"><a class="header-anchor" href="#_1-2-syncbucketname" aria-hidden="true">#</a> 1.2 syncBucketName</h5><pre><code>    stores the current sync state of the root manager.\n</code></pre><h5 id="_1-3-scopebucketname"><a class="header-anchor" href="#_1-3-scopebucketname" aria-hidden="true">#</a> 1.3 scopeBucketName</h5><pre><code>    \t\tscopeBucketNme is the name of the top-level bucket within the\n            hierarchy. It maps: purpose || coinType to a new sub-bucket that\n            will house a scoped address manager. All buckets below are a child\n            of this bucket:\n            \n            scopeBucket -&gt; scope -&gt; acctBucketName //account id=&gt;dbDefaultAccountRow\n            scopeBucket -&gt; scope -&gt; addrBucketName //addressID Hash=&gt;dbAddressRow\n            scopeBucket -&gt; scope -&gt; usedAddrBucketName // 一个地址是否被使用\n            scopeBucket -&gt; scope -&gt; addrAcctIdxBucketName //addressID hash =&gt; account id\n            scopeBucket -&gt; scope -&gt; acctNameIdxBucketName //accountName =&gt; account_id\n            scopeBucket -&gt; scope -&gt; acctIDIdxBucketName //account_id =&gt; accountName\n            scopeBucket -&gt; scope -&gt; metaBucket //metaData\n            scopeBucket -&gt; scope -&gt; metaBucket -&gt; lastAccountNameKey //manager中的最后一个account\n            scopeBucket -&gt; scope -&gt; coinTypePrivKey //后面这两个代码没看到\n            scopeBucket -&gt; scope -&gt; coinTypePubKey\n</code></pre><p>目前已知的Scope有KeyScopeBIP0044,KeyScopeBIP0049Plus等 从这里也看出比特币的Key是树形结构,</p><h5 id="_1-4-scopeschemabucketname"><a class="header-anchor" href="#_1-4-scopeschemabucketname" aria-hidden="true">#</a> 1.4 scopeSchemaBucketName</h5><pre><code>scopeSchemaBucket is the name of the bucket that maps a particular\nmanager scope to the type of addresses that should be derived for\nparticular branches during key derivation.\n</code></pre><div class="language-go line-numbers-mode"><pre><code>\t<span class="token comment">// KeyScopeBIP0049Plus is the key scope of our modified BIP0049</span>\n\t<span class="token comment">// derivation. We say this is BIP0049 &quot;plus&quot;, as we&#39;ll actually use</span>\n\t<span class="token comment">// p2wkh change all change addresses.</span>\n\tKeyScopeBIP0049Plus <span class="token operator">=</span> KeyScope<span class="token punctuation">{</span>\n\t\tPurpose<span class="token punctuation">:</span> <span class="token number">49</span><span class="token punctuation">,</span>\n\t\tCoin<span class="token punctuation">:</span>    <span class="token number">0</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token comment">// KeyScopeBIP0084 is the key scope for BIP0084 derivation. BIP0084</span>\n\t<span class="token comment">// will be used to derive all p2wkh addresses.</span>\n\tKeyScopeBIP0084 <span class="token operator">=</span> KeyScope<span class="token punctuation">{</span>\n\t\tPurpose<span class="token punctuation">:</span> <span class="token number">84</span><span class="token punctuation">,</span>\n\t\tCoin<span class="token punctuation">:</span>    <span class="token number">0</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token comment">// KeyScopeBIP0044 is the key scope for BIP0044 derivation. Legacy</span>\n\t<span class="token comment">// wallets will only be able to use this key scope, and no keys beyond</span>\n\t<span class="token comment">// it.</span>\n\tKeyScopeBIP0044 <span class="token operator">=</span> KeyScope<span class="token punctuation">{</span>\n\t\tPurpose<span class="token punctuation">:</span> <span class="token number">44</span><span class="token punctuation">,</span>\n\t\tCoin<span class="token punctuation">:</span>    <span class="token number">0</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token comment">// DefaultKeyScopes is the set of default key scopes that will be</span>\n\t<span class="token comment">// created by the root manager upon initial creation.</span>\n\tDefaultKeyScopes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>KeyScope<span class="token punctuation">{</span>\n\t\tKeyScopeBIP0049Plus<span class="token punctuation">,</span>\n\t\tKeyScopeBIP0084<span class="token punctuation">,</span>\n\t\tKeyScopeBIP0044<span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token comment">// ScopeAddrMap is a map from the default key scopes to the scope</span>\n\t<span class="token comment">// address schema for each scope type. This will be consulted during</span>\n\t<span class="token comment">// the initial creation of the root key manager.</span>\n\tScopeAddrMap <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span>KeyScope<span class="token punctuation">]</span>ScopeAddrSchema<span class="token punctuation">{</span>\n\t\tKeyScopeBIP0049Plus<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n\t\t\tExternalAddrType<span class="token punctuation">:</span> NestedWitnessPubKey<span class="token punctuation">,</span>\n\t\t\tInternalAddrType<span class="token punctuation">:</span> WitnessPubKey<span class="token punctuation">,</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\tKeyScopeBIP0084<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n\t\t\tExternalAddrType<span class="token punctuation">:</span> WitnessPubKey<span class="token punctuation">,</span>\n\t\t\tInternalAddrType<span class="token punctuation">:</span> WitnessPubKey<span class="token punctuation">,</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\tKeyScopeBIP0044<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n\t\t\tInternalAddrType<span class="token punctuation">:</span> PubKeyHash<span class="token punctuation">,</span>\n\t\t\tExternalAddrType<span class="token punctuation">:</span> PubKeyHash<span class="token punctuation">,</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h3 id="地址"><a class="header-anchor" href="#地址" aria-hidden="true">#</a> 地址</h3><div class="language-go line-numbers-mode"><pre><code>\n<span class="token comment">// AddressType represents the various address types waddrmgr is currently able</span>\n<span class="token comment">// to generate, and maintain.</span>\n<span class="token comment">//</span>\n<span class="token comment">// NOTE: These MUST be stable as they&#39;re used for scope address schema</span>\n<span class="token comment">// recognition within the database.</span>\n<span class="token keyword">type</span> AddressType <span class="token builtin">uint8</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">(</span>\n\t<span class="token comment">// PubKeyHash is a regular p2pkh address.</span>\n\tPubKeyHash AddressType <span class="token operator">=</span> <span class="token boolean">iota</span>\n\n\t<span class="token comment">// Script reprints a raw script address.</span>\n\tScript\n\n\t<span class="token comment">// RawPubKey is just raw public key to be used within scripts, This</span>\n\t<span class="token comment">// type indicates that a scoped manager with this address type</span>\n\t<span class="token comment">// shouldn&#39;t be consulted during historical rescans.</span>\n\tRawPubKey\n\n\t<span class="token comment">// NestedWitnessPubKey represents a p2wkh output nested within a p2sh</span>\n\t<span class="token comment">// output. Using this address type, the wallet can receive funds from</span>\n\t<span class="token comment">// other wallet&#39;s which don&#39;t yet recognize the new segwit standard</span>\n\t<span class="token comment">// output types. Receiving funds to this address maintains the</span>\n\t<span class="token comment">// scalability, and malleability fixes due to segwit in a backwards</span>\n\t<span class="token comment">// compatible manner.</span>\n\tNestedWitnessPubKey\n\n\t<span class="token comment">// WitnessPubKey represents a p2wkh (pay-to-witness-key-hash) address</span>\n\t<span class="token comment">// type.</span>\n\tWitnessPubKey\n<span class="token punctuation">)</span>\n\n<span class="token comment">// ManagedAddress is an interface that provides acces to information regarding</span>\n<span class="token comment">// an address managed by an address manager. Concrete implementations of this</span>\n<span class="token comment">// type may provide further fields to provide information specific to that type</span>\n<span class="token comment">// of address.</span>\n<span class="token keyword">type</span> ManagedAddress <span class="token keyword">interface</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// Account returns the account the address is associated with.</span>\n\t<span class="token function">Account</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">uint32</span>\n\n\t<span class="token comment">// Address returns a btcutil.Address for the backing address.</span>\n\t<span class="token function">Address</span><span class="token punctuation">(</span><span class="token punctuation">)</span> btcutil<span class="token punctuation">.</span>Address\n\n\t<span class="token comment">// AddrHash returns the key or script hash related to the address</span>\n\t<span class="token function">AddrHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>\n\n\t<span class="token comment">// Imported returns true if the backing address was imported instead</span>\n\t<span class="token comment">// of being part of an address chain.</span>\n\t<span class="token function">Imported</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>\n\n\t<span class="token comment">// Internal returns true if the backing address was created for internal</span>\n\t<span class="token comment">// use such as a change output of a transaction.</span>\n\t<span class="token function">Internal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>\n\n\t<span class="token comment">// Compressed returns true if the backing address is compressed.</span>\n\t<span class="token function">Compressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>\n\n\t<span class="token comment">// Used returns true if the backing address has been used in a transaction.</span>\n\t<span class="token function">Used</span><span class="token punctuation">(</span>ns walletdb<span class="token punctuation">.</span>ReadBucket<span class="token punctuation">)</span> <span class="token builtin">bool</span>\n\n\t<span class="token comment">// AddrType returns the address type of the managed address. This can</span>\n\t<span class="token comment">// be used to quickly discern the address type without further</span>\n\t<span class="token comment">// processing</span>\n\t<span class="token function">AddrType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> AddressType\n<span class="token punctuation">}</span>\n\n<span class="token comment">// ManagedPubKeyAddress extends ManagedAddress and additionally provides the</span>\n<span class="token comment">// public and private keys for pubkey-based addresses.</span>\n<span class="token keyword">type</span> ManagedPubKeyAddress <span class="token keyword">interface</span> <span class="token punctuation">{</span>\n\tManagedAddress\n\n\t<span class="token comment">// PubKey returns the public key associated with the address.</span>\n\t<span class="token function">PubKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>btcec<span class="token punctuation">.</span>PublicKey\n\n\t<span class="token comment">// ExportPubKey returns the public key associated with the address</span>\n\t<span class="token comment">// serialized as a hex encoded string.</span>\n\t<span class="token function">ExportPubKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>\n\n\t<span class="token comment">// PrivKey returns the private key for the address.  It can fail if the</span>\n\t<span class="token comment">// address manager is watching-only or locked, or the address does not</span>\n\t<span class="token comment">// have any keys.</span>\n\t<span class="token function">PrivKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>btcec<span class="token punctuation">.</span>PrivateKey<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>\n\n\t<span class="token comment">// ExportPrivKey returns the private key associated with the address</span>\n\t<span class="token comment">// serialized as Wallet Import Format (WIF).</span>\n\t<span class="token function">ExportPrivKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>btcutil<span class="token punctuation">.</span>WIF<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>\n\n\t<span class="token comment">// DerivationInfo contains the information required to derive the key</span>\n\t<span class="token comment">// that backs the address via traditional methods from the HD root. For</span>\n\t<span class="token comment">// imported keys, the first value will be set to false to indicate that</span>\n\t<span class="token comment">// we don&#39;t know exactly how the key was derived.</span>\n\t<span class="token function">DerivationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>KeyScope<span class="token punctuation">,</span> DerivationPath<span class="token punctuation">,</span> <span class="token builtin">bool</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// ManagedScriptAddress extends ManagedAddress and represents a pay-to-script-hash</span>\n<span class="token comment">// style of bitcoin addresses.  It additionally provides information about the</span>\n<span class="token comment">// script.</span>\n<span class="token keyword">type</span> ManagedScriptAddress <span class="token keyword">interface</span> <span class="token punctuation">{</span>\n\tManagedAddress\n\n\t<span class="token comment">// Script returns the script associated with the address.</span>\n\t<span class="token function">Script</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br></div></div><p>managedAddress 表示在ScopedKeyManager下面的地址,P2PubKey类型的地址,无论是否知道私钥,都可以放在这里. scriptAddress 表示在ScopedKeyManager下面的地址,类型是P2SH类型</p><h2 id="manager"><a class="header-anchor" href="#manager" aria-hidden="true">#</a> manager</h2><h3 id="manager-1"><a class="header-anchor" href="#manager-1" aria-hidden="true">#</a> manager</h3><p>这是钱包地址管理的总入口,真正的私钥是由ScopedKeyManager管理</p><div class="language-go line-numbers-mode"><pre><code><span class="token comment">// Manager represents a concurrency safe crypto currency address manager and</span>\n<span class="token comment">// key store.</span>\n<span class="token keyword">type</span> Manager <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n\tmtx sync<span class="token punctuation">.</span>RWMutex\n\n\t<span class="token comment">// scopedManager is a mapping of scope of scoped manager, the manager</span>\n\t<span class="token comment">// itself loaded into memory.</span>\n\tscopedManagers <span class="token keyword">map</span><span class="token punctuation">[</span>KeyScope<span class="token punctuation">]</span><span class="token operator">*</span>ScopedKeyManager\n\n\texternalAddrSchemas <span class="token keyword">map</span><span class="token punctuation">[</span>AddressType<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>KeyScope\n\tinternalAddrSchemas <span class="token keyword">map</span><span class="token punctuation">[</span>AddressType<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>KeyScope\n\n\tsyncState    syncState\n\twatchingOnly <span class="token builtin">bool</span>\n\tbirthday     time<span class="token punctuation">.</span>Time\n\tlocked       <span class="token builtin">bool</span>\n\tclosed       <span class="token builtin">bool</span>\n\tchainParams  <span class="token operator">*</span>chaincfg<span class="token punctuation">.</span>Params\n\n\t<span class="token comment">// masterKeyPub is the secret key used to secure the cryptoKeyPub key</span>\n\t<span class="token comment">// and masterKeyPriv is the secret key used to secure the cryptoKeyPriv</span>\n\t<span class="token comment">// key.  This approach is used because it makes changing the passwords</span>\n\t<span class="token comment">// much simpler as it then becomes just changing these keys.  It also</span>\n\t<span class="token comment">// provides future flexibility.</span>\n\t<span class="token comment">//</span>\n\t<span class="token comment">// NOTE: This is not the same thing as BIP0032 master node extended</span>\n\t<span class="token comment">// key.</span>\n\t<span class="token comment">//</span>\n\t<span class="token comment">// The underlying master private key will be zeroed when the address</span>\n\t<span class="token comment">// manager is locked.</span>\n\tmasterKeyPub  <span class="token operator">*</span>snacl<span class="token punctuation">.</span>SecretKey\n\tmasterKeyPriv <span class="token operator">*</span>snacl<span class="token punctuation">.</span>SecretKey\n\n\t<span class="token comment">// cryptoKeyPub is the key used to encrypt public extended keys and</span>\n\t<span class="token comment">// addresses.</span>\n\tcryptoKeyPub EncryptorDecryptor\n\n\t<span class="token comment">// cryptoKeyPriv is the key used to encrypt private data such as the</span>\n\t<span class="token comment">// master hierarchical deterministic extended key.</span>\n\t<span class="token comment">//</span>\n\t<span class="token comment">// This key will be zeroed when the address manager is locked.</span>\n\tcryptoKeyPrivEncrypted <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>\n\tcryptoKeyPriv          EncryptorDecryptor\n\n\t<span class="token comment">// cryptoKeyScript is the key used to encrypt script data.</span>\n\t<span class="token comment">//</span>\n\t<span class="token comment">// This key will be zeroed when the address manager is locked.</span>\n\tcryptoKeyScriptEncrypted <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>\n\tcryptoKeyScript          EncryptorDecryptor\n\n\t<span class="token comment">// privPassphraseSalt and hashedPrivPassphrase allow for the secure</span>\n\t<span class="token comment">// detection of a correct passphrase on manager unlock when the</span>\n\t<span class="token comment">// manager is already unlocked.  The hash is zeroed each lock.</span>\n\tprivPassphraseSalt   <span class="token punctuation">[</span>saltSize<span class="token punctuation">]</span><span class="token builtin">byte</span>\n\thashedPrivPassphrase <span class="token punctuation">[</span>sha512<span class="token punctuation">.</span>Size<span class="token punctuation">]</span><span class="token builtin">byte</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p>注意其中的lock是账户所动,unlock是凭密码解锁钱包, 也就是说平时钱包里的私钥都是以密文保存的, 这是一种比较安全的实现,如果lock,会把保存的铭文私钥以及密码都清空的.</p><h3 id="scopedkeymanager-对应着具体的某个子账户"><a class="header-anchor" href="#scopedkeymanager-对应着具体的某个子账户" aria-hidden="true">#</a> ScopedKeyManager 对应着具体的某个子账户</h3><p>m/purpose&#39;/cointype&#39; 下面某个账户的key的管理</p><h3 id="其他"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><p>btcwallet把SyncState也放在了waddrmgr模块</p>',24)];t.render=function(a,e,t,c,r,o){return n(),s("div",null,p)};export{e as __pageData,t as default};
