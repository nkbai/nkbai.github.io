import{_ as n,c as s,o as a,a as p}from"./app.dbcd9662.js";const d='{"title":"42. \u63A5\u96E8\u6C34","description":"","frontmatter":{"title":"42. \u63A5\u96E8\u6C34","date":"2019-12-25T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-12-26)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-12-26"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2019-12-26.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-12-26" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-12-26) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-12-26" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u7ED9\u5B9A\xA0n \u4E2A\u975E\u8D1F\u6574\u6570\u8868\u793A\u6BCF\u4E2A\u5BBD\u5EA6\u4E3A 1 \u7684\u67F1\u5B50\u7684\u9AD8\u5EA6\u56FE\uFF0C\u8BA1\u7B97\u6309\u6B64\u6392\u5217\u7684\u67F1\u5B50\uFF0C\u4E0B\u96E8\u4E4B\u540E\u80FD\u63A5\u591A\u5C11\u96E8\u6C34\u3002</p><p>\u4E0A\u9762\u662F\u7531\u6570\u7EC4 [0,1,0,2,1,0,1,3,2,1,2,1] \u8868\u793A\u7684\u9AD8\u5EA6\u56FE\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u63A5 6 \u4E2A\u5355\u4F4D\u7684\u96E8\u6C34\uFF08\u84DD\u8272\u90E8\u5206\u8868\u793A\u96E8\u6C34\uFF09\u3002\xA0\u611F\u8C22 Marcos \u8D21\u732E\u6B64\u56FE\u3002 <img alt="" data-src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rainwatertrap.png" loading="lazy" class="lazy"><a href="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rainwatertrap.png" target="_blank" rel="noopener noreferrer">https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rainwatertrap.png</a> \u793A\u4F8B:</p><p>\u8F93\u5165: [0,1,0,2,1,0,1,3,2,1,2,1] \u8F93\u51FA: 6 \u5728\u771F\u5B9E\u7684\u9762\u8BD5\u4E2D\u9047\u5230\u8FC7\u8FD9\u9053\u9898\uFF1F</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/trapping-rain-water" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/trapping-rain-water</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u9012\u51CF\u6808 \u6808\u5185\u4E3A(height,\u4E0B\u6807,\u5DF2\u7ECF\u8BA1\u7B97\u7684\u96E8\u6C34\u9762\u79EF,\u67F1\u5B50\u7684\u9762\u79EF)</p><p>\u78B0\u5230j,\u9700\u8981\u5F39\u51FA\u6808\u5185\u7684\u5143\u7D20\u65F6,\u8BA1\u7B97\u4E00\u4E0B\u8FD9\u6B21\u5F39\u51FA\u7684\u80FD\u627F\u63A5\u7684\u96E8\u6C34\u91CF \u5982\u679C\u5F39\u51FA\u540E,\u6808\u7A7A\u4E86,\u90A3\u4E48\u8BA1\u5165\u6700\u7EC8\u603B\u91CF,\u5426\u5219\u5C31\u8BA1\u5165\u6808\u9876\u5143\u7D20.</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">trap</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> stack <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> h<span class="token punctuation">)</span> <span class="token keyword">in</span> height<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token operator">*</span>h <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> stack<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>h<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//height,\u4E0B\u6807,\u5DE6\u8FB9\u96E8\u6C34\u7684\u9762\u79EF,\u5DE6\u8FB9\u67F1\u5B50\u7684\u9762\u79EF</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">let</span> <span class="token keyword">mut</span> c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>h<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> <span class="token keyword">mut</span> top <span class="token operator">=</span> <span class="token operator">*</span>stack<span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">/*
            top\u4FDD\u5B58\u7684\u662F\u5DF2\u7ECF\u8BA1\u7B97\u7684\u96E8\u6C34\u7684\u9762\u79EF,\u67F1\u5B50\u7684\u9762\u79EF
            \u6765\u4E86\u4E00\u4E2A\u65B0\u7684\u9AD8\u5EA6,\u9700\u8981\u8003\u8651\u4E24\u90E8\u5206
            1. top \u5230current\u4E4B\u95F4\u7684\u6B65\u4F10
            2. top\u4E0A\u5DF2\u7ECF\u8BA1\u7B97\u7684
             */</span>
            <span class="token keyword">while</span> top<span class="token number">.0</span> <span class="token operator">&lt;=</span> c<span class="token number">.0</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u53EA\u8981\u4E0D\u662F\u9012\u51CF\u6808,\u4E00\u76F4\u5F39\u51FA,\u5E76\u8BA1\u7B97</span>
                <span class="token keyword">let</span> <span class="token keyword">mut</span> yu <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> <span class="token keyword">mut</span> zhu <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                yu <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token keyword">as</span> <span class="token keyword">i32</span> <span class="token operator">-</span> top<span class="token number">.1</span> <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token operator">*</span> top<span class="token number">.0</span><span class="token punctuation">;</span>
                zhu <span class="token operator">=</span> top<span class="token number">.0</span> <span class="token operator">+</span> c<span class="token number">.3</span><span class="token punctuation">;</span>
                yu <span class="token operator">-=</span> zhu<span class="token punctuation">;</span>
                c<span class="token number">.2</span> <span class="token operator">=</span> yu <span class="token operator">+</span> top<span class="token number">.2</span><span class="token punctuation">;</span>
                c<span class="token number">.3</span> <span class="token operator">=</span> zhu <span class="token operator">+</span> top<span class="token number">.3</span><span class="token punctuation">;</span>
                stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> stack<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                    top <span class="token operator">=</span> <span class="token operator">*</span>stack<span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;push={:?}&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;stack={:?}&quot;</span><span class="token punctuation">,</span> stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*
        \u6808\u4E0A\u73B0\u5728\u4FDD\u5B58\u7684\u7531\u9AD8\u5230\u5E95\u7684\u67F1\u5B50,\u8FD9\u65F6\u5019\u8981\u8BA1\u7B97\u4ED6\u4EEC\u4E4B\u95F4\u53EF\u4EE5\u4FDD\u5B58\u7684\u96E8\u6C34\u6709\u591A\u5C11
        */</span>
        <span class="token keyword">while</span> stack<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">2</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> top <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> last <span class="token operator">=</span> <span class="token operator">*</span>stack<span class="token punctuation">.</span><span class="token function">last_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> <span class="token keyword">mut</span> yu <span class="token operator">=</span> top<span class="token number">.0</span> <span class="token operator">*</span> <span class="token punctuation">(</span>top<span class="token number">.1</span> <span class="token keyword">as</span> <span class="token keyword">i32</span> <span class="token operator">-</span> last<span class="token number">.1</span> <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> zhu <span class="token operator">=</span> top<span class="token number">.0</span> <span class="token operator">+</span> top<span class="token number">.3</span><span class="token punctuation">;</span>
            yu <span class="token operator">-=</span> zhu<span class="token punctuation">;</span>
            total <span class="token operator">+=</span> yu<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> stack<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
            total <span class="token operator">+=</span> stack<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        total
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>share<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">trap</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">trap</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">trap</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u770B\u4E86\u522B\u4EBA\u7684\u89E3\u6CD5,\u662F\u628A\u95EE\u9898\u590D\u6742\u5316\u4E86,\u8FC7\u6EE4\u4E860,\u6BCF\u6B21\u90FD\u662F\u8003\u8651\u5168\u90E8\u800C\u4E0D\u662F\u589E\u91CF,\u8BA9\u95EE\u9898\u590D\u6742\u5316\u4E86.</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,16),o=[e];function c(l,u,r,k,i,b){return a(),s("div",null,o)}var h=n(t,[["render",c]]);export{d as __pageData,h as default};
