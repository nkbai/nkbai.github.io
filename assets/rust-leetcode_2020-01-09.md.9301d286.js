import{_ as n,c as s,o as a,a as p}from"./app.1b76eb5d.js";const m='{"title":"476. \u6570\u5B57\u7684\u8865\u6570","description":"","frontmatter":{"title":"476. \u6570\u5B57\u7684\u8865\u6570","date":"2020-01-08T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-01-09)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-01-09"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2020-01-09.md"}',e={},t=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-01-09" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-01-09) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-01-09" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u6B63\u6574\u6570\uFF0C\u8F93\u51FA\u5B83\u7684\u8865\u6570\u3002\u8865\u6570\u662F\u5BF9\u8BE5\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u53D6\u53CD\u3002</p><p>\u6CE8\u610F:</p><p>\u7ED9\u5B9A\u7684\u6574\u6570\u4FDD\u8BC1\u572832\u4F4D\u5E26\u7B26\u53F7\u6574\u6570\u7684\u8303\u56F4\u5185\u3002 \u4F60\u53EF\u4EE5\u5047\u5B9A\u4E8C\u8FDB\u5236\u6570\u4E0D\u5305\u542B\u524D\u5BFC\u96F6\u4F4D\u3002 \u793A\u4F8B 1:</p><p>\u8F93\u5165: 5 \u8F93\u51FA: 2 \u89E3\u91CA: 5\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E3A101\uFF08\u6CA1\u6709\u524D\u5BFC\u96F6\u4F4D\uFF09\uFF0C\u5176\u8865\u6570\u4E3A010\u3002\u6240\u4EE5\u4F60\u9700\u8981\u8F93\u51FA2\u3002 \u793A\u4F8B 2:</p><p>\u8F93\u5165: 1 \u8F93\u51FA: 0 \u89E3\u91CA: 1\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u4E3A1\uFF08\u6CA1\u6709\u524D\u5BFC\u96F6\u4F4D\uFF09\uFF0C\u5176\u8865\u6570\u4E3A0\u3002\u6240\u4EE5\u4F60\u9700\u8981\u8F93\u51FA0\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u6709\u6CA1\u6709\u4E0D\u7528\u5FAA\u73AF\u7684\u601D\u8DEF\u5462?</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">find_complement</span><span class="token punctuation">(</span>num<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> zeros <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">leading_zeros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;zeros={}&quot;</span><span class="token punctuation">,</span> zeros<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> ones <span class="token operator">=</span> <span class="token number">32</span> <span class="token operator">-</span> zeros<span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> i <span class="token operator">&lt;</span> ones <span class="token punctuation">{</span>
            s <span class="token operator">|=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">;</span>
            i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> num <span class="token operator">=</span> <span class="token operator">!</span>num<span class="token punctuation">;</span>
        num <span class="token operator">&amp;=</span> s<span class="token punctuation">;</span>
        num
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>

    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">find_complement</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">find_complement</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">find_complement</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,15),o=[t];function c(l,r,u,i,k,d){return a(),s("div",null,o)}var h=n(e,[["render",c]]);export{m as __pageData,h as default};
