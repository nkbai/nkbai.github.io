import{_ as s,c as n,o as a,N as l}from"./chunks/framework.3a9190c5.js";const i=JSON.parse('{"title":"五个goland进行go开发的小技巧","description":"","frontmatter":{"title":"五个goland进行go开发的小技巧","date":"2019-05-09T00:59:35.138Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"other/五个goland进行go开发的小技巧.md"}'),p={name:"other/五个goland进行go开发的小技巧.md"},o=l(`<h1 id="五个goland进行go开发的小技巧" tabindex="-1">五个goland进行go开发的小技巧 <a class="header-anchor" href="#五个goland进行go开发的小技巧" aria-label="Permalink to &quot;五个goland进行go开发的小技巧&quot;">​</a></h1><p>本文译自<a href="https://medium.com/@keperry/5-tips-to-speed-up-golang-development-with-intellij-or-goland-6646110e9c5e" target="_blank" rel="noreferrer">5 Tips To Speed Up Golang Development With IntelliJ Or Goland</a> 确实很实用.</p><h2 id="_1-实现interface" tabindex="-1">1. 实现interface <a class="header-anchor" href="#_1-实现interface" aria-label="Permalink to &quot;1. 实现interface&quot;">​</a></h2><p>比如我想为下面的结构体实现共识interface</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyConensus</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>通过右键generate-&gt;implement methods-&gt;搜索engine 一键生成下面代码:</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyConensus</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	info </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Author</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">header </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">common</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Address</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">VerifyHeader</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain ChainReader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> header </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> seal </span><span style="color:#C792EA;">bool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">VerifyHeaders</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain ChainReader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> headers </span><span style="color:#89DDFF;">[]*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> seals </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">bool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(chan&lt;-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct{},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;-chan</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">VerifyUncles</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain ChainReader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> block </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Block</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">VerifySeal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain ChainReader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> header </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Prepare</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain ChainReader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> header </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Finalize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain ChainReader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> header </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> state </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">StateDB</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> txs </span><span style="color:#89DDFF;">[]*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Transaction</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	uncles </span><span style="color:#89DDFF;">[]*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> receipts </span><span style="color:#89DDFF;">[]*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Receipt</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Block</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Seal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain ChainReader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> block </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Block</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> results </span><span style="color:#89DDFF;">chan&lt;-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Block</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> stop </span><span style="color:#89DDFF;">&lt;-chan</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct{})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SealHash</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">header </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> common</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Hash </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CalcDifficulty</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain ChainReader</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> time </span><span style="color:#C792EA;">uint64</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> parent </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Header</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">big</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Int </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">APIs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain ChainReader</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">rpc</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">API </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">MyConensus</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Close</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">panic</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">implement me</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><p><img alt="" data-src="https://img2018.cnblogs.com/blog/124391/201905/124391-20190509085750087-456762519.gif" loading="lazy" class="lazy"></p><h2 id="提取接口" tabindex="-1">提取接口 <a class="header-anchor" href="#提取接口" aria-label="Permalink to &quot;提取接口&quot;">​</a></h2><p>面向接口编程,有时候我们需要针对已经实现的struct提取接口. 方法: struct-&gt;Refactor-&gt;Extract-&gt;interfac <img alt="" data-src="https://img2018.cnblogs.com/blog/124391/201905/124391-20190509085812217-674004844.gif" loading="lazy" class="lazy"></p><h2 id="_2-使用模板" tabindex="-1">2. 使用模板 <a class="header-anchor" href="#_2-使用模板" aria-label="Permalink to &quot;2. 使用模板&quot;">​</a></h2><h3 id="_3-1-forr-快速展开for-range" tabindex="-1">3.1 forr 快速展开for range <a class="header-anchor" href="#_3-1-forr-快速展开for-range" aria-label="Permalink to &quot;3.1 forr 快速展开for range&quot;">​</a></h3><p>forr 然后tab,就会自动展开</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">range</span><span style="color:#A6ACCD;"> collection </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img alt="" data-src="https://img2018.cnblogs.com/blog/124391/201905/124391-20190509085821223-1978977870.gif" loading="lazy" class="lazy"></p><h3 id="_3-2-err-错误处理" tabindex="-1">3.2 err 错误处理 <a class="header-anchor" href="#_3-2-err-错误处理" aria-label="Permalink to &quot;3.2 err 错误处理&quot;">​</a></h3><p>err 然后tab,自动展开如下: <img alt="" data-src="https://img2018.cnblogs.com/blog/124391/201905/124391-20190509085831846-521727195.gif" loading="lazy" class="lazy"></p><h3 id="_4-填充struct" tabindex="-1">4. 填充Struct <a class="header-anchor" href="#_4-填充struct" aria-label="Permalink to &quot;4. 填充Struct&quot;">​</a></h3><p>这个相对不是很实用, <img alt="" data-src="https://img2018.cnblogs.com/blog/124391/201905/124391-20190509085841121-997810444.gif" loading="lazy" class="lazy"></p><h3 id="_5-自动生成测试代码" tabindex="-1">5. 自动生成测试代码 <a class="header-anchor" href="#_5-自动生成测试代码" aria-label="Permalink to &quot;5. 自动生成测试代码&quot;">​</a></h3><p>这个非常使用,单元测试,我们专注于测试本身就ok了. 在文件任意位置-&gt;Genreate-&gt;Test for File-&gt; 自动生成该文件对应的测试文件 <img alt="" data-src="https://img2018.cnblogs.com/blog/124391/201905/124391-20190509085851547-53435913.gif" loading="lazy" class="lazy"></p>`,21),e=[o];function r(c,t,D,y,F,A){return a(),n("div",null,e)}const m=s(p,[["render",r]]);export{i as __pageData,m as default};
