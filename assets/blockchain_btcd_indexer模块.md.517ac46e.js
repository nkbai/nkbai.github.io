import{_ as s,c as a,o as n,N as e}from"./chunks/framework.3a9190c5.js";const D=JSON.parse('{"title":"indexer模块","description":"","frontmatter":{"title":"indexer模块","date":"2019-04-18T03:46:43.173Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/btcd/indexer模块.md"}'),l={name:"blockchain/btcd/indexer模块.md"},p=e(`<h1 id="blockchain-indexers-模块" tabindex="-1">blockchain/indexers 模块 <a class="header-anchor" href="#blockchain-indexers-模块" aria-label="Permalink to &quot;blockchain/indexers 模块&quot;">​</a></h1><p>该模块分为两个部分,一个是根据TxHash找Tx,另一个是根据地址找Tx. 主要是针对常用操作建立索引,加快信息查找.</p><h2 id="索引管理" tabindex="-1">索引管理 <a class="header-anchor" href="#索引管理" aria-label="Permalink to &quot;索引管理&quot;">​</a></h2><p>索引管理主要是为了提供统一的接口,让外部可以方便的管理地址索引和Tx的索引. 对外暴露接口</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// NewManager returns a new index manager with the provided indexes enabled.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The manager returned satisfies the blockchain.IndexManager interface and thus</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// cleanly plugs into the normal blockchain processing path.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">NewManager</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">db database</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DB</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> enabledIndexes </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">Indexer</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Manager</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Init initializes the enabled indexes.  This is called during chain</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// initialization and primarily consists of catching up all indexes to the</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// current best chain tip.  This is necessary since each index can be disabled</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// and re-enabled at any time and attempting to catch-up indexes at the same</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// time new blocks are being downloaded would lead to an overall longer time to</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// catch up due to the I/O contention.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// This is part of the blockchain.IndexManager interface.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Manager</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Init</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">chain </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">blockchain</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BlockChain</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ConnectBlock must be invoked when a block is extending the main chain.  It</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// keeps track of the state of each index it is managing, performs some sanity</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// checks, and invokes each indexer.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// This is part of the blockchain.IndexManager interface.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Manager</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ConnectBlock</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dbTx database</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> block </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Block</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> view </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">blockchain</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UtxoViewpoint</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// DisconnectBlock must be invoked when a block is being disconnected from the</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// end of the main chain.  It keeps track of the state of each index it is</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// managing, performs some sanity checks, and invokes each indexer to remove</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// the index entries associated with the block.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// This is part of the blockchain.IndexManager interface.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">Manager</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DisconnectBlock</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dbTx database</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> block </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Block</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> view </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">blockchain</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UtxoViewpoint</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="索引管理数据库" tabindex="-1">索引管理数据库 <a class="header-anchor" href="#索引管理数据库" aria-label="Permalink to &quot;索引管理数据库&quot;">​</a></h3><p>对应唯一的bucket idxtips 里面存着索引处理到哪一块了,有哪些索引,每个索引处理到第几块了等信息.</p><p>idxtips数据库中的信息</p><table><thead><tr><th>索引名</th><th>内容</th></tr></thead><tbody><tr><td>txHash索引( txbyhashidx)</td><td>最新 blockHash+blockHeight</td></tr><tr><td>通过地址查找Tx( txbyaddridx)</td><td>最新 blockHash+blockHeight</td></tr></tbody></table><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Indexer provides a generic interface for an indexer that is managed by an</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// index manager such as the Manager type provided by this package.</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Indexer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Key returns the key of the index as a byte slice.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Key</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">byte</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//这个就是给manager管理用的.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Name returns the human-readable name of the index.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Name</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//给人看的</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Create is invoked when the indexer manager determines the index needs</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// to be created for the first time.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Create</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dbTx database</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//初始化数据库</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// Init is invoked when the index manager is first initializing the</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// index.  This differs from the Create method in that it is called on</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// every load, including the case the index was just created. //初始化Indexer</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Init</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// ConnectBlock is invoked when the index manager is notified that a new</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// block has been connected to the main chain. 来了一个新块</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">ConnectBlock</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dbTx database</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> block </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Block</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> view </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">blockchain</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UtxoViewpoint</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// DisconnectBlock is invoked when the index manager is notified that a</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// block has been disconnected from the main chain. 发生了分叉, 移除一个块</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">DisconnectBlock</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dbTx database</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Tx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> block </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">btcutil</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Block</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> view </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">blockchain</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">UtxoViewpoint</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="txhash-找tx" tabindex="-1">TxHash 找Tx <a class="header-anchor" href="#txhash-找tx" aria-label="Permalink to &quot;TxHash 找Tx&quot;">​</a></h2><p>主要是处理ConnectBlock,每一个新块来以后,为相关的Tx建立索引. DisconnectBlock,发生分叉需要移除一个block的时候,这个block中的索引也都删掉.</p><h3 id="数据库" tabindex="-1">数据库 <a class="header-anchor" href="#数据库" aria-label="Permalink to &quot;数据库&quot;">​</a></h3><ol><li><p>bucket hashbyididx blockNumber-&gt;blockHash 这个Bucket中存的是块号到块hash</p></li><li><p>bucket idbyhashidx blockHash-&gt;blockNumber 从blockhash到块号的映射</p></li><li><p>bucket txbyhashidx TxHash-&gt;Tx索引 映射 Tx索引结构如下:</p></li></ol><table><thead><tr><th>blockNumber</th><th>Tx在该块内字节偏移</th><th>Tx长度</th></tr></thead><tbody><tr><td>4</td><td>4</td><td>4</td></tr><tr><td>这里说的偏移,指的是block序列化以后的偏移,Tx长度指的也是Tx序列化以后的字节长度</td><td></td><td></td></tr></tbody></table><h2 id="addr找tx" tabindex="-1">addr找Tx <a class="header-anchor" href="#addr找tx" aria-label="Permalink to &quot;addr找Tx&quot;">​</a></h2><p>主要是处理地址到交易的映射,这里说的Tx实际上是Tx索引,也就是上一节中说的blockNumber+TxStart+TxLength 因为addr可能会对应成千上万的交易,所以这部分索引的管理与维护是比较考验技巧的. 他用的是<strong>LSM Tree</strong>,需要以后研究一下.</p><h3 id="数据库-1" tabindex="-1">数据库 <a class="header-anchor" href="#数据库-1" aria-label="Permalink to &quot;数据库&quot;">​</a></h3><p>bucket txbyaddridx</p><p>可以认为这个数据库中存的是一个地址关联的所有交易的集合.实际上就是把Tx按照地址进行分组整理. [addr]--&gt;[tx,tx,...] 并且tx是有序的,按照发生时间(也就是block number)进行了排序.</p><p>这里的<strong>存储思路需要好好研究一下</strong></p><h2 id="cfindex" tabindex="-1">cfIndex <a class="header-anchor" href="#cfindex" aria-label="Permalink to &quot;cfIndex&quot;">​</a></h2><p>// Committed filters come in one flavor currently: basic. They are generated // and dropped in pairs, and both are indexed by a block&#39;s hash. Besides // holding different content, they also live in different buckets. 这里存储的是针对某个block建立的类似bloom过滤器一样的索引. 只不过gcs索引数据更小. 这里的索引针对的是block中消费的pkscript以及生成的pkscript</p><h3 id="_1-bucket" tabindex="-1">1. bucket <a class="header-anchor" href="#_1-bucket" aria-label="Permalink to &quot;1. bucket&quot;">​</a></h3><p>总bucket是cfIndexParentBucketKey 下面还有三个子bucket,分别是</p><h4 id="cf0byhashidx-cfindexkeys" tabindex="-1">cf0byhashidx cfIndexKeys <a class="header-anchor" href="#cf0byhashidx-cfindexkeys" aria-label="Permalink to &quot;cf0byhashidx cfIndexKeys&quot;">​</a></h4><pre><code>// cfIndexKeys is an array of db bucket names used to house indexes of
// block hashes to cfilters.
</code></pre><p>blockhash--&gt;所有相关pkscript的索引</p><h4 id="cf0headerbyhashidx-cfheaderkeys" tabindex="-1">cf0headerbyhashidx cfHeaderKeys <a class="header-anchor" href="#cf0headerbyhashidx-cfheaderkeys" aria-label="Permalink to &quot;cf0headerbyhashidx cfHeaderKeys&quot;">​</a></h4><pre><code>// cfHeaderKeys is an array of db bucket names used to house indexes of
// block hashes to cf headers.
</code></pre><p>blockhash--&gt;hash(cf0hashbyhashidx中的hash,上一块header的hash)</p><h4 id="cf0hashbyhashidx-cfhashkeys" tabindex="-1">cf0hashbyhashidx cfHashKeys <a class="header-anchor" href="#cf0hashbyhashidx-cfhashkeys" aria-label="Permalink to &quot;cf0hashbyhashidx cfHashKeys&quot;">​</a></h4><pre><code>// cfHashKeys is an array of db bucket names used to house indexes of
// block hashes to cf hashes.
</code></pre><p>blockhash--&gt;所有相关pkscript的索引的hash值</p>`,34),o=[p];function t(c,r,i,y,d,h){return n(),a("div",null,o)}const A=s(l,[["render",t]]);export{D as __pageData,A as default};
