import{_ as n,c as s,o as a,a as p}from"./app.3dd4ae37.js";const d='{"title":"494. \u76EE\u6807\u548C","description":"","frontmatter":{"title":"494. \u76EE\u6807\u548C","date":"2020-02-12T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-02-13)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-02-13"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2020-02-13.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-02-13" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-02-13) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-02-13" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u975E\u8D1F\u6574\u6570\u6570\u7EC4\uFF0Ca1, a2, ..., an, \u548C\u4E00\u4E2A\u76EE\u6807\u6570\uFF0CS\u3002\u73B0\u5728\u4F60\u6709\u4E24\u4E2A\u7B26\u53F7\xA0+\xA0\u548C\xA0-\u3002\u5BF9\u4E8E\u6570\u7EC4\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A\u6574\u6570\uFF0C\u4F60\u90FD\u53EF\u4EE5\u4ECE\xA0+\xA0\u6216\xA0-\u4E2D\u9009\u62E9\u4E00\u4E2A\u7B26\u53F7\u6DFB\u52A0\u5728\u524D\u9762\u3002</p><p>\u8FD4\u56DE\u53EF\u4EE5\u4F7F\u6700\u7EC8\u6570\u7EC4\u548C\u4E3A\u76EE\u6807\u6570 S \u7684\u6240\u6709\u6DFB\u52A0\u7B26\u53F7\u7684\u65B9\u6CD5\u6570\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: nums: [1, 1, 1, 1, 1], S: 3 \u8F93\u51FA: 5 \u89E3\u91CA:</p><p>-1+1+1+1+1 = 3 +1-1+1+1+1 = 3 +1+1-1+1+1 = 3 +1+1+1-1+1 = 3 +1+1+1+1-1 = 3</p><p>\u4E00\u5171\u67095\u79CD\u65B9\u6CD5\u8BA9\u6700\u7EC8\u76EE\u6807\u548C\u4E3A3\u3002 \u6CE8\u610F:</p><p>\u6570\u7EC4\u975E\u7A7A\uFF0C\u4E14\u957F\u5EA6\u4E0D\u4F1A\u8D85\u8FC720\u3002 \u521D\u59CB\u7684\u6570\u7EC4\u7684\u548C\u4E0D\u4F1A\u8D85\u8FC71000\u3002 \u4FDD\u8BC1\u8FD4\u56DE\u7684\u6700\u7EC8\u7ED3\u679C\u80FD\u88AB32\u4F4D\u6574\u6570\u5B58\u4E0B\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/target-sum" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/target-sum</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u601D\u8DEF \u5047\u8BBE\u957F\u5EA60.\u3002n\u7684\u5B50\u6570\u7EC4\u7684\uFF0C\u6240\u6709\u53EF\u80FD\u7684\u7EC4\u5408\u4EA7\u751F\u7684\u548C\u4FDD\u5B58\u4E00\u4E2Amap \u5176\u4E2Dkey\u662F\u548C\uFF0Cvalue\u662F\u51FA\u73B0\u7684\u6B21\u6570\u3002 \u90A3\u4E480..n+1\u540E\uFF0C\u8FD9\u4E2Amap\u7684\u6269\u5145\u5C31\u662F\uFF0C\u5148\u7528a[n+1]\u4E3A\u6B63\uFF0C\u66F4\u65B0\u4E00\u8FB9\u8FD9\u4E2Amap \u7136\u540E\u4F7F\u7528-a[n+1]\u518D\u6B21\u66F4\u65B0\uFF0C\u5982\u679C\u6CA1\u6709\u78B0\u5230\u91CD\u590D\u7684key\uFF0C\u5219\u63D2\u5165\uFF0C\u78B0\u5230\u91CD\u590D\u7684\uFF0C\u5219\u662F \u539F\u6765\u7684\u57FA\u7840\u4E0A\u52A01 \u6240\u4EE5\u8FD9\u662F\u4E00\u4E2A\u52A8\u6001\u89C4\u5212\u7684\u95EE\u9898\uFF0C\u5E76\u4E14\u4E0B\u4E00\u4E2A\u72B6\u6001\u53EA\u4E0E\u4E0A\u4E00\u4E2A\u6709\u5173\uFF0C\u4E0E\u4E0A\u4E0A\u4E2A\u65E0\u5173\u3002</p><p>\u627E\u4E2A\u4F8B\u5B501\uFF0C2\uFF0C3\uFF0C5 \u7B2C\u4E00\u6B65\uFF1A 1\uFF0C -1 \u7B2C\u4E8C\u90E8\uFF1A 3\uFF0C1\uFF0C-1\uFF0C-3 \u7B2C\u4E09\u6B65\uFF1A 6\uFF0C4\uFF0C2\uFF0C0\uFF0C0\uFF0C-2\uFF0C-4\uFF0C-6 \u7B2C\u56DB\u6B65\uFF1A 11\uFF0C9\uFF0C7\uFF0C5\uFF0C5\uFF0C3\uFF0C1\uFF0C-1\uFF0C1\uFF0C-1\uFF0C-3\uFF0C-5\uFF0C-5\uFF0C-7\uFF0C-9\uFF0C-11 \u5982\u679Cs=5\uFF0C\u6B21\u6570\u662F2 s=-5 \u4E5F\u662F2 s=1\uFF0C2 s=11,1 \u6839\u636E\u8FD9\u4E2A\u4F8B\u5B50\u53EF\u4EE5\u53D1\u73B0\u89C4\u5F8B\uFF1A \u7EC4\u5408\u7684\u548C\u4E00\u5B9A\u662F\u5173\u4E8E0\u5BF9\u79F0\u7684\uFF0C\u8FD9\u4E2A\u5176\u5B9E\u5F88\u5BB9\u6613\u60F3\u660E\u767D \u6211\u4EEC\u53EA\u9700\u8981\u8BB0\u5F55\u6B63\u6570\u5373\u53EF\u3002</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">find_target_sum_ways</span><span class="token punctuation">(</span>nums<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> max_sum <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> s <span class="token operator">&gt;</span> max_sum <span class="token keyword">as</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> dp <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">2</span> <span class="token operator">*</span> max_sum <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        dp<span class="token punctuation">[</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">usize</span> <span class="token operator">+</span> max_sum<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//\u521D\u59CB\u5316\u7B2C\u4E00\u4E2A\u6570\uFF0C\u7684\u4E24\u79CD\u60C5\u51B5\u5C31\u662F+\uFF0C\u8D1F\u6570\u60C5\u51B5\u4E0D\u8003\u8651\uFF0C\u6839\u636E\u5BF9\u79F0\u5373\u53EF</span>
        dp<span class="token punctuation">[</span>max_sum <span class="token operator">-</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>max_sum <span class="token operator">-</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//\u8003\u8651\u7B2C\u4E00\u4E2A\u6570\u5C31\u662F0\u7684\u60C5\u51B5</span>

        <span class="token comment">//\u9898\u76EE\u4E2D\u660E\u786E\u8BF4\u4E86\uFF0C\u548C\u4E0D\u4F1A\u8D85\u8FC71000</span>
        <span class="token comment">//\u5047\u8BBE0.\u3002i\u53EF\u4EE5\u51D1\u51FA\u6765\u7684\u548C\u4E3A13\uFF081\uFF09\uFF0C25\uFF082\uFF09\uFF0C100\uFF082\uFF09\uFF0C300\uFF081\uFF09</span>
        <span class="token comment">//\u90A3\u4E48\u4FE1\u8D56\u7684i+1,\u76F4\u63A5\u5728\u4E0A\u9762\u8BA1\u7B97\u5373\u53EF</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">..</span>nums<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> n <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> dp2 <span class="token operator">=</span> dp<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u52A0\u7684\u60C5\u51B5</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token number">2</span> <span class="token operator">*</span> max_sum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//\u9898\u4E2D\u660E\u786E\u8BF4\u4E86\u548C\u4E0D\u4F1A\u8D85\u8FC71000</span>
                <span class="token keyword">let</span> t <span class="token operator">=</span> n <span class="token operator">+</span> j<span class="token punctuation">;</span>
                dp<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> n <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//\u8003\u8651\u5230n\u4E3A0\u8FD9\u79CD\u7279\u6B8A\u60C5\u51B5</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token number">2</span> <span class="token operator">*</span> max_sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> dp2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//\u8003\u8651\u51CF\u7684\u60C5\u51B5</span>
                <span class="token keyword">let</span> t <span class="token operator">=</span> j <span class="token operator">-</span> n<span class="token punctuation">;</span>
                dp<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">+=</span> dp2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;n={}======================&quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
            dp<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">for_each</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>item<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token operator">*</span>item<span class="token number">.1</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}=&gt;{}&quot;</span><span class="token punctuation">,</span> item<span class="token number">.0</span><span class="token punctuation">,</span> item<span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        dp<span class="token punctuation">[</span><span class="token punctuation">(</span>s <span class="token operator">+</span> max_sum <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test_reverse_list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">find_target_sum_ways</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">find_target_sum_ways</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">find_target_sum_ways</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">find_target_sum_ways</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u5728\u8FB9\u754C\u4E0A\u5361\u4E86\u597D\u51E0\u6B21\uFF0C\u4E00\u4E2A\u662F\u548C\u53EF\u80FD\u662F1000\uFF0C\u53E6\u5916\u4E00\u4E2A\u662F\u5143\u7D20\u4F1A\u662F0</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,20),o=[e];function c(l,u,r,k,i,m){return a(),s("div",null,o)}var y=n(t,[["render",c]]);export{d as __pageData,y as default};
