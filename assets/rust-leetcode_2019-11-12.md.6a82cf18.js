import{_ as n,c as s,o as a,a as p}from"./app.e7435feb.js";const d='{"title":"1130. \u53F6\u503C\u7684\u6700\u5C0F\u4EE3\u4EF7\u751F\u6210\u6811","description":"","frontmatter":{"title":"1130. \u53F6\u503C\u7684\u6700\u5C0F\u4EE3\u4EF7\u751F\u6210\u6811","date":"2019-11-11T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-11-12)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-11-12"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2019-11-12.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-11-12" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2019-11-12) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2019-11-12" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u7ED9\u4F60\u4E00\u4E2A\u6B63\u6574\u6570\u6570\u7EC4\xA0arr\uFF0C\u8003\u8651\u6240\u6709\u6EE1\u8DB3\u4EE5\u4E0B\u6761\u4EF6\u7684\u4E8C\u53C9\u6811\uFF1A</p><p>\u6BCF\u4E2A\u8282\u70B9\u90FD\u6709 0 \u4E2A\u6216\u662F 2 \u4E2A\u5B50\u8282\u70B9\u3002 \u6570\u7EC4\xA0arr\xA0\u4E2D\u7684\u503C\u4E0E\u6811\u7684\u4E2D\u5E8F\u904D\u5386\u4E2D\u6BCF\u4E2A\u53F6\u8282\u70B9\u7684\u503C\u4E00\u4E00\u5BF9\u5E94\u3002\uFF08\u77E5\u8BC6\u56DE\u987E\uFF1A\u5982\u679C\u4E00\u4E2A\u8282\u70B9\u6709 0 \u4E2A\u5B50\u8282\u70B9\uFF0C\u90A3\u4E48\u8BE5\u8282\u70B9\u4E3A\u53F6\u8282\u70B9\u3002\uFF09 \u6BCF\u4E2A\u975E\u53F6\u8282\u70B9\u7684\u503C\u7B49\u4E8E\u5176\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u4E2D\u53F6\u8282\u70B9\u7684\u6700\u5927\u503C\u7684\u4E58\u79EF\u3002 \u5728\u6240\u6709\u8FD9\u6837\u7684\u4E8C\u53C9\u6811\u4E2D\uFF0C\u8FD4\u56DE\u6BCF\u4E2A\u975E\u53F6\u8282\u70B9\u7684\u503C\u7684\u6700\u5C0F\u53EF\u80FD\u603B\u548C\u3002\u8FD9\u4E2A\u548C\u7684\u503C\u662F\u4E00\u4E2A\xA032 \u4F4D\u6574\u6570\u3002</p><p>\u793A\u4F8B\uFF1A</p><p>\u8F93\u5165\uFF1Aarr = [6,2,4] \u8F93\u51FA\uFF1A32 \u89E3\u91CA\uFF1A \u6709\u4E24\u79CD\u53EF\u80FD\u7684\u6811\uFF0C\u7B2C\u4E00\u79CD\u7684\u975E\u53F6\u8282\u70B9\u7684\u603B\u548C\u4E3A 36\uFF0C\u7B2C\u4E8C\u79CD\u975E\u53F6\u8282\u70B9\u7684\u603B\u548C\u4E3A 32\u3002</p><pre><code>24            24
</code></pre><p>/ \\ / <br> 12 4 6 8 / \\ / <br> 6 2 2 4</p><p>\u63D0\u793A\uFF1A</p><p>2 &lt;= arr.length &lt;= 40 1 &lt;= arr[i] &lt;= 15 \u7B54\u6848\u4FDD\u8BC1\u662F\u4E00\u4E2A 32 \u4F4D\u5E26\u7B26\u53F7\u6574\u6570\uFF0C\u5373\u5C0F\u4E8E\xA02^31\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/minimum-cost-tree-from-leaf-values" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/minimum-cost-tree-from-leaf-values</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u8981\u8BA9\u5927\u7684\u6570\u5728\u6811\u4E2D\u7684depth\u5C3D\u53EF\u80FD\u7684\u5C0F,\u8FD9\u6837\u603B\u548C\u4E2D\u4E0E\u4ED6\u76F8\u4E58\u7684\u6B21\u6570\u4E5F\u5C31\u4F1A\u5C11 \u91C7\u7528\u5355\u8C03\u9012\u51CF\u6808\u6765\u5B9E\u73B0. \u5355\u8C03\u6808\u6027\u8D28\uFF1A</p><p>1\u3001\u82E5\u662F\u5355\u8C03\u9012\u589E\u6808\uFF0C\u5219\u4ECE\u6808\u9876\u5230\u6808\u5E95\u7684\u5143\u7D20\u662F\u4E25\u683C\u9012\u589E\u7684\u3002\u82E5\u662F\u5355\u8C03\u9012\u51CF\u6808\uFF0C\u5219\u4ECE\u6808\u9876\u5230\u6808\u5E95\u7684\u5143\u7D20\u662F\u4E25\u683C\u9012\u51CF\u7684\u3002</p><p>2\u3001\u8D8A\u9760\u8FD1\u6808\u9876\u7684\u5143\u7D20\u8D8A\u540E\u8FDB\u6808\u3002\uFF08\u663E\u800C\u6613\u89C1\uFF09</p><p>\u56E0\u4E3A\u9898\u76EE\u4E2D\u8BF4\u7684\u662F\u6570\u7EC4\u4E2D\u7684\u6570\u90FD\u662Fdfs\u7684\u53F6\u8282\u70B9,\u90A3\u4E48\u610F\u5473\u7740\u6570\u7EC4\u4E2D\u76F8\u90BB\u7684\u4E24\u4E2A\u6570\u5728\u6811\u4E2D\u4E5F\u662F\u76F8\u90BB\u7684,\u8FD9\u662F\u524D\u63D0. \u65F6\u95F4\u590D\u6742\u5EA6\u662FO(N)\u7A7A\u95F4\u590D\u6742\u5EA6\u4E5F\u662FO(N)</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span><span class="token punctuation">;</span>

<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">mct_from_leaf_values</span><span class="token punctuation">(</span>arr<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token comment">/*
        \u4F7F\u7528\u5355\u8C03\u9012\u51CF\u6808,\u5982\u679C\u78B0\u5230\u9006\u5E8F,\u5C31\u5F39\u51FA,\u4F5C\u4E3A\u6811\u7684\u4E24\u4E2A\u8282\u70B9,\u56E0\u4E3A\u5982\u679C\u4E0D\u662F\u4ED6\u4EEC\u4E24\u4E2A\u76F8\u4E58,
        \u90A3\u4E48\u5C31\u4F1A\u9020\u6210\u5DE6\u8FB9\u5927\u7684\u6570\u4E58\u4E24\u6B21,\u800C\u4E0D\u662F\u5F85\u5165\u6808\u7684\u8FD9\u4E2A\u6570\u4E58\u4E24\u6B21,\u663E\u7136\u4E0D\u5408\u7406.
        \u6BD4\u5982 [6,2,4] ,\u78B0\u52304\u7684\u65F6\u5019,\u5219\u662F\u5F39\u51FA2,\u7136\u540E2,4\u7EC4\u6210\u4E00\u4E2A\u8282\u70B9
        \u5982\u679C\u662F[6,2,9],\u78B0\u52309\u7684\u65F6\u5019\u5219\u662F6,2\u90FD\u5F39\u51FA,6,2\u7EC4\u6210\u4E00\u9897\u5B50\u6811,\u7136\u540E9,6\u5165\u6808
        */</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> stack <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> arr <span class="token operator">=</span> arr<span class="token punctuation">;</span>
        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//arr\u4E2D\u81F3\u5C11\u5305\u542B\u4E86\u4E24\u4E2A\u6570</span>
        <span class="token keyword">while</span> arr<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> c <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token operator">*</span>stack<span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;must have one&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> c <span class="token punctuation">{</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">//\u6EE1\u8DB3\u5355\u8C03\u9012\u51CF\u6808</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">let</span> <span class="token keyword">mut</span> stack2 <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">while</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span> <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token operator">*</span>c2 <span class="token operator">&lt;</span> c <span class="token punctuation">{</span>
                    <span class="token comment">//stack\u4E0D\u6EE1\u8DB3\u9012\u51CF\u6808\u89C4\u5219,\u5F39\u51FA\u5230stack2,stack2\u662F\u4E00\u4E2A\u5355\u8C03\u9012\u589E\u6808</span>
                    stack2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u6240\u6709\u7684\u5C0F\u4E8Ec\u7684\u81EA\u884C\u7ED3\u7B97</span>
            <span class="token keyword">while</span> stack2<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">2</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> top <span class="token operator">=</span> stack2<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> top2 <span class="token operator">=</span> <span class="token operator">*</span>stack2<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;must have first&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;result={},top={},top2={}&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> top<span class="token punctuation">,</span> top2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                result <span class="token operator">+=</span> top <span class="token operator">*</span> top2<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//c\u8981\u548C\u5F39\u51FA\u90E8\u5206\u6700\u5927\u7684\u8BA1\u7B97</span>
            result <span class="token operator">+=</span> c <span class="token operator">*</span> <span class="token operator">*</span>stack2<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;must have at least one number&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span>
                <span class="token string">&quot;result={},top={},top2={}&quot;</span><span class="token punctuation">,</span>
                result<span class="token punctuation">,</span>
                c<span class="token punctuation">,</span>
                stack2<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">while</span> stack<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">2</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> top <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;must have 2 numbers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> top2 <span class="token operator">=</span> <span class="token operator">*</span>stack<span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;must have last&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;result={},top={},top2={}&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> top<span class="token punctuation">,</span> top2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            result <span class="token operator">+=</span> top <span class="token operator">*</span> top2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        result
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">tests</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token module-declaration namespace"><span class="token punctuation">::</span>share<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">mct_from_leaf_values</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">mct_from_leaf_values</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token number">20</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">mct_from_leaf_values</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token number">20</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>
            <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">mct_from_leaf_values</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">13</span> <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">15</span> <span class="token operator">*</span> <span class="token number">13</span> <span class="token operator">+</span> <span class="token number">15</span> <span class="token operator">*</span> <span class="token number">15</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>get \u65B0\u6280\u80FD \u5355\u8C03\u6808</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,23),o=[e];function c(l,u,r,k,i,b){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
