import{_ as p,c as t,o as e,a,d as n,e as s}from"./app.eccc2abf.js";const h='{"title":"8.libra\u7684mempool\u6A21\u5757\u89E3\u8BFB-3","description":"","frontmatter":{"title":"8.libra\u7684mempool\u6A21\u5757\u89E3\u8BFB-3","date":"2019-07-04T03:00:34.000Z","draft":false,"tags":["rust","blockchain","libra"],"series":["libra"],"categories":["\u6280\u672F\u76F8\u5173"]},"headers":[{"level":2,"title":"1. \u542F\u52A8\u8FC7\u7A0B","slug":"_1-\u542F\u52A8\u8FC7\u7A0B"},{"level":3,"title":"1.1 startsharedmempool","slug":"_1-1-start-shared-mempool"},{"level":2,"title":"2. SharedMempool\u4E2D\u7684\u5404\u4E2A\u5B50\u4EFB\u52A1","slug":"_2-sharedmempool\u4E2D\u7684\u5404\u4E2A\u5B50\u4EFB\u52A1"},{"level":3,"title":"2.1 \u63A5\u53D7\u6765\u81EA\u5E95\u5C42Network\u6A21\u5757\u7684\u4FE1\u606F\u63A8\u9001","slug":"_2-1-\u63A5\u53D7\u6765\u81EA\u5E95\u5C42network\u6A21\u5757\u7684\u4FE1\u606F\u63A8\u9001"},{"level":3,"title":"2.2 \u5411\u5916\u5E7F\u64AD\u6765\u81EAAC\u7684Tx","slug":"_2-2-\u5411\u5916\u5E7F\u64AD\u6765\u81EAac\u7684tx"},{"level":3,"title":"2.3 gc_task \u8FC7\u671F\u4EA4\u6613\u56DE\u6536\u673A\u5236","slug":"_2-3-gc-task-\u8FC7\u671F\u4EA4\u6613\u56DE\u6536\u673A\u5236"},{"level":2,"title":"3. mempool\u4E4B\u95F4\u7684\u540C\u6B65","slug":"_3-mempool\u4E4B\u95F4\u7684\u540C\u6B65"},{"level":3,"title":"3.1 \u53D1\u73B0\u8282\u70B9\u4E4B\u95F4\u7684\u94FE\u63A5\u65B9\u5F0F","slug":"_3-1-\u53D1\u73B0\u8282\u70B9\u4E4B\u95F4\u7684\u94FE\u63A5\u65B9\u5F0F"},{"level":3,"title":"3.2 \u5411\u6307\u5B9APeer\u53D1\u9001\u4E8B\u4EF6","slug":"_3-2-\u5411\u6307\u5B9Apeer\u53D1\u9001\u4E8B\u4EF6"},{"level":3,"title":"3.3 \u63A5\u6536Peer\u5E7F\u64AD\u51FA\u6765\u7684Tx","slug":"_3-3-\u63A5\u6536peer\u5E7F\u64AD\u51FA\u6765\u7684tx"},{"level":3,"title":"3.3 \u4E00\u4E2A\u57FA\u672C\u6D4B\u8BD5case","slug":"_3-3-\u4E00\u4E2A\u57FA\u672C\u6D4B\u8BD5case"},{"level":2,"title":"4. \u7ED3\u675F\u8BED","slug":"_4-\u7ED3\u675F\u8BED"}],"relativePath":"blockchain/libra/8.libria_mempool_3.md"}',o={},c=a(`<ul><li><a href="#1-%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B"> 1. \u542F\u52A8\u8FC7\u7A0B</a><ul><li><a href="#11-start_shared_mempool"> 1.1 start_shared_mempool</a></li></ul></li><li><a href="#2-sharedmempool%E4%B8%AD%E7%9A%84%E5%90%84%E4%B8%AA%E5%AD%90%E4%BB%BB%E5%8A%A1"> 2. SharedMempool\u4E2D\u7684\u5404\u4E2A\u5B50\u4EFB\u52A1</a><ul><li><a href="#21-%E6%8E%A5%E5%8F%97%E6%9D%A5%E8%87%AA%E5%BA%95%E5%B1%82network%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BF%A1%E6%81%AF%E6%8E%A8%E9%80%81"> 2.1 \u63A5\u53D7\u6765\u81EA\u5E95\u5C42Network\u6A21\u5757\u7684\u4FE1\u606F\u63A8\u9001</a><ul><li><a href="#211-process_incoming_transactions"> 2.1.1 process_incoming_transactions</a></li></ul></li><li><a href="#22-%E5%90%91%E5%A4%96%E5%B9%BF%E6%92%AD%E6%9D%A5%E8%87%AAac%E7%9A%84tx"> 2.2 \u5411\u5916\u5E7F\u64AD\u6765\u81EAAC\u7684Tx</a><ul><li><a href="#221-%E5%90%91%E5%A4%96%E5%B9%BF%E6%92%ADtx"> 2.2.1 \u5411\u5916\u5E7F\u64ADTx</a></li></ul></li><li><a href="#23-gc_task-%E8%BF%87%E6%9C%9F%E4%BA%A4%E6%98%93%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6"> 2.3 gc_task \u8FC7\u671F\u4EA4\u6613\u56DE\u6536\u673A\u5236</a></li></ul></li><li><a href="#3-mempool%E4%B9%8B%E9%97%B4%E7%9A%84%E5%90%8C%E6%AD%A5"> 3. mempool\u4E4B\u95F4\u7684\u540C\u6B65</a><ul><li><a href="#31-%E5%8F%91%E7%8E%B0%E8%8A%82%E7%82%B9%E4%B9%8B%E9%97%B4%E7%9A%84%E9%93%BE%E6%8E%A5%E6%96%B9%E5%BC%8F"> 3.1 \u53D1\u73B0\u8282\u70B9\u4E4B\u95F4\u7684\u94FE\u63A5\u65B9\u5F0F</a></li><li><a href="#32-%E5%90%91%E6%8C%87%E5%AE%9Apeer%E5%8F%91%E9%80%81%E4%BA%8B%E4%BB%B6"> 3.2 \u5411\u6307\u5B9APeer\u53D1\u9001\u4E8B\u4EF6</a></li><li><a href="#33-%E6%8E%A5%E6%94%B6peer%E5%B9%BF%E6%92%AD%E5%87%BA%E6%9D%A5%E7%9A%84tx"> 3.3 \u63A5\u6536Peer\u5E7F\u64AD\u51FA\u6765\u7684Tx</a></li><li><a href="#33-%E4%B8%80%E4%B8%AA%E5%9F%BA%E6%9C%AC%E6%B5%8B%E8%AF%95case"> 3.3 \u4E00\u4E2A\u57FA\u672C\u6D4B\u8BD5case</a></li></ul></li><li><a href="#4-%E7%BB%93%E6%9D%9F%E8%AF%AD"> 4. \u7ED3\u675F\u8BED</a></li></ul><p>\u8FD9\u90E8\u5206\u6211\u4E3B\u8981\u7814\u7A76mempool\u4E2D\u7684\u8282\u70B9\u95F4Tx\u540C\u6B65. \u5173\u952E\u4EE3\u7801\u90FD\u4F4D\u4E8E<code>shared_mempool.rs</code>\u4E2D.</p><h2 id="_1-\u542F\u52A8\u8FC7\u7A0B" tabindex="-1">1. \u542F\u52A8\u8FC7\u7A0B <a class="header-anchor" href="#_1-\u542F\u52A8\u8FC7\u7A0B" aria-hidden="true">#</a></h2><p>\u5148\u4ECEmempool\u7684\u542F\u52A8\u8FC7\u7A0B\u8BF4\u8D77,\u8FD9\u91CC\u53EF\u4EE5\u628A\u524D\u9762\u4E24\u90E8\u5206\u5185\u5BB9\u4E32\u8054\u8D77\u6765. \u542F\u52A8\u4EE3\u7801\u4F4D\u4E8E<code>runtime.rs</code>\u4E2D,</p><div class="language-rust line-numbers-mode"><pre><code><span class="token comment">/// Handle for Mempool Runtime</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">MempoolRuntime</span> <span class="token punctuation">{</span> 
    <span class="token comment">/// gRPC server to serve request from AC and Consensus</span>
    <span class="token keyword">pub</span> grpc_server<span class="token punctuation">:</span> <span class="token class-name">ServerHandle</span><span class="token punctuation">,</span> <span class="token comment">//\u8FD9\u4E2A\u662F\u5BF9\u5916\u63D0\u4F9Bgrpc\u670D\u52A1\u63A5\u53E3</span>
    <span class="token comment">/// separate shared mempool runtime</span>
    <span class="token keyword">pub</span> shared_mempool<span class="token punctuation">:</span> <span class="token class-name">Runtime</span><span class="token punctuation">,</span> <span class="token comment">//\u8FD9\u662F\u56E0\u4E3A\u5185\u90E8\u4F7F\u7528\u4E86tokio\u7684\u5F02\u6B65\u7F16\u7A0B\u6846\u67B6.</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">MempoolRuntime</span> <span class="token punctuation">{</span>
    <span class="token comment">/// setup Mempool runtime</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">bootstrap</span><span class="token punctuation">(</span>
        config<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">NodeConfig</span><span class="token punctuation">,</span>
        network_sender<span class="token punctuation">:</span> <span class="token class-name">MempoolNetworkSender</span><span class="token punctuation">,</span>
        network_events<span class="token punctuation">:</span> <span class="token class-name">MempoolNetworkEvents</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u8BBF\u95EE\u662F\u52A0\u9501\u7684</span>
        <span class="token comment">//\u8FD9\u4E2Amempool\u5C31\u662F\u524D\u4E24\u90E8\u5206\u6211\u4EEC\u91CD\u70B9\u8BA8\u8BBA\u7684\u5185\u90E8\u7F13\u51B2\u6C60\u7BA1\u7406.</span>
        <span class="token keyword">let</span> mempool <span class="token operator">=</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Mutex</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">CoreMempool</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// setup grpc server</span>
        <span class="token keyword">let</span> env <span class="token operator">=</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>
            <span class="token class-name">EnvBuilder</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">name_prefix</span><span class="token punctuation">(</span><span class="token string">&quot;grpc-mempool-&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">cq_count</span><span class="token punctuation">(</span><span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token namespace">grpcio_sys<span class="token punctuation">::</span></span><span class="token function">gpr_cpu_num_cores</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">usize</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token class-name">MempoolService</span> <span class="token punctuation">{</span>
            core_mempool<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mempool<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5BF9\u5916\u63D0\u4F9Bgrpc\u670D\u52A1\u7684\u63A5\u53E3,\u662F\u5BF9\u81EA\u52A8\u751F\u6210\u7684proto\u4E2D\u63CF\u8FF0\u7684serice\u7684\u5B9E\u73B0</span>
        <span class="token keyword">let</span> service <span class="token operator">=</span> <span class="token namespace">mempool_grpc<span class="token punctuation">::</span></span><span class="token function">create_mempool</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> grpc_server <span class="token operator">=</span> <span class="token punctuation">::</span><span class="token namespace">grpcio<span class="token punctuation">::</span></span><span class="token class-name">ServerBuilder</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">register_service</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>
                config<span class="token punctuation">.</span>mempool<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                config<span class="token punctuation">.</span>mempool<span class="token punctuation">.</span>mempool_service_port<span class="token punctuation">,</span>
            <span class="token punctuation">)</span> <span class="token comment">//\u76D1\u542C\u7684\u7AEF\u53E3\u548Cip</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;[mempool] unable to create grpc server&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// mempool\u8981\u8BBF\u95EEDB,\u6CE8\u610F\u4E5F\u662F\u901A\u8FC7grpc\u63A5\u53E3\u8FDB\u884C\u8BBF\u95EE,\u6CA1\u6709\u76F4\u63A5\u8BBF\u95EEDB</span>
        <span class="token keyword">let</span> storage_client<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">StorageRead</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">StorageReadServiceClient</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>
            <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">EnvBuilder</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name_prefix</span><span class="token punctuation">(</span><span class="token string">&quot;grpc-mem-sto-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
            config<span class="token punctuation">.</span>storage<span class="token punctuation">.</span>port<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u9A8C\u8BC1Tx\u5408\u6CD5\u6027\u7684\u5DE5\u5177,</span>
        <span class="token keyword">let</span> vm_validator <span class="token operator">=</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">VMValidator</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>config<span class="token punctuation">,</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>storage_client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8FD9\u662F\u6211\u4EEC\u8FD9\u7BC7\u6587\u7AE0\u7684\u6838\u5FC3,\u5982\u4F55\u4E0E\u5176\u4ED6\u8282\u70B9\u4E4B\u95F4\u8FDB\u884C\u901A\u4FE1\u5168\u90FD\u53D1\u751F\u5728SharedMempool</span>
        <span class="token comment">//\u8FD9\u91CC\u5B9E\u9645\u4E0A\u5C31\u8FD4\u56DE\u4E86\u4E00\u4E2ARuntime,\u8FD9\u65F6\u5019tokio\u7684\u8C03\u5EA6\u5668\u5DF2\u7ECF\u542F\u52A8\u5B8C\u6210</span>
        <span class="token keyword">let</span> shared_mempool <span class="token operator">=</span> <span class="token function">start_shared_mempool</span><span class="token punctuation">(</span>
            config<span class="token punctuation">,</span>
            mempool<span class="token punctuation">,</span>
            network_sender<span class="token punctuation">,</span>
            network_events<span class="token punctuation">,</span>
            storage_client<span class="token punctuation">,</span>
            vm_validator<span class="token punctuation">,</span>
            <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token class-name">None</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">Self</span> <span class="token punctuation">{</span>
            grpc_server<span class="token punctuation">:</span> <span class="token class-name">ServerHandle</span><span class="token punctuation">::</span><span class="token function">setup</span><span class="token punctuation">(</span>grpc_server<span class="token punctuation">)</span><span class="token punctuation">,</span>
            shared_mempool<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h3 id="_1-1-start-shared-mempool" tabindex="-1">1.1 start_shared_mempool <a class="header-anchor" href="#_1-1-start-shared-mempool" aria-hidden="true">#</a></h3><div class="language-rust line-numbers-mode"><pre><code><span class="token comment">/// bootstrap of SharedMempool</span>
<span class="token comment">/// creates separate Tokio Runtime that runs following routines:</span>
<span class="token comment">///   - outbound_sync_task (task that periodically broadcasts transactions to peers)</span>
<span class="token comment">///   - inbound_network_task (task that handles inbound mempool messages and network events)</span>
<span class="token comment">///   - gc_task (task that performs GC of all expired transactions by SystemTTL)</span>
<span class="token keyword">pub</span><span class="token punctuation">(</span><span class="token keyword">crate</span><span class="token punctuation">)</span> <span class="token keyword">fn</span> <span class="token function-definition function">start_shared_mempool</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
    config<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">NodeConfig</span><span class="token punctuation">,</span>
    mempool<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">CoreMempool</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
    network_sender<span class="token punctuation">:</span> <span class="token class-name">MempoolNetworkSender</span><span class="token punctuation">,</span> <span class="token comment">//\u5411\u5916\u4ED6\u63A8\u9001\u65B0\u53D1\u73B0\u7684Tx\u7684Channel</span>
    network_events<span class="token punctuation">:</span> <span class="token class-name">MempoolNetworkEvents</span><span class="token punctuation">,</span> <span class="token comment">//\u63A5\u53D7\u6765\u81EA\u5176\u4ED6\u8282\u70B9\u7684Mempool\u4E8B\u4EF6\u7684Channel</span>
    storage_read_client<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">StorageRead</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    validator<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    subscribers<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">UnboundedSender</span><span class="token operator">&lt;</span><span class="token class-name">SharedMempoolNotification</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span><span class="token comment">//\u8FD9\u4E2A\u662F\u901A\u77E5\u5176\u4ED6\u6A21\u5757mempool\u53D1\u751F\u4E86\u4EC0\u4E48\u4ED6\u4EEC\u611F\u5174\u8DA3\u7684\u4E8B</span>
    timer<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">IntervalStream</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Runtime</span>
<span class="token keyword">where</span>
    <span class="token class-name">V</span><span class="token punctuation">:</span> <span class="token class-name">TransactionValidation</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u56E0\u4E3Atokio\u7684\u5B8Fif_runtime,\u6240\u4EE5\u65E0\u6CD5\u8BC6\u522B</span>
    <span class="token keyword">let</span> runtime<span class="token punctuation">:</span> <span class="token namespace">tokio<span class="token punctuation">::</span>runtime<span class="token punctuation">::</span></span><span class="token class-name">Runtime</span> <span class="token operator">=</span> <span class="token class-name">Builder</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">name_prefix</span><span class="token punctuation">(</span><span class="token string">&quot;shared-mem-&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;[shared mempool] failed to create runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u83B7\u53D6tokio\u7684Executor,\u8FD9\u6837\u540E\u7EED\u5C31\u53EF\u4EE5\u542F\u52A8task\u4E86.</span>
    <span class="token keyword">let</span> executor<span class="token punctuation">:</span> <span class="token namespace">tokio<span class="token punctuation">::</span>runtime<span class="token punctuation">::</span></span><span class="token class-name">TaskExecutor</span> <span class="token operator">=</span> runtime<span class="token punctuation">.</span><span class="token function">executor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> peer_info <span class="token operator">=</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Mutex</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">PeerInfo</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> smp <span class="token operator">=</span> <span class="token class-name">SharedMempool</span> <span class="token punctuation">{</span>
        mempool<span class="token punctuation">:</span> mempool<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        config<span class="token punctuation">:</span> config<span class="token punctuation">.</span>mempool<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        network_sender<span class="token punctuation">,</span>
        storage_read_client<span class="token punctuation">,</span>
        validator<span class="token punctuation">,</span>
        peer_info<span class="token punctuation">,</span>
        subscribers<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> interval <span class="token operator">=</span>
        timer<span class="token punctuation">.</span><span class="token function">unwrap_or_else</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token function">default_timer</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>mempool<span class="token punctuation">.</span>shared_mempool_tick_interval_ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5728\u7EBF\u7A0B\u6C60\u4E2D\u6267\u884C? actor\u6A21\u578B?</span>
    executor<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span>
        <span class="token function">outbound_sync_task</span><span class="token punctuation">(</span>smp<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interval<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unit_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">compat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5728\u7EBF\u7A0B\u6C60\u4E2D\u6267\u884C?</span>
    executor<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span>
        <span class="token function">inbound_network_task</span><span class="token punctuation">(</span>smp<span class="token punctuation">,</span> network_events<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unit_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">compat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5728\u7EBF\u7A0B\u6C60\u4E2D\u6267\u884C?</span>
    executor<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span>
        <span class="token function">gc_task</span><span class="token punctuation">(</span>mempool<span class="token punctuation">,</span> config<span class="token punctuation">.</span>mempool<span class="token punctuation">.</span>system_transaction_gc_interval_ms<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unit_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">compat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    runtime
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><h2 id="_2-sharedmempool\u4E2D\u7684\u5404\u4E2A\u5B50\u4EFB\u52A1" tabindex="-1">2. SharedMempool\u4E2D\u7684\u5404\u4E2A\u5B50\u4EFB\u52A1 <a class="header-anchor" href="#_2-sharedmempool\u4E2D\u7684\u5404\u4E2A\u5B50\u4EFB\u52A1" aria-hidden="true">#</a></h2><p>\u5728start_shared_mempool\u4E2D\u770B\u5230\u6709\u4E09\u4E2A\u5173\u952E\u5730\u65B9,\u5206\u522B\u662F</p><ol><li><code>network_sender</code>\u662F\u5411\u5916\u63A8\u9001Tx\u7684\u901A\u9053</li><li><code>network_events</code> \u63A5\u53D7\u5176\u4ED6\u8282\u70B9Tx\u4EE5\u53CA\u72B6\u6001\u53D8\u5316\u7B49\u4FE1\u606F\u7684\u901A\u9053</li><li><code>subscribers</code> \u901A\u77E5\u5176\u4ED6\u6A21\u5757mempool\u53D1\u751F\u4E86\u4EC0\u4E48\u4ED6\u4EEC\u611F\u5174\u8DA3\u7684\u4E8B</li></ol><p>\u8FD9\u4E09\u4E2A\u90FD\u662Ffuture\u8FD9\u4E2Acrate\u4E2D\u7684channel,\u8FD9\u91CC\u7684channel\u548Cgolang\u4E2D\u7684chan\u662F\u57FA\u672C\u4E0A\u7B49\u4EF7\u7684.\u7B80\u5316\u8D77\u89C1,\u76F4\u63A5\u770B\u6210\u901A\u4FE1\u901A\u9053\u5C31ok\u4E86.</p><h3 id="_2-1-\u63A5\u53D7\u6765\u81EA\u5E95\u5C42network\u6A21\u5757\u7684\u4FE1\u606F\u63A8\u9001" tabindex="-1">2.1 \u63A5\u53D7\u6765\u81EA\u5E95\u5C42Network\u6A21\u5757\u7684\u4FE1\u606F\u63A8\u9001 <a class="header-anchor" href="#_2-1-\u63A5\u53D7\u6765\u81EA\u5E95\u5C42network\u6A21\u5757\u7684\u4FE1\u606F\u63A8\u9001" aria-hidden="true">#</a></h3><p>\u4E3B\u8981\u6709\u4E09\u79CD\u6D88\u606F</p><ol><li>NewPeer\u6709\u65B0\u7684Peer\u4E0A\u7EBF</li><li>LostPeer Peer\u4E0B\u7EBF</li><li>Message \u4E3B\u8981\u662F\u5C31\u662F\u5176\u4ED6\u8282\u70B9\u63A8\u9001\u6765\u7684\u65B0\u7684Tx</li></ol><div class="language-rust line-numbers-mode"><pre><code><span class="token comment">/// This task handles inbound network events.</span>
<span class="token comment">/// This task handles inbound network events.</span>
<span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">inbound_network_task</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>smp<span class="token punctuation">:</span> <span class="token class-name">SharedMempool</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> network_events<span class="token punctuation">:</span> <span class="token class-name">MempoolNetworkEvents</span><span class="token punctuation">)</span>
<span class="token keyword">where</span>
    <span class="token class-name">V</span><span class="token punctuation">:</span> <span class="token class-name">TransactionValidation</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span>
    <span class="token keyword">let</span> peer_info <span class="token operator">=</span> smp<span class="token punctuation">.</span>peer_info<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> subscribers <span class="token operator">=</span> smp<span class="token punctuation">.</span>subscribers<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> max_inbound_syncs <span class="token operator">=</span> smp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>shared_mempool_max_concurrent_inbound_syncs<span class="token punctuation">;</span>

    <span class="token comment">// Handle the NewPeer/LostPeer events immediatedly, since they are not async</span>
    <span class="token comment">// and we don&#39;t want to buffer them or let them get reordered. The inbound</span>
    <span class="token comment">// direct-send messages are placed in a bounded FuturesUnordered queue and</span>
    <span class="token comment">// allowed to execute concurrently. The .buffer_unordered() also correctly</span>
    <span class="token comment">// handles back-pressure, so if mempool is slow the back-pressure will</span>
    <span class="token comment">// propagate down to network.</span>
    <span class="token keyword">let</span> f_inbound_network_task <span class="token operator">=</span> network_events
        <span class="token comment">//filter &amp; map,\u6709\u5FC5\u8981filter\u4E48?</span>
        <span class="token punctuation">.</span><span class="token function">filter_map</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>network_event<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
            <span class="token macro property">trace!</span><span class="token punctuation">(</span><span class="token string">&quot;SharedMempoolEvent::NetworkEvent::{:?}&quot;</span><span class="token punctuation">,</span> network_event<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">match</span> network_event <span class="token punctuation">{</span>
                <span class="token class-name">Ok</span><span class="token punctuation">(</span>network_event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">match</span> network_event <span class="token punctuation">{</span>
                    <span class="token class-name">Event</span><span class="token punctuation">::</span><span class="token class-name">NewPeer</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token constant">OP_COUNTERS</span><span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token string">&quot;smp.event.new_peer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">new_peer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>peer_info<span class="token punctuation">,</span> peer_id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8BB0\u5F55\u65B0\u53D1\u73B0\u4E86\u8282\u70B9,\u7528\u4E8E\u540E\u7EED\u63A8\u9001Tx\u7ED9\u4ED6</span>
                        <span class="token function">notify_subscribers</span><span class="token punctuation">(</span>
                            <span class="token class-name">SharedMempoolNotification</span><span class="token punctuation">::</span><span class="token class-name">PeerStateChange</span><span class="token punctuation">,</span>
                            <span class="token operator">&amp;</span>subscribers<span class="token punctuation">,</span>
                        <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u540C\u65F6\u4EE5PeerStateChange\u544A\u8BC9\u76F8\u5173\u8BA2\u9605\u65B9</span>
                        <span class="token namespace">future<span class="token punctuation">::</span></span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token class-name">None</span><span class="token punctuation">)</span> <span class="token comment">//\u4F1A\u88AB\u8FC7\u6EE4\u6389,\u8FD9\u6837\u5C31\u4E0D\u4F1A\u5305\u542B\u5728\u4E0B\u9762\u7684for_each_concurrent\u4E2D</span>
                    <span class="token punctuation">}</span>
                    <span class="token class-name">Event</span><span class="token punctuation">::</span><span class="token class-name">LostPeer</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token comment">//\u8282\u70B9\u4E0B\u7EBF,\u5C31\u4E0D\u8981\u7EE7\u7EED\u63A8\u9001Tx\u4E86</span>
                        <span class="token constant">OP_COUNTERS</span><span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token string">&quot;smp.event.lost_peer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">lost_peer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>peer_info<span class="token punctuation">,</span> peer_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">notify_subscribers</span><span class="token punctuation">(</span>
                            <span class="token class-name">SharedMempoolNotification</span><span class="token punctuation">::</span><span class="token class-name">PeerStateChange</span><span class="token punctuation">,</span>
                            <span class="token operator">&amp;</span>subscribers<span class="token punctuation">,</span>
                        <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u540C\u65F6\u4EE5PeerStateChange\u544A\u8BC9\u76F8\u5173\u8BA2\u9605\u65B9</span>
                        <span class="token namespace">future<span class="token punctuation">::</span></span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token class-name">None</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// Pass through messages to next combinator</span>
                    <span class="token comment">// \u6536\u5230\u4E86\u6765\u81EA\u5176\u4ED6\u8282\u70B9\u7684Tx,\u8FD9\u4E2A\u662F\u540E\u7EED\`for_each_concurrent\`</span>
                    <span class="token class-name">Event</span><span class="token punctuation">::</span><span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token namespace">future<span class="token punctuation">::</span></span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    _ <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token comment">//RpcRequest\u6D88\u606F\u4E0D\u5E94\u8BE5\u4F20\u9012\u5230\u8FD9\u91CC</span>
                        <span class="token function">security_log</span><span class="token punctuation">(</span><span class="token class-name">SecurityEvent</span><span class="token punctuation">::</span><span class="token class-name">InvalidNetworkEventMP</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;UnexpectedNetworkEvent&quot;</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>network_event<span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token string">&quot;Unexpected network event&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">security_log</span><span class="token punctuation">(</span><span class="token class-name">SecurityEvent</span><span class="token punctuation">::</span><span class="token class-name">InvalidNetworkEventMP</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>e<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token namespace">future<span class="token punctuation">::</span></span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token class-name">None</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// Run max_inbound_syncs number of \`process_incoming_transactions\` concurrently</span>
        <span class="token punctuation">.</span><span class="token function">for_each_concurrent</span><span class="token punctuation">(</span>
            <span class="token comment">//\u5904\u7406\u6536\u5230\u5176\u4ED6\u8282\u70B9\u63A8\u9001\u8FC7\u6765\u7684Tx,\u5177\u4F53\u673A\u5236\u6709\u8D56\u4E8E\u5E95\u5C42network\u6A21\u5757</span>
            max_inbound_syncs<span class="token punctuation">,</span> <span class="token comment">/* limit */</span>
            <span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">,</span> <span class="token keyword">mut</span> msg<span class="token punctuation">)</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
                <span class="token comment">//todo \u8FD9\u5757\u903B\u8F91\u5F88\u590D\u6742,\u8FD8\u662F\u8981\u7814\u7A76\u4E00\u4E0B</span>
                <span class="token constant">OP_COUNTERS</span><span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token string">&quot;smp.event.message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> transactions<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span>_<span class="token operator">&gt;</span> <span class="token operator">=</span> msg
                    <span class="token punctuation">.</span><span class="token function">take_transactions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">into_iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u8FD9\u91CC\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u5C06grpc Message\u7B80\u5355\u8F6C\u6362\u6210\u5185\u90E8\u7684SignedTransaction\u7684\u8FC7\u7A0B</span>
                    <span class="token punctuation">.</span><span class="token function">filter_map</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>txn<span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">match</span> <span class="token class-name">SignedTransaction</span><span class="token punctuation">::</span><span class="token function">from_proto</span><span class="token punctuation">(</span>txn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Ok</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                            <span class="token function">security_log</span><span class="token punctuation">(</span><span class="token class-name">SecurityEvent</span><span class="token punctuation">::</span><span class="token class-name">InvalidTransactionMP</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>e<span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>msg<span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token class-name">None</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token constant">OP_COUNTERS</span><span class="token punctuation">.</span><span class="token function">inc_by</span><span class="token punctuation">(</span>
                    <span class="token operator">&amp;</span><span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;smp.transactions.received.{:?}&quot;</span><span class="token punctuation">,</span> peer_id<span class="token punctuation">)</span><span class="token punctuation">,</span>
                    transactions<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u9A8C\u8BC1Tx\u6709\u6548\u6027,\u7136\u540E\u6DFB\u52A0\u5230\u81EA\u5DF1\u7684\u7F13\u51B2\u6C60\u4E2D,\u6DFB\u52A0\u8FC7\u7A0B\u8C03\u7528\u7684\u662F\`add_txn\`,</span>
                <span class="token comment">// \u548C\u5904\u7406\u6765\u81EAAC\u7684Tx\u662F\u4E00\u6837\u7684\u903B\u8F91</span>
                <span class="token function">process_incoming_transactions</span><span class="token punctuation">(</span>smp<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> peer_id<span class="token punctuation">,</span> transactions<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// drive the inbound futures to completion</span>
    f_inbound_network_task<span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span> <span class="token comment">//\u6C38\u8FDC\u4E0D\u7ED3\u675F</span>

    <span class="token macro property">crit!</span><span class="token punctuation">(</span><span class="token string">&quot;SharedMempool inbound_network_task terminated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br></div></div><p>\u4E0A\u9762\u8FD9\u6BB5\u4EE3\u7801\u5F88\u957F,\u6709\u63A5\u8FD1100\u884C,\u4F46\u662F\u5982\u679C\u4ED4\u7EC6\u5206\u6790\u7684\u8BDD\u57FA\u672C\u4E0A\u5C31\u662F\u4E00\u53E5\u4EE3\u7801,\u4E0D\u8FC7\u8FD9\u4E00\u6761\u8BED\u53E5\u5F88\u590D\u6742,\u5360\u7528\u4E86\u4ECE16\u884C\u523084\u884C\u57FA\u672C\u4E0A70\u884C. \u6211\u4E0D\u77E5\u9053\u8BE5\u8BF4\u8FD9\u662Frust\u8BED\u8A00\u7684\u8868\u8FBE\u80FD\u529B\u5F3A\u8FD8\u662F\u8BE5\u8BDF\u75C5rust\u9605\u8BFB\u4F53\u9A8C\u6781\u7CDF.</p><p>\u8FD8\u6709\u4E00\u4E2A\u9700\u8981\u8BF4\u660E\u5C31\u662F\u8FD9\u91CCasync\u548Cawait\u642D\u914D\u4F7F\u7528. \u56E0\u4E3A\u51FD\u6570\u7684\u58F0\u660E\u4E2D\u4F7F\u7528\u4E86async\u5173\u952E\u5B57,\u56E0\u6B64\u5B9E\u9645\u4E0A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4F1A\u662F\u4E00\u4E2AFuture. \u8FD8\u6709\u5C31\u662F\u7B2C94\u884C\u7684<code>f_inbound_network_task.await</code>\u5E76\u4E0D\u662F\u4E00\u4E2A\u6B7B\u5FAA\u73AF,\u4F60\u53EF\u4EE5\u628A\u4ED6\u60F3\u8C61\u6210\u4E00\u4E2Agoroutine,\u5F53<code>network_events</code>\u8FD9\u4E2Achannel\u8BFB\u4E0D\u51FA\u6765\u6570\u636E\u7684\u65F6\u5019\u4ED6\u4F1A\u653E\u5F03CPU\u5360\u7528. \u5B9E\u9645\u4E0A\u8FD9\u4E5F\u662Ftokio\u8FD9\u4E2A\u6846\u67B6\u5728\u505A\u7684\u4E8B.</p><h4 id="_2-1-1-process-incoming-transactions" tabindex="-1">2.1.1 process_incoming_transactions <a class="header-anchor" href="#_2-1-1-process-incoming-transactions" aria-hidden="true">#</a></h4>`,18),l=n("p",null,[s("\u8FD9\u4E2A\u51FD\u6570\u503C\u5F97\u4E00\u8BF4\u5230\u5C31\u662F\u4ED6\u6DFB\u52A0Tx\u5230\u7F13\u51B2\u6C60\u4E2D\u7684\u65B9\u5F0F\u662F"),n("code",null,"TimelineState::NonQualified"),s(",\u8FD9\u610F\u5473\u7740\u8FD9\u79CDTx\u4E0D\u4F1A\u518D\u88AB\u5E7F\u64AD\u7ED9\u5176\u4ED6\u8282\u70B9. \u597D\u5904\u5F53\u7136\u662F\u6781\u5927\u7684\u964D\u4F4E\u4E86\u6570\u636E\u4F20\u8F93\u91CF. \u8FD9\u79CD\u65B9\u5F0F\u5728\u4EE5\u592A\u574A\u4E2D\u80AF\u5B9A\u662F\u4E0D\u4F1A\u91C7\u7528\u7684,\u56E0\u4E3A\u8FD9\u5F88\u4E0D\u5229\u4E8ETx\u7684\u5FEB\u901F\u5E7F\u64AD. \u5F53\u7136Libra\u91C7\u7528\u8FD9\u79CD\u65B9\u5F0F\u6709\u4ED6\u7684\u9053\u7406,\u4ED6\u662F\u8054\u76DF\u94FE,\u8282\u70B9\u6570\u91CF\u6709\u9650,\u4ED6\u91C7\u7528\u7684\u5047\u8BBE\u5E94\u8BE5\u662F: \u6709N\u4E2A\u8282\u70B9\u7684\u8054\u76DF\u94FE,\u8FD9\u4E2AN\u4E2A\u8282\u70B9\u5F7C\u6B64\u4E4B\u95F4\u4E24\u4E24\u4E92\u8FDE,\u603B\u5171\u6709"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mfrac",null,[n("mrow",null,[n("mi",null,"N"),n("mo",{stretchy:"false"},"("),n("mi",null,"N"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("mn",null,"2")])]),n("annotation",{encoding:"application/x-tex"},"\\frac {N(N-1)} 2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.355em","vertical-align":"-0.345em"}}),n("span",{class:"mord"},[n("span",{class:"mopen nulldelimiter"}),n("span",{class:"mfrac"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.01em"}},[n("span",{style:{top:"-2.6550000000000002em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"2")])])]),n("span",{style:{top:"-3.23em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),n("span",{style:{top:"-3.485em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N"),n("span",{class:"mopen mtight"},"("),n("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N"),n("span",{class:"mbin mtight"},"\u2212"),n("span",{class:"mord mtight"},"1"),n("span",{class:"mclose mtight"},")")])])])]),n("span",{class:"vlist-s"},"\u200B")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.345em"}},[n("span")])])])]),n("span",{class:"mclose nulldelimiter"})])])])]),s("\u4E2A\u8FDE\u63A5.")],-1),u=a(`<p>\u56E0\u4E3ANetwork\u6A21\u5757\u6CA1\u6709\u7814\u8BFB,\u6240\u4EE5\u53EA\u662F\u731C\u6D4B.</p><h3 id="_2-2-\u5411\u5916\u5E7F\u64AD\u6765\u81EAac\u7684tx" tabindex="-1">2.2 \u5411\u5916\u5E7F\u64AD\u6765\u81EAAC\u7684Tx <a class="header-anchor" href="#_2-2-\u5411\u5916\u5E7F\u64AD\u6765\u81EAac\u7684tx" aria-hidden="true">#</a></h3><div class="language-rust line-numbers-mode"><pre><code><span class="token comment">/// This task handles [\`SyncEvent\`], which is periodically emitted for us to</span>
<span class="token comment">/// broadcast ready to go transactions to peers.</span>
<span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">outbound_sync_task</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>smp<span class="token punctuation">:</span> <span class="token class-name">SharedMempool</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">mut</span> interval<span class="token punctuation">:</span> <span class="token class-name">IntervalStream</span><span class="token punctuation">)</span>
<span class="token keyword">where</span>
    <span class="token class-name">V</span><span class="token punctuation">:</span> <span class="token class-name">TransactionValidation</span><span class="token punctuation">,</span>
<span class="token punctuation">{</span>
    <span class="token keyword">let</span> peer_info <span class="token operator">=</span> smp<span class="token punctuation">.</span>peer_info<span class="token punctuation">;</span>
    <span class="token keyword">let</span> mempool <span class="token operator">=</span> smp<span class="token punctuation">.</span>mempool<span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> network_sender <span class="token operator">=</span> smp<span class="token punctuation">.</span>network_sender<span class="token punctuation">;</span>
    <span class="token keyword">let</span> batch_size <span class="token operator">=</span> smp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>shared_mempool_batch_size<span class="token punctuation">;</span>
    <span class="token keyword">let</span> subscribers <span class="token operator">=</span> smp<span class="token punctuation">.</span>subscribers<span class="token punctuation">;</span>
    <span class="token comment">//\u5B9A\u65F6\u6B7B\u5FAA\u73AF,\u8FD9\u4E2A\u6267\u884C\u5230await\u7684</span>
    <span class="token comment">/*
    \u5F53\u4EE3\u7801\u6267\u2F8F\u5230await\uFF01 \uFF08read_from_network\uFF08\uFF09\uFF09\u2FA5\u2FAF\u7684\u65F6\u5019\uFF0C\u53D1\u73B0\u5F02\u6B65\u64CD\u4F5C\u8FD8\u6CA1\u6709\u5B8C\u6210\uFF0C
    \u5B83\u4F1A\u76F4\u63A5\u9000\u51FA\u5F53\u524D\u8FD9\u4E2A\u51FD\u6570\uFF0C\u628ACPU\u8BA9\u7ED9\u5176\u4ED6\u4EFB\u52A1\u6267\u2F8F\u3002\u5F53\u8FD9\u4E2A\u6570\u636E\u4ECE\u2F79\u7EDC\u4E0A \u4F20\u8F93\u5B8C\u6210\u4E86\uFF0C\u8C03\u5EA6\u5668\u4F1A\u518D\u6B21\u8C03\u2F64\u8FD9\u4E2A\u51FD\u6570\uFF0C
    \u5B83\u4F1A\u4ECE\u4E0A\u6B21\u4E2D\u65AD\u7684\u5730\u2F45\u6062\u590D\u6267\u2F8F\u3002\u6240\u4EE5\u2F64async/await\u7684\u8BED\u6CD5\u5199\u4EE3\u7801\uFF0C\u5F02\u6B65\u4EE3\u7801\u7684\u903B\u8F91\u5728\u6E90\u7801\u7EC4\u7EC7\u4E0A\u8DDF\u540C\u6B65\u4EE3\u7801\u7684\u903B\u8F91\u5DEE\u522B
    \u5E76\u4E0D\u2F24\u3002\u8FD9\u2FA5\u2FAF\u72B6\u6001\u4FDD\u5B58\u548C\u6062\u590D\u8FD9\u4E9B\u7410\u788E\u7684\u4E8B\u60C5\uFF0C\u90FD\u7531 \u7F16\u8BD1\u5668\u5E2E\u6211\u4EEC\u5B8C\u6210\u4E86\u3002
    */</span>
    <span class="token keyword">while</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>sync_event<span class="token punctuation">)</span> <span class="token operator">=</span> interval<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span> <span class="token punctuation">{</span>
        <span class="token macro property">trace!</span><span class="token punctuation">(</span><span class="token string">&quot;SyncEvent: {:?}&quot;</span><span class="token punctuation">,</span> sync_event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">match</span> sync_event <span class="token punctuation">{</span>
            <span class="token class-name">Ok</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">sync_with_peers</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>peer_info<span class="token punctuation">,</span> <span class="token operator">&amp;</span>mempool<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> network_sender<span class="token punctuation">,</span> batch_size<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
                <span class="token function">notify_subscribers</span><span class="token punctuation">(</span><span class="token class-name">SharedMempoolNotification</span><span class="token punctuation">::</span><span class="token class-name">Sync</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>subscribers<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token macro property">error!</span><span class="token punctuation">(</span><span class="token string">&quot;Error in outbound_sync_task timer interval: {:?}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">crit!</span><span class="token punctuation">(</span><span class="token string">&quot;SharedMempool outbound_sync_task terminated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u8FD9\u91CC\u540C\u6837\u7528\u4E86async,await\u6765\u8FDB\u884C\u5F02\u6B65\u4EFB\u52A1\u7684\u5904\u7406. \u56E0\u4E3Aoutbound_sync_task\u672C\u8EAB\u6BD4\u8F83\u6E05\u6670,\u4EE5\u81F3\u4E8E\u6211\u4EEC\u90FD\u4E0D\u7528\u5173\u6CE8\u6211\u4EEC\u662F\u5728\u5904\u7406\u5F02\u6B65\u4EFB\u52A1. \u5982\u540C\u81EA\u5DF1\u72EC\u5360\u4E00\u4E2A\u7EBF\u7A0B\u4E00\u6837.\u786E\u5B9E\u5927\u5927\u964D\u4F4E\u4E86\u5F02\u6B65\u4EFB\u52A1\u7684\u7F16\u5199\u96BE\u5EA6.</p><h4 id="_2-2-1-\u5411\u5916\u5E7F\u64ADtx" tabindex="-1">2.2.1 \u5411\u5916\u5E7F\u64ADTx <a class="header-anchor" href="#_2-2-1-\u5411\u5916\u5E7F\u64ADtx" aria-hidden="true">#</a></h4><p>\u76F8\u6BD4\u4E4B\u4E0Bsync_with_peers\u8981\u590D\u6742\u4E00\u4E9B,\u4F46\u662F\u5176\u529F\u80FD\u975E\u5E38\u7B80\u5355,\u5C31\u662F\u9488\u5BF9\u6BCF\u4E2A\u8282\u70B9\u63A8\u9001\u6240\u6709\u6765\u81EA\u81EA\u8EABAC\u6A21\u5757\u7684Tx. \u7A0D\u5FAE\u590D\u6742\u7684\u4E00\u70B9\u5C31\u662F\u4E3A\u4E86\u907F\u514D\u91CD\u590D,\u4F7F\u7528\u4E86<code>timeline_id</code>\u8FD9\u4E2A\u6280\u672F. \u524D\u9762\u6587\u7AE0\u4E5F\u4ECB\u7ECD\u8FC7,\u5C31\u662F\u4E00\u4E2A\u975E\u5E38\u7B80\u5355\u7684\u9488\u5BF9\u6BCF\u4E00\u4E2ATx\u90FD\u6709\u4E00\u4E2A\u7F16\u53F7,\u5E76\u4E14\u8FD9\u4E2A\u7F16\u53F7\u662F\u5355\u589E\u7684.\u8FD9\u6837\u5728\u5411\u8282\u70B9A\u63A8\u9001\u7684\u65F6\u5019\u53EA\u9700\u8981\u8BB0\u4F4F\u4E0A\u6B21\u63A8\u9001\u5230\u4E86\u7B2C35\u4E2A,\u90A3\u4E48\u4E0B\u6B21\u5C31\u4ECE\u7B2C36\u4E2A\u5F00\u59CB\u5373\u53EF.</p><div class="language-rust line-numbers-mode"><pre><code><span class="token comment">/// sync routine</span>
<span class="token comment">/// used to periodically broadcast ready to go transactions to peers</span>
<span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sync_with_peers</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;a</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
    peer_info<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;a</span> <span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">PeerInfo</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>  <span class="token comment">//\u8FD9\u4E2Apeer_info\u4E00\u4E2A\u6240\u6709\u5176\u4ED6\u8282\u70B9\u7684Map</span>
    mempool<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;a</span> <span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">CoreMempool</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token comment">//\u81EA\u5DF1\u7684\u5185\u5B58\u6C60</span>
    network_sender<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;a</span> <span class="token keyword">mut</span> <span class="token class-name">MempoolNetworkSender</span><span class="token punctuation">,</span> <span class="token comment">//\u5E7F\u64AD\u6D88\u606F\u7684\u901A\u9053</span>
    batch_size<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Clone the underlying peer_info map and use this to sync and collect</span>
    <span class="token comment">// state updates. We do this instead of holding the lock for the whole</span>
    <span class="token comment">// function since that would hold the lock across await points which is bad.</span>
    <span class="token keyword">let</span> peer_info_copy <span class="token operator">=</span> peer_info
        <span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;[shared mempool] failed to acquire peer_info lock&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">deref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> <span class="token keyword">mut</span> state_updates <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>peer_id<span class="token punctuation">,</span> peer_state<span class="token punctuation">)</span> <span class="token keyword">in</span> peer_info_copy<span class="token punctuation">.</span><span class="token function">into_iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> peer_state<span class="token punctuation">.</span>is_alive <span class="token punctuation">{</span>
            <span class="token keyword">let</span> timeline_id <span class="token operator">=</span> peer_state<span class="token punctuation">.</span>timeline_id<span class="token punctuation">;</span> <span class="token comment">//timeline_id\u662F\u7ED9\u6765\u81EA\u81EA\u8EABAC\u6A21\u5757\u7684Tx\u4E00\u4E2A\u552F\u4E00\u7684\u5355\u589E\u7F16\u53F7,\u907F\u514D\u91CD\u590D\u63A8\u9001</span>
                                                      <span class="token comment">//\u8BFB\u53D6\u672C\u5730\u7684Tx,\u8FD9\u4E9Bmempool\u4E4B\u95F4\u7684timeline_id\u90FD\u662F\u4E00\u6837\u7684?</span>
            <span class="token keyword">let</span> <span class="token punctuation">(</span>transactions<span class="token punctuation">,</span> new_timeline_id<span class="token punctuation">)</span> <span class="token operator">=</span> mempool
                <span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;[shared mempool] failed to acquire mempool lock&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">read_timeline</span><span class="token punctuation">(</span>timeline_id<span class="token punctuation">,</span> batch_size<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token operator">!</span>transactions<span class="token punctuation">.</span><span class="token function">is_empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token constant">OP_COUNTERS</span><span class="token punctuation">.</span><span class="token function">inc_by</span><span class="token punctuation">(</span><span class="token string">&quot;smp.sync_with_peers&quot;</span><span class="token punctuation">,</span> transactions<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> <span class="token keyword">mut</span> msg <span class="token operator">=</span> <span class="token class-name">MempoolSyncMsg</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                msg<span class="token punctuation">.</span><span class="token function">set_peer_id</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                msg<span class="token punctuation">.</span><span class="token function">set_transactions</span><span class="token punctuation">(</span>
                    transactions
                        <span class="token punctuation">.</span><span class="token function">into_iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">IntoProto</span><span class="token punctuation">::</span>into_proto<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token macro property">debug!</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;MempoolNetworkSender.send_to peer {} msg {:?}&quot;</span><span class="token punctuation">,</span>
                    peer_id<span class="token punctuation">,</span> msg
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Since this is a direct-send, this will only error if the network</span>
                <span class="token comment">// module has unexpectedly crashed or shutdown.</span>
                network_sender <span class="token comment">//\u5411\u6307\u5B9A\u7684\`peer_id\`\u63A8\u9001\`transactions\`\u6570\u7EC4</span>
                    <span class="token punctuation">.</span><span class="token function">send_to</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">,</span> msg<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token keyword">await</span>
                    <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;[shared mempool] failed to direct-send mempool sync message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            state_updates<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">,</span> new_timeline_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Lock the shared peer_info and apply state updates.</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> peer_info <span class="token operator">=</span> peer_info
        <span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;[shared mempool] failed to acquire peer_info lock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>peer_id<span class="token punctuation">,</span> new_timeline_id<span class="token punctuation">)</span> <span class="token keyword">in</span> state_updates <span class="token punctuation">{</span>
        peer_info
            <span class="token punctuation">.</span><span class="token function">entry</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">)</span> <span class="token comment">//\u66F4\u65B0\u76F8\u5E94\u8282\u70B9\u7684timeline_id,\u4E0D\u8981\u91CD\u590D\u63A8\u9001\u4E86</span>
            <span class="token punctuation">.</span><span class="token function">and_modify</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>t<span class="token closure-punctuation punctuation">|</span></span> t<span class="token punctuation">.</span>timeline_id <span class="token operator">=</span> new_timeline_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><h3 id="_2-3-gc-task-\u8FC7\u671F\u4EA4\u6613\u56DE\u6536\u673A\u5236" tabindex="-1">2.3 gc_task \u8FC7\u671F\u4EA4\u6613\u56DE\u6536\u673A\u5236 <a class="header-anchor" href="#_2-3-gc-task-\u8FC7\u671F\u4EA4\u6613\u56DE\u6536\u673A\u5236" aria-hidden="true">#</a></h3><div class="language-rust line-numbers-mode"><pre><code>
<span class="token comment">/// GC all expired transactions by SystemTTL</span>
<span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">gc_task</span><span class="token punctuation">(</span>mempool<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">CoreMempool</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span> gc_interval_ms<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> interval <span class="token operator">=</span> <span class="token class-name">Interval</span><span class="token punctuation">::</span><span class="token function">new_interval</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_millis</span><span class="token punctuation">(</span>gc_interval_ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=</span> interval<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span> <span class="token punctuation">{</span>
        <span class="token keyword">match</span> res <span class="token punctuation">{</span>
            <span class="token class-name">Ok</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                mempool
                    <span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;[shared mempool] failed to acquire mempool lock&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">gc_by_system_ttl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token macro property">error!</span><span class="token punctuation">(</span><span class="token string">&quot;Error in gc_task timer interval: {:?}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token macro property">crit!</span><span class="token punctuation">(</span><span class="token string">&quot;SharedMempool gc_task terminated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u4ECE\u4EE3\u7801\u6765\u770B\u5C31\u975E\u5E38\u7B80\u5355,\u5C31\u662F\u5B9A\u671F\u8C03\u7528<code>gc_by_system_ttl</code>,\u8FD9\u4E2A\u51FD\u6570\u6211\u4EEC\u524D\u9762\u4ECB\u7ECD\u8FC7,\u5C31\u662F\u907F\u514DTx\u5728\u7F13\u51B2\u6C60\u4E2D\u5446\u592A\u4E45,\u5360\u7528\u7A7A\u95F4,\u4ECE\u800C\u5BFC\u81F4\u53EF\u4EE5\u6253\u5305\u7684\u4EA4\u6613\u8FDB\u4E0D\u5230\u7F13\u51B2\u6C60\u4E2D.</p><p>\u5728\u4EE5\u592A\u574A\u4E2D\u5982\u679C\u662F\u76F4\u63A5\u6536\u5230\u7684Tx\u4F1A\u4FDD\u5B58\u5728<code>transactions.rlp</code>\u8FD9\u4E2A\u6587\u4EF6\u4E2D,\u5C31\u7B97\u662F\u53D1\u751F\u62E5\u5835\u4E5F\u4E0D\u4F1A\u4E22\u5931. \u4E0D\u77E5\u9053Libra\u8FD9\u79CD\u8BBE\u8BA1,\u5982\u679C\u53D1\u751F\u4E86\u62E5\u5835,\u4EA4\u6613\u4E22\u5931\u4E86\u5982\u4F55\u89E3\u51B3. \u6211\u7684\u4E00\u4E2A\u731C\u60F3\u53EF\u80FD\u662F:</p><ol><li>libra\u7684client\u8981\u76F8\u4FE1validator,\u4ED6\u4F1A\u53BBvalidator\u4E0A\u67E5\u8BE2\u81EA\u5DF1\u8D26\u6237\u7684seq_number.</li><li>libra\u4E2DTx\u662F\u6709\u8FC7\u671F\u673A\u5236\u7684,\u4E00\u65E6\u8FC7\u671F,client\u5C31\u5E94\u8BE5\u8BA4\u4E3A\u4EA4\u6613\u5931\u8D25\u4E86,\u5982\u679C\u60F3\u8981\u7EE7\u7EED,\u5C31\u5E94\u8BE5\u91CD\u65B0\u53D1\u9001.</li></ol><h2 id="_3-mempool\u4E4B\u95F4\u7684\u540C\u6B65" tabindex="-1">3. mempool\u4E4B\u95F4\u7684\u540C\u6B65 <a class="header-anchor" href="#_3-mempool\u4E4B\u95F4\u7684\u540C\u6B65" aria-hidden="true">#</a></h2><p>\u7B80\u5316\u8D77\u89C1,\u6211\u76F4\u63A5\u4ECE\u6D4B\u8BD5\u4EE3\u7801\u4E2D\u770Blibra\u662F\u5982\u4F55\u6D4B\u8BD5\u591A\u4E2Amempool\u4E4B\u95F4\u7684\u540C\u6B65\u7684.\u76F8\u5173\u4EE3\u7801\u4F4D\u4E8E<code>mempool/src/core_mempool/unit_tests/shared_mempool_test.rs</code></p><h3 id="_3-1-\u53D1\u73B0\u8282\u70B9\u4E4B\u95F4\u7684\u94FE\u63A5\u65B9\u5F0F" tabindex="-1">3.1 \u53D1\u73B0\u8282\u70B9\u4E4B\u95F4\u7684\u94FE\u63A5\u65B9\u5F0F <a class="header-anchor" href="#_3-1-\u53D1\u73B0\u8282\u70B9\u4E4B\u95F4\u7684\u94FE\u63A5\u65B9\u5F0F" aria-hidden="true">#</a></h3><div class="language-rust line-numbers-mode"><pre><code>
<span class="token attribute attr-name">#[derive(Default)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">SharedMempoolNetwork</span> <span class="token punctuation">{</span>
    mempools<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">PeerId</span><span class="token punctuation">,</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">CoreMempool</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    network_reqs_rxs<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">PeerId</span><span class="token punctuation">,</span> <span class="token namespace">channel<span class="token punctuation">::</span></span><span class="token class-name">Receiver</span><span class="token operator">&lt;</span><span class="token class-name">NetworkRequest</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
    network_notifs_txs<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">PeerId</span><span class="token punctuation">,</span> <span class="token namespace">channel<span class="token punctuation">::</span></span><span class="token class-name">Sender</span><span class="token operator">&lt;</span><span class="token class-name">NetworkNotification</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
    runtimes<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">PeerId</span><span class="token punctuation">,</span> <span class="token class-name">Runtime</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    subscribers<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">PeerId</span><span class="token punctuation">,</span> <span class="token class-name">UnboundedReceiver</span><span class="token operator">&lt;</span><span class="token class-name">SharedMempoolNotification</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
    timers<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">PeerId</span><span class="token punctuation">,</span> <span class="token class-name">UnboundedSender</span><span class="token operator">&lt;</span><span class="token class-name">SyncEvent</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">SharedMempoolNetwork</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">bootstrap_with_config</span><span class="token punctuation">(</span>peers<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">PeerId</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">mut</span> config<span class="token punctuation">:</span> <span class="token class-name">NodeConfig</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> smp <span class="token operator">=</span> <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span>mempool<span class="token punctuation">.</span>shared_mempool_batch_size <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> peer <span class="token keyword">in</span> peers <span class="token punctuation">{</span>
            <span class="token keyword">let</span> mempool <span class="token operator">=</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Mutex</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">CoreMempool</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u6D88\u606F\u662F\u4E00\u6761\u901A\u9053</span>
            <span class="token keyword">let</span> <span class="token punctuation">(</span>network_reqs_tx<span class="token punctuation">,</span> network_reqs_rx<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">channel<span class="token punctuation">::</span></span><span class="token function">new_test</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//\u901A\u77E5\u662F\u53E6\u4E00\u6761\u901A\u9053</span>
            <span class="token keyword">let</span> <span class="token punctuation">(</span>network_notifs_tx<span class="token punctuation">,</span> network_notifs_rx<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">channel<span class="token punctuation">::</span></span><span class="token function">new_test</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> network_sender <span class="token operator">=</span> <span class="token class-name">MempoolNetworkSender</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>network_reqs_tx<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> network_events <span class="token operator">=</span> <span class="token class-name">MempoolNetworkEvents</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>network_notifs_rx<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//unbounded\u662F\u521B\u5EFA\u6CA1\u6709\u7F13\u51B2\u533A\u5927\u5C0F\u9650\u5236\u7684channel</span>
            <span class="token keyword">let</span> <span class="token punctuation">(</span>sender<span class="token punctuation">,</span> subscriber<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">unbounded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> <span class="token punctuation">(</span>timer_sender<span class="token punctuation">,</span> timer_receiver<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">unbounded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">let</span> runtime <span class="token operator">=</span> <span class="token function">start_shared_mempool</span><span class="token punctuation">(</span>
                <span class="token operator">&amp;</span>config<span class="token punctuation">,</span>
                <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mempool<span class="token punctuation">)</span><span class="token punctuation">,</span>
                network_sender<span class="token punctuation">,</span> <span class="token comment">//network_reqs_tx \u662F\u6211\u5411\u5916\u53D1\u9001,\u5176\u4ED6\u4EBA\u63A5\u6536</span>
                network_events<span class="token punctuation">,</span> <span class="token comment">/* network_notifs_rx
                                 * \u662F\u6211\u63A5\u53D7\u6765\u81EA\u522B\u4EBA\u7684event,\u5176\u4ED6\u4EBA\u901A\u8FC7network_notifs_tx\u53D1\u7ED9\u6211 */</span>
                <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">MockStorageReadClient</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">MockVMValidator</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token macro property">vec!</span><span class="token punctuation">[</span>sender<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//\u5411\u5916\u53D1\u5E03\u8BA2\u9605</span>
                <span class="token class-name">Some</span><span class="token punctuation">(</span>
                    timer_receiver
                        <span class="token punctuation">.</span><span class="token function">compat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">map_err</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>_<span class="token closure-punctuation punctuation">|</span></span> <span class="token macro property">format_err!</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>

            smp<span class="token punctuation">.</span>mempools<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>peer<span class="token punctuation">,</span> mempool<span class="token punctuation">)</span><span class="token punctuation">;</span>
            smp<span class="token punctuation">.</span>network_reqs_rxs<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>peer<span class="token punctuation">,</span> network_reqs_rx<span class="token punctuation">)</span><span class="token punctuation">;</span>
            smp<span class="token punctuation">.</span>network_notifs_txs<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>peer<span class="token punctuation">,</span> network_notifs_tx<span class="token punctuation">)</span><span class="token punctuation">;</span>
            smp<span class="token punctuation">.</span>subscribers<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>peer<span class="token punctuation">,</span> subscriber<span class="token punctuation">)</span><span class="token punctuation">;</span>
            smp<span class="token punctuation">.</span>timers<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>peer<span class="token punctuation">,</span> timer_sender<span class="token punctuation">)</span><span class="token punctuation">;</span>
            smp<span class="token punctuation">.</span>runtimes<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>peer<span class="token punctuation">,</span> runtime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        smp
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p>\u6839\u636E\u4E0A\u9762\u7684\u4EE3\u7801,\u5982\u679C\u6211\u60F3\u7ED9peerA\u53D1\u9001\u6D88\u606F,\u53EA\u9700\u76F4\u63A5\u5411\u5176\u5BF9\u5E94\u7684<code>network_notifs_rx</code>sender\u6D88\u606F\u5373\u53EF. \u540C\u6837\u5982\u679C\u6211\u60F3\u63A5\u6536peerA\u5411\u5916\u5E7F\u64AD\u4E86\u54EA\u4E9BTx,\u53EA\u9700\u4ECE<code>network_reqs_rx</code>\u63A5\u6536\u5373\u53EF. \u65F6\u5C1A\u6D4B\u8BD5\u4EE3\u7801\u6B63\u5F0F\u8FD9\u4E48\u505A\u7684.</p><h3 id="_3-2-\u5411\u6307\u5B9Apeer\u53D1\u9001\u4E8B\u4EF6" tabindex="-1">3.2 \u5411\u6307\u5B9APeer\u53D1\u9001\u4E8B\u4EF6 <a class="header-anchor" href="#_3-2-\u5411\u6307\u5B9Apeer\u53D1\u9001\u4E8B\u4EF6" aria-hidden="true">#</a></h3><p>\u8FD9\u91CC\u6D4B\u8BD5\u4EE3\u7801\u6CA1\u6709\u8986\u76D6\u5230\u5E7F\u64ADTx\u8FD9\u79CD\u60C5\u5F62. \u8FD9\u4E2A\u60C5\u5F62\u5728<code>deliver_message</code>\u4E2D\u88AB\u8986\u76D6\u5230.</p><div class="language-rust line-numbers-mode"><pre><code>    <span class="token comment">//send_event,\u90FD\u662F\u53D1\u9001\u7684NewPeer\u6216\u8005LostPeer\u4E8B\u4EF6,\u662Fpeer\u5411\u5916\u53D1\u9001\u8BF4\u81EA\u5DF1\u53D1\u73B0\u4E86NewPeer(xx)</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">send_event</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> peer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">PeerId</span><span class="token punctuation">,</span> notif<span class="token punctuation">:</span> <span class="token class-name">NetworkNotification</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> network_notifs_tx <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>network_notifs_txs<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span>peer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*
        block_on\u4E0Easync,await\u7684\u533A\u522B
        1. block_on\u5728\u666E\u901A\u51FD\u6570\u4E2D\u4F7F\u7528,await\u53EA\u80FD\u5728\u6807\u6709async\u7684\u51FD\u6570\u4E2D\u4F7F\u7528
        2. block_on\u4F1A\u771F\u5B9E\u7684\u5835\u585E\u6240\u5728\u7EBF\u7A0B,\u800Cawait\u53EA\u4F1A\u5835\u585E\u6240\u5728task,actor\u53EF\u4EE5\u8C03\u5EA6\u5176\u4ED6\u4EFB\u52A1\u6765\u8FD0\u884C
        */</span>
        <span class="token function">block_on</span><span class="token punctuation">(</span>network_notifs_tx<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>notif<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u901A\u8FC7peer\u5173\u8054\u7684network_notifs_tx\u53D1\u51FA\u53BB,peer\u5C31\u4F1A\u6536\u5230,\u7136\u540E\u4EA7\u751F\u52A8\u4F5C,</span>
        <span class="token comment">// \u5C31\u662F\u5411\u8BA2\u9605\u65B9\u63D0\u4F9BpeerStateChange\u901A\u77E5</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">wait_for_event</span><span class="token punctuation">(</span>peer<span class="token punctuation">,</span> <span class="token class-name">SharedMempoolNotification</span><span class="token punctuation">::</span><span class="token class-name">PeerStateChange</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_3-3-\u63A5\u6536peer\u5E7F\u64AD\u51FA\u6765\u7684tx" tabindex="-1">3.3 \u63A5\u6536Peer\u5E7F\u64AD\u51FA\u6765\u7684Tx <a class="header-anchor" href="#_3-3-\u63A5\u6536peer\u5E7F\u64AD\u51FA\u6765\u7684tx" aria-hidden="true">#</a></h3><div class="language-rust line-numbers-mode"><pre><code>    <span class="token comment">/// deliveres next message from given node to it&#39;s peer</span>
    <span class="token comment">/// \u8FD9\u4E2A\u51FD\u6570\u5B9E\u9645\u4E0A\u662F\u89E6\u53D1peer\u5411\u5916\u63A8\u9001\u81EA\u5DF1\u7F13\u51B2\u6C60\u4E2D\u7684Tx,\u7136\u540E\u901A\u8FC7\`network_reqs_rx\`\u63A5\u53D7\u63A8\u9001</span>
    <span class="token comment">/// \u9A8C\u8BC1\u63A8\u9001\u5185\u5BB9\u662F\u5426\u7B26\u5408\u9884\u671F</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">deliver_message</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> peer<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">PeerId</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">SignedTransaction</span><span class="token punctuation">,</span> <span class="token class-name">PeerId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// emulate timer tick,\`struct SharedMempool&lt;V&gt;\`\u4F1A\u5411\u5916\u63A8\u9001\u81EA\u5DF1\u7684Tx</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>timers
            <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>peer<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unbounded_send</span><span class="token punctuation">(</span><span class="token class-name">SyncEvent</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// await next message from node</span>
        <span class="token keyword">let</span> network_reqs_rx <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>network_reqs_rxs<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span>peer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> network_req <span class="token operator">=</span> <span class="token function">block_on</span><span class="token punctuation">(</span>network_reqs_rx<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">match</span> network_req <span class="token punctuation">{</span>
            <span class="token class-name">NetworkRequest</span><span class="token punctuation">::</span><span class="token class-name">SendMessage</span><span class="token punctuation">(</span>peer_id<span class="token punctuation">,</span> msg<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> <span class="token keyword">mut</span> sync_msg<span class="token punctuation">:</span> <span class="token class-name">MempoolSyncMsg</span> <span class="token operator">=</span>
                    <span class="token punctuation">::</span><span class="token namespace">protobuf<span class="token punctuation">::</span></span><span class="token function">parse_from_bytes</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>mdata<span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> transaction<span class="token punctuation">:</span> <span class="token class-name">SignedTransaction</span> <span class="token operator">=</span>
                    <span class="token class-name">SignedTransaction</span><span class="token punctuation">::</span><span class="token function">from_proto</span><span class="token punctuation">(</span>sync_msg<span class="token punctuation">.</span><span class="token function">take_transactions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// send it to peer,\u624B\u5DE5\u8F6C\u53D1\u7ED9\u76F8\u5E94\u7684\u63A5\u6536\u65B9</span>
                <span class="token keyword">let</span> receiver_network_notif_tx<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token namespace">channel<span class="token punctuation">::</span></span><span class="token class-name">Sender</span><span class="token operator">&lt;</span><span class="token class-name">NetworkNotification</span><span class="token operator">&gt;</span> <span class="token operator">=</span>
                    <span class="token keyword">self</span><span class="token punctuation">.</span>network_notifs_txs<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>peer_id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">block_on</span><span class="token punctuation">(</span>
                    receiver_network_notif_tx<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">NetworkNotification</span><span class="token punctuation">::</span><span class="token class-name">RecvMessage</span><span class="token punctuation">(</span><span class="token operator">*</span>peer<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6D4B\u8BD5\u4EE3\u7801\u53EF\u4EE5\u7B80\u5316,\u76F4\u63A5\u7B49\u5F85\u53D1\u9001\u5B8C\u6BD5.</span>
                           <span class="token comment">// \u6211\u7684\u7406\u89E3\u662F\u5728async\u51FD\u6570\u4E2D\u53EF\u4EE5\u4F7F\u7528await,\u666E\u901A\u51FD\u6570\u4E2D\u7B49\u5F85\u53EA\u80FDblock_on,</span>
                           <span class="token comment">// \u800C\u8FD9\u4E2A\u4F1A\u771F\u7684\u963B\u585E\u7EBF\u7A0B.</span>

                <span class="token comment">// await message delivery</span>
                <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">wait_for_event</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>peer_id<span class="token punctuation">,</span> <span class="token class-name">SharedMempoolNotification</span><span class="token punctuation">::</span><span class="token class-name">NewTransactions</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//peer_id\u8FD9\u4E2A\u63A5\u6536\u65B9\u6536\u5230Tx\u540E\u4F1A\u5411\u8BA2\u9605\u65B9\u53D1\u5E03\`NewTransactions\`\u4E8B\u4EF6</span>

                <span class="token comment">// verify transaction was inserted into Mempool</span>
                <span class="token keyword">let</span> mempool <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>mempools<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>peer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> block <span class="token operator">=</span> mempool<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get_block</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token class-name">HashSet</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u786E\u4FDD\u8FD9\u4E2A\u5E7F\u64AD\u51FA\u53BB\u7684Tx\u4F1A\u88AB\u6253\u5305,\u4E5F\u5C31\u662F\u4E0D\u4F1A\u5E7F\u64AD\u81EA\u5DF1\u8BA4\u4E3A\u65E0\u6548\u7684Tx,\u81EA\u5DF1\u8BA4\u4E3Aseq\u4E0D\u8FDE\u7EED\u7684tx</span>
                <span class="token macro property">assert!</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>t<span class="token closure-punctuation punctuation">|</span></span> t <span class="token operator">==</span> <span class="token operator">&amp;</span>transaction<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//SignedTransaction\u5B9E\u73B0\u4E86eq</span>
                <span class="token punctuation">(</span>transaction<span class="token punctuation">,</span> peer_id<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            _ <span class="token operator">=&gt;</span> <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;peer {:?} didn&#39;t broadcast transaction&quot;</span><span class="token punctuation">,</span> peer<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h3 id="_3-3-\u4E00\u4E2A\u57FA\u672C\u6D4B\u8BD5case" tabindex="-1">3.3 \u4E00\u4E2A\u57FA\u672C\u6D4B\u8BD5case <a class="header-anchor" href="#_3-3-\u4E00\u4E2A\u57FA\u672C\u6D4B\u8BD5case" aria-hidden="true">#</a></h3><div class="language-rust line-numbers-mode"><pre><code>
<span class="token attribute attr-name">#[test]</span>
<span class="token keyword">fn</span> <span class="token function-definition function">test_basic_flow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">(</span>peer_a<span class="token punctuation">,</span> peer_b<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">PeerId</span><span class="token punctuation">::</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">PeerId</span><span class="token punctuation">::</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5EFA\u7ACB\u8D77\u6BCF\u4E2A\u8282\u70B9\u7684\u901A\u4FE1Channel</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> smp <span class="token operator">=</span> <span class="token class-name">SharedMempoolNetwork</span><span class="token punctuation">::</span><span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token macro property">vec!</span><span class="token punctuation">[</span>peer_a<span class="token punctuation">,</span> peer_b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// peer_a \u4E3B\u52A8\u6DFB\u52A0\u4E86\u4E09\u7B14\u8FDE\u7EED\u4EA4\u6613</span>
    smp<span class="token punctuation">.</span><span class="token function">add_txns</span><span class="token punctuation">(</span>
        <span class="token operator">&amp;</span>peer_a<span class="token punctuation">,</span>
        <span class="token macro property">vec!</span><span class="token punctuation">[</span>
            <span class="token class-name">TestTransaction</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">TestTransaction</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">TestTransaction</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// A discovers new peer B</span>
    smp<span class="token punctuation">.</span><span class="token function">send_event</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>peer_a<span class="token punctuation">,</span> <span class="token class-name">NetworkNotification</span><span class="token punctuation">::</span><span class="token class-name">NewPeer</span><span class="token punctuation">(</span>peer_b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> seq <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span><span class="token number">3</span> <span class="token punctuation">{</span>
        <span class="token comment">// A attempts to send message,\u56E0\u4E3A\u6307\u5B9A\u7684</span>
        <span class="token keyword">let</span> transaction <span class="token operator">=</span> smp<span class="token punctuation">.</span><span class="token function">deliver_message</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>peer_a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>transaction<span class="token punctuation">.</span><span class="token function">sequence_number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> seq<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="_4-\u7ED3\u675F\u8BED" tabindex="-1">4. \u7ED3\u675F\u8BED <a class="header-anchor" href="#_4-\u7ED3\u675F\u8BED" aria-hidden="true">#</a></h2><p>\u4ECE\u6574\u4F53\u6765\u8BF4Libra\u7684mempool\u548C\u4EE5\u592A\u574A\u76F8\u6BD4,\u7B80\u5355\u4E86\u5F88\u591A,\u6211\u89C9\u5F97\u6709\u4E24\u4E2A\u539F\u56E0:</p><ol><li>\u672C\u8EAB\u662F\u4E00\u4E2A\u8054\u76DF\u94FE,\u5BF9\u4E8E\u8282\u70B9\u7684\u5DE5\u4F5C\u73AF\u5883\u53EF\u4EE5\u6709\u66F4\u9AD8\u7684\u8981\u6C42.\u540C\u65F6\u4E0D\u4F1A\u53D1\u751F\u5206\u53C9.</li><li>Tx\u5F15\u5165\u4E86\u8D85\u65F6\u6982\u5FF5,\u53EF\u4EE5\u5927\u5E45\u7B80\u5316\u5904\u7406\u903B\u8F91</li></ol><p>\u4ECE\u6574\u4F53\u529F\u80FD\u6765\u8BF4,\u8FD9\u4E2A\u6A21\u5757\u548C\u5176\u4ED6\u516C\u94FE\u7684TxPool\u6A21\u5757\u53C8\u662F\u975E\u5E38\u76F8\u4F3C\u7684,\u57FA\u672C\u4E0A\u5C31\u662F\u6536\u96C6\u7BA1\u7406Tx,\u4E3A\u5171\u8BC6\u6A21\u5757\u63D0\u4F9B\u53EF\u4EE5\u6253\u5305\u7684Tx.</p><p>\u540C\u65F6\u6211\u4EEC\u4E5F\u770B\u5230rust\u8FDB\u6B65\u795E\u901F,\u76EE\u524D\u7684tokio\u5F02\u6B65\u6846\u67B6\u5DF2\u7ECF\u975E\u5E38\u5B8C\u5584,\u518D\u52A0\u4E0Aasync,await\u5173\u952E\u5B57\u7684\u52A0\u6301,\u7F16\u5199\u5F02\u6B65\u7A0B\u5E8F\u5DF2\u7ECF\u6BD4\u8F83\u7B80\u5355\u76F4\u63A5\u4E86.</p>`,29),i=[c,l,u];function r(k,m,b,d,_,f){return e(),t("div",null,i)}var g=p(o,[["render",r]]);export{h as __pageData,g as default};
