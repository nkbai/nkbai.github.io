import{_ as n,c as s,o as a,a as p}from"./app.b603026e.js";const h='{"title":"\u62D3\u6251\u6392\u5E8F\u5728\u6BD4\u7279\u5E01Tx\u7BA1\u7406\u4E2D\u7684\u4F7F\u7528","description":"","frontmatter":{"title":"\u62D3\u6251\u6392\u5E8F\u5728\u6BD4\u7279\u5E01Tx\u7BA1\u7406\u4E2D\u7684\u4F7F\u7528","date":"2019-05-19T10:19:16.778Z","draft":false,"markup":"mmark"},"headers":[{"level":2,"title":"\u4EC0\u4E48\u662F\u62D3\u6251\u6392\u5E8F","slug":"\u4EC0\u4E48\u662F\u62D3\u6251\u6392\u5E8F"},{"level":3,"title":"\u4E00\u4E2A\u4F8B\u5B50","slug":"\u4E00\u4E2A\u4F8B\u5B50"},{"level":3,"title":"\u62D3\u6251\u6392\u5E8F\u7684\u8FC7\u7A0B","slug":"\u62D3\u6251\u6392\u5E8F\u7684\u8FC7\u7A0B"},{"level":2,"title":"\u4F7F\u7528Golang\u5B9E\u73B0\u5BF9\u6BD4\u7279\u5E01\u4EA4\u6613\u7684\u62D3\u6251\u6392\u5E8F","slug":"\u4F7F\u7528golang\u5B9E\u73B0\u5BF9\u6BD4\u7279\u5E01\u4EA4\u6613\u7684\u62D3\u6251\u6392\u5E8F"},{"level":3,"title":"\u6570\u636E\u7ED3\u6784","slug":"\u6570\u636E\u7ED3\u6784"},{"level":3,"title":"\u521B\u5EFAhashGraph","slug":"\u521B\u5EFAhashgraph"},{"level":3,"title":"\u83B7\u53D6\u5F53\u524D\u6709\u591A\u5C11\u5F20\u56FE","slug":"\u83B7\u53D6\u5F53\u524D\u6709\u591A\u5C11\u5F20\u56FE"},{"level":3,"title":"\u62D3\u6251\u6392\u5E8F","slug":"\u62D3\u6251\u6392\u5E8F"}],"relativePath":"blockchain/btcwallet/\u62D3\u6251\u6392\u5E8F\u5728\u6BD4\u7279\u5E01Tx\u7BA1\u7406\u4E2D\u7684\u4F7F\u7528.md"}',t={},e=p(`<h1 id="\u4F7F\u7528\u62D3\u6251\u6392\u5E8F\u7BA1\u7406\u6BD4\u7279\u5E01\u7684tx" tabindex="-1">\u4F7F\u7528\u62D3\u6251\u6392\u5E8F\u7BA1\u7406\u6BD4\u7279\u5E01\u7684Tx <a class="header-anchor" href="#\u4F7F\u7528\u62D3\u6251\u6392\u5E8F\u7BA1\u7406\u6BD4\u7279\u5E01\u7684tx" aria-hidden="true">#</a></h1><p>\u6BD4\u7279\u5E01\u91C7\u7528\u7684\u662FUTXO\u6A21\u578B,\u5BF9\u4E8E\u90A3\u4E9B\u672A\u88AB\u6253\u5305\u7684\u4EA4\u6613,\u9700\u8981\u4E0D\u65AD\u7684\u5411\u4E34\u8FD1\u8282\u70B9\u8FDB\u884C\u5E7F\u64AD. \u90A3\u4E48\u5E7F\u64AD\u8FD9\u4E9B\u4EA4\u6613\u7684\u65F6\u5019\u5C31\u9700\u8981\u6709\u4E00\u5B9A\u7684\u987A\u5E8F,\u5F53\u7136\u6700\u597D\u7684\u65B9\u5F0F\u5C31\u662F\u6309\u7167\u4F9D\u8D56\u987A\u5E8F\u8FDB\u884C\u6392\u5E8F.</p><h2 id="\u4EC0\u4E48\u662F\u62D3\u6251\u6392\u5E8F" tabindex="-1">\u4EC0\u4E48\u662F\u62D3\u6251\u6392\u5E8F <a class="header-anchor" href="#\u4EC0\u4E48\u662F\u62D3\u6251\u6392\u5E8F" aria-hidden="true">#</a></h2><p>\u5728\u56FE\u8BBA\u4E2D\uFF0C\u62D3\u6251\u6392\u5E8F\uFF08Topological Sorting\uFF09\u662F\u4E00\u4E2A\u6709\u5411\u65E0\u73AF\u56FE\uFF08DAG, Directed Acyclic Graph\uFF09\u7684\u6240\u6709\u9876\u70B9\u7684\u7EBF\u6027\u5E8F\u5217\u3002\u4E14\u8BE5\u5E8F\u5217\u5FC5\u987B\u6EE1\u8DB3\u4E0B\u9762\u4E24\u4E2A\u6761\u4EF6\uFF1A</p><p>\u6BCF\u4E2A\u9876\u70B9\u51FA\u73B0\u4E14\u53EA\u51FA\u73B0\u4E00\u6B21\u3002 \u82E5\u5B58\u5728\u4E00\u6761\u4ECE\u9876\u70B9 A \u5230\u9876\u70B9 B \u7684\u8DEF\u5F84\uFF0C\u90A3\u4E48\u5728\u5E8F\u5217\u4E2D\u9876\u70B9 A \u51FA\u73B0\u5728\u9876\u70B9 B \u7684\u524D\u9762\u3002 \u6709\u5411\u65E0\u73AF\u56FE\uFF08DAG\uFF09\u624D\u6709\u62D3\u6251\u6392\u5E8F\uFF0C\u975EDAG\u56FE\u6CA1\u6709\u62D3\u6251\u6392\u5E8F\u4E00\u8BF4\u3002</p><h3 id="\u4E00\u4E2A\u4F8B\u5B50" tabindex="-1">\u4E00\u4E2A\u4F8B\u5B50 <a class="header-anchor" href="#\u4E00\u4E2A\u4F8B\u5B50" aria-hidden="true">#</a></h3><pre class="mermaid loading">graph LR
TX1((TX1))
TX2((TX2))
TX3((TX3))
TX4((TX4))
TX5((TX5))
TX1 --&gt; TX2
TX1 --&gt; TX4
TX2 --&gt; TX4
TX2 --&gt; TX3
TX4 --&gt; TX3
TX4 --&gt; TX5
TX3 --&gt; TX5</pre><p>\u8FD9\u91CCTxPool\u4E2D\u6211\u4EEC\u6709\u4E94\u4E2ATx, \u5176\u4E2DTx1\u6709\u4E24\u4E2A\u8F93\u51FA\u5206\u522B\u88ABTX2,TX4\u5F15\u7528 \u800CTX2\u6709\u4E24\u4E2A\u4E0D\u540C\u7684\u8F93\u51FA,\u5206\u522B\u88ABTX4\u548CTX3\u5F15\u7528 TX4\u6709\u4E24\u4E2A\u8F93\u51FA,\u5206\u522B\u88ABTX3,TX5\u5F15\u7528.</p><p>Tx1\u6709\u4E24\u4E2A\u8F93\u51FA\u5206\u522B\u88ABTX2,TX4\u5F15\u7528 \u8FD9\u53E5\u8BDD\u5565\u610F\u601D\u5462? \u5C31\u662FTX1\u6709\u4E24\u4E2Aoutpoint,\u5206\u522B\u51FA\u73B0\u5728Tx2\u548CTx4\u7684TxIn\u4E2D.</p><p>\u5982\u679C\u8FD9\u65F6\u5019\u8981\u5BF9\u5916\u5E7F\u64AD\u4EA4\u6613,\u90A3\u4E48\u6700\u597D\u7684\u987A\u5E8F\u663E\u7136\u5E94\u8BE5\u662FTX1,TX2,TX4,TX3,TX5</p><h3 id="\u62D3\u6251\u6392\u5E8F\u7684\u8FC7\u7A0B" tabindex="-1">\u62D3\u6251\u6392\u5E8F\u7684\u8FC7\u7A0B <a class="header-anchor" href="#\u62D3\u6251\u6392\u5E8F\u7684\u8FC7\u7A0B" aria-hidden="true">#</a></h3><ol><li>\u4ECE DAG \u56FE\u4E2D\u9009\u62E9\u4E00\u4E2A \u6CA1\u6709\u524D\u9A71\uFF08\u5373\u5165\u5EA6\u4E3A0\uFF09\u7684\u9876\u70B9\u5E76\u8F93\u51FA\u3002</li><li>\u4ECE\u56FE\u4E2D\u5220\u9664\u8BE5\u9876\u70B9\u548C\u6240\u6709\u4EE5\u5B83\u4E3A\u8D77\u70B9\u7684\u6709\u5411\u8FB9\u3002</li><li>\u91CD\u590D 1 \u548C 2 \u76F4\u5230\u5F53\u524D\u7684 DAG \u56FE\u4E3A\u7A7A\u6216\u5F53\u524D\u56FE\u4E2D\u4E0D\u5B58\u5728\u65E0\u524D\u9A71\u7684\u9876\u70B9\u4E3A\u6B62\u3002\u540E\u4E00\u79CD\u60C5\u51B5\u8BF4\u660E\u6709\u5411\u56FE\u4E2D\u5FC5\u7136\u5B58\u5728\u73AF\u3002</li></ol><h2 id="\u4F7F\u7528golang\u5B9E\u73B0\u5BF9\u6BD4\u7279\u5E01\u4EA4\u6613\u7684\u62D3\u6251\u6392\u5E8F" tabindex="-1">\u4F7F\u7528Golang\u5B9E\u73B0\u5BF9\u6BD4\u7279\u5E01\u4EA4\u6613\u7684\u62D3\u6251\u6392\u5E8F <a class="header-anchor" href="#\u4F7F\u7528golang\u5B9E\u73B0\u5BF9\u6BD4\u7279\u5E01\u4EA4\u6613\u7684\u62D3\u6251\u6392\u5E8F" aria-hidden="true">#</a></h2><p>\u76F8\u5173\u6E90\u7801\u4F4D\u4E8E<a href="https://github.com/btcsuite/btcwallet/blob/master/wtxmgr/kahnsort.go" target="_blank" rel="noopener noreferrer">kahnsort.go</a>,\u611F\u5174\u8DA3\u7684\u670B\u53CB\u53EF\u4EE5\u67E5\u770B\u6E90\u7801.</p><ol><li>\u9996\u5148\u5C06Tx\u7EC4\u6210\u56FE</li><li>\u5206\u522B\u5BF9\u5404\u4E2A\u72EC\u7ACB\u7684\u56FE\u8FDB\u884C\u62D3\u6251\u6392\u5E8F</li></ol><h3 id="\u6570\u636E\u7ED3\u6784" tabindex="-1">\u6570\u636E\u7ED3\u6784 <a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a></h3><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">type</span> graphNode <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	value    <span class="token operator">*</span>wire<span class="token punctuation">.</span>MsgTx
	outEdges <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>chainhash<span class="token punctuation">.</span>Hash <span class="token comment">//\u6307\u5411\u5C06value\u4F5C\u4E3ATxIn\u7684\u90A3\u4E9BTx</span>
	inDegree <span class="token builtin">int</span> <span class="token comment">//value\u8FD9\u4E2ATx\u4F9D\u8D56\u591A\u5C11\u4E2ATx</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> hashGraph <span class="token keyword">map</span><span class="token punctuation">[</span>chainhash<span class="token punctuation">.</span>Hash<span class="token punctuation">]</span>graphNod
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>graphNode\u8868\u793A\u56FE\u4E2D\u7684\u6BCF\u4E2A\u8282\u70B9,\u5176\u4E2DinDegree\u4FDD\u5B58\u81EA\u5DF1\u6709\u591A\u5C11\u5165\u5EA6,\u5982\u679C\u5165\u5EA6\u4E3A0\u8868\u793A\u6CA1\u6709\u4EFB\u4F55\u4F9D\u8D56.\u5165\u5EA6\u4E3A3\u5219\u8868\u793A\u8BE5Tx\u6709\u591A\u4E2A\u8F93\u5165,\u5176\u4E2D\u6709\u4E09\u4E2A\u90FD\u662F\u672A\u4E0A\u94FE\u7684\u4EA4\u6613. outEdges\u5219\u8868\u793A\u54EA\u4E9B\u4F9D\u8D56\u81EA\u5DF1\u7684Tx\u7684Hash\u503C. \u5728\u533A\u5757\u94FE\u4E2D\u5E7F\u6CDB\u4F7F\u7528Hash\u503C,\u5927\u5BB6\u9700\u8981\u4E60\u60EF.</p><p>\u9488\u5BF9\u521A\u521A\u7684\u4F8B\u5B50,\u90A3\u4E48TX1\u8FD9\u4E2A\u8282\u70B9\u5E94\u8BE5\u662F\u5982\u4E0B</p><div class="language-go line-numbers-mode"><pre><code><span class="token punctuation">{</span>
    value<span class="token punctuation">:</span>TX1<span class="token punctuation">,</span>
    outEdges<span class="token punctuation">:</span><span class="token punctuation">{</span>TX2_Hash<span class="token punctuation">,</span>TX4_Hash<span class="token punctuation">}</span><span class="token punctuation">,</span>
    inDegeree<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u800C\u7F13\u51B2\u6C60\u4E2D\u7684\u6240\u6709Tx\u5219\u7528hashGraph\u6765\u8868\u793A,\u4E3A\u4EC0\u4E48\u4E0D\u7528\u4F20\u7EDF\u7684Graph\u6765\u8868\u793A\u5462,\u662F\u56E0\u4E3A\u8003\u8651\u5230\u7F13\u51B2\u6C60\u4E2D\u7684Tx\u5F88\u591A\u65F6\u5019\u6CA1\u6709\u4F9D\u8D56\u5173\u7CFB,\u8FD9\u65F6\u5019\u5B9E\u9645\u4E0A\u4E0D\u662F\u4E00\u5F20\u56FE,\u800C\u662F\u591A\u5F20\u56FE,\u4E5F\u5C31\u662F\u4E00\u4E2AGraph\u7684\u6570\u7EC4. \u56E0\u6B64\u901A\u8FC7hashGraph\u8FD9\u79CDmap\u7684\u5F62\u5F0F\u8868\u793A\u66F4\u7075\u6D3B.</p><h3 id="\u521B\u5EFAhashgraph" tabindex="-1">\u521B\u5EFAhashGraph <a class="header-anchor" href="#\u521B\u5EFAhashgraph" aria-hidden="true">#</a></h3><p>\u9996\u5148\u8981\u8BB2\u7F13\u51B2\u6C60\u4E2D\u7684Tx\u8868\u8FBE\u6210\u56FE makeGraph\u7684\u8F93\u5165\u5C31\u662F\u6240\u6709Tx,\u5176\u4E2Dmap\u7684key\u5C31\u662FTx\u7684Hash.</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">makeGraph</span><span class="token punctuation">(</span>set <span class="token keyword">map</span><span class="token punctuation">[</span>chainhash<span class="token punctuation">.</span>Hash<span class="token punctuation">]</span><span class="token operator">*</span>wire<span class="token punctuation">.</span>MsgTx<span class="token punctuation">)</span> hashGraph <span class="token punctuation">{</span>
	graph <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span>hashGraph<span class="token punctuation">)</span>

	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> set <span class="token punctuation">{</span>
        <span class="token comment">//\u9996\u5148\u904D\u5386\u6240\u6709\u7684\u4EA4\u6613</span>
		txHash <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">TxHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> graph<span class="token punctuation">[</span>txHash<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
            <span class="token comment">//\u5982\u679C\u8BE5\u4EA4\u6613\u6CA1\u6709\u5BF9\u5E94\u7684\u8282\u70B9,\u5C31\u521B\u5EFA\u4ED6.</span>
			graph<span class="token punctuation">[</span>txHash<span class="token punctuation">]</span> <span class="token operator">=</span> graphNode<span class="token punctuation">{</span>value<span class="token punctuation">:</span> tx<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

	inputLoop<span class="token punctuation">:</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> input <span class="token operator">:=</span> <span class="token keyword">range</span> tx<span class="token punctuation">.</span>TxIn <span class="token punctuation">{</span>
            <span class="token comment">//\u904D\u5386\u8BE5Tx\u7684\u6240\u6709\u8F93\u5165,\u627E\u5BFB\u4F9D\u8D56</span>
			<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> set<span class="token punctuation">[</span>input<span class="token punctuation">.</span>PreviousOutPoint<span class="token punctuation">.</span>Hash<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
                <span class="token comment">//\u5982\u679C\u4F9D\u8D56\u7684Tx\u4E0D\u5728\u7F13\u51B2\u6C60\u4E2D,\u6709\u4E24\u79CD\u60C5\u51B5</span>
                <span class="token comment">//1. \u5B64\u513F\u4EA4\u6613</span>
                <span class="token comment">//2. \u4F9D\u8D56\u7684\u4EA4\u6613\u5DF2\u7ECF\u4E0A\u94FE</span>
				<span class="token keyword">continue</span>
			<span class="token punctuation">}</span>
            <span class="token comment">//\u5F53\u524D\u4EA4\u6613\u4F9D\u8D56\u7684\u5176\u4E2D\u4E00\u4E2A\u4EA4\u6613</span>
			inputNode <span class="token operator">:=</span> graph<span class="token punctuation">[</span>input<span class="token punctuation">.</span>PreviousOutPoint<span class="token punctuation">.</span>Hash<span class="token punctuation">]</span>

			<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> outEdge <span class="token operator">:=</span> <span class="token keyword">range</span> inputNode<span class="token punctuation">.</span>outEdges <span class="token punctuation">{</span>
                <span class="token comment">//\u5982\u679C\u5DF2\u7ECF\u5B58\u5728\u4E00\u6761\u8FB9,\u8DF3\u8FC7</span>
				<span class="token keyword">if</span> <span class="token operator">*</span>outEdge <span class="token operator">==</span> input<span class="token punctuation">.</span>PreviousOutPoint<span class="token punctuation">.</span>Hash <span class="token punctuation">{</span>
					<span class="token keyword">continue</span> inputLoop
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

            <span class="token comment">/*
            \u5728Input\u7684outEdges\u4E2D\u52A0\u5165\u4E00\u6761\u8FB9,
            \u540C\u65F6\u5F53\u524D\u8282\u70B9\u7684\u5165\u5EA6\u8981\u52A01
            */</span>
			inputTx <span class="token operator">:=</span> inputNode<span class="token punctuation">.</span>value
			<span class="token keyword">if</span> inputTx <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u4E4B\u6240\u4EE5\u5B58\u5728inputTx\u4E3A\u7A7A\u7684\u60C5\u51B5,\u662F\u4E0E\u4EA4\u6613\u7684\u904D\u5386\u987A\u5E8F\u6709\u5173\u7CFB</span>
				inputTx <span class="token operator">=</span> set<span class="token punctuation">[</span>input<span class="token punctuation">.</span>PreviousOutPoint<span class="token punctuation">.</span>Hash<span class="token punctuation">]</span>
			<span class="token punctuation">}</span>
			graph<span class="token punctuation">[</span>input<span class="token punctuation">.</span>PreviousOutPoint<span class="token punctuation">.</span>Hash<span class="token punctuation">]</span> <span class="token operator">=</span> graphNode<span class="token punctuation">{</span>
				value<span class="token punctuation">:</span>    inputTx<span class="token punctuation">,</span>
				outEdges<span class="token punctuation">:</span> <span class="token function">append</span><span class="token punctuation">(</span>inputNode<span class="token punctuation">.</span>outEdges<span class="token punctuation">,</span> <span class="token operator">&amp;</span>txHash<span class="token punctuation">)</span><span class="token punctuation">,</span>
				inDegree<span class="token punctuation">:</span> inputNode<span class="token punctuation">.</span>inDegree<span class="token punctuation">,</span>
			<span class="token punctuation">}</span>
			node <span class="token operator">:=</span> graph<span class="token punctuation">[</span>txHash<span class="token punctuation">]</span>
			graph<span class="token punctuation">[</span>txHash<span class="token punctuation">]</span> <span class="token operator">=</span> graphNode<span class="token punctuation">{</span>
				value<span class="token punctuation">:</span>    tx<span class="token punctuation">,</span>
				outEdges<span class="token punctuation">:</span> node<span class="token punctuation">.</span>outEdges<span class="token punctuation">,</span>
				inDegree<span class="token punctuation">:</span> node<span class="token punctuation">.</span>inDegree <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> graph
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div><h3 id="\u83B7\u53D6\u5F53\u524D\u6709\u591A\u5C11\u5F20\u56FE" tabindex="-1">\u83B7\u53D6\u5F53\u524D\u6709\u591A\u5C11\u5F20\u56FE <a class="header-anchor" href="#\u83B7\u53D6\u5F53\u524D\u6709\u591A\u5C11\u5F20\u56FE" aria-hidden="true">#</a></h3><p>graphRoots\u5728hashGraph\u4E2D\u627E\u51FA\u6240\u6709\u5165\u5EA6\u4E3A0\u7684\u8282\u70B9,\u8FD9\u4E9B\u8282\u70B9\u5206\u522B\u5C31\u662F\u6BCF\u4E00\u4E2A\u72EC\u7ACB\u7684\u56FE\u7684\u5165\u53E3.</p><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">graphRoots</span><span class="token punctuation">(</span>graph hashGraph<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>wire<span class="token punctuation">.</span>MsgTx <span class="token punctuation">{</span>
	roots <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>wire<span class="token punctuation">.</span>MsgTx<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> node <span class="token operator">:=</span> <span class="token keyword">range</span> graph <span class="token punctuation">{</span>
		<span class="token keyword">if</span> node<span class="token punctuation">.</span>inDegree <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			roots <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>roots<span class="token punctuation">,</span> node<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> roots
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u62D3\u6251\u6392\u5E8F" tabindex="-1">\u62D3\u6251\u6392\u5E8F <a class="header-anchor" href="#\u62D3\u6251\u6392\u5E8F" aria-hidden="true">#</a></h3><p>\u6709\u4E86\u8FD9\u4E9B\u7EC4\u4EF6,\u518D\u6765\u770B\u62D3\u6251\u6392\u5E8F\u5C31\u4F1A\u5F88\u7B80\u5355,\u6211\u5728\u91CD\u590D\u4E00\u4E0B\u5F00\u59CB\u7684\u601D\u8DEF:</p><ol><li>\u4ECE DAG \u56FE\u4E2D\u9009\u62E9\u4E00\u4E2A \u6CA1\u6709\u524D\u9A71\uFF08\u5373\u5165\u5EA6\u4E3A0\uFF09\u7684\u9876\u70B9\u5E76\u8F93\u51FA\u3002</li><li>\u4ECE\u56FE\u4E2D\u5220\u9664\u8BE5\u9876\u70B9\u548C\u6240\u6709\u4EE5\u5B83\u4E3A\u8D77\u70B9\u7684\u6709\u5411\u8FB9\u3002</li><li>\u91CD\u590D 1 \u548C 2 \u76F4\u5230\u5F53\u524D\u7684 DAG \u56FE\u4E3A\u7A7A\u6216\u5F53\u524D\u56FE\u4E2D\u4E0D\u5B58\u5728\u65E0\u524D\u9A71\u7684\u9876\u70B9\u4E3A\u6B62\u3002\u540E\u4E00\u79CD\u60C5\u51B5\u8BF4\u660E\u6709\u5411\u56FE\u4E2D\u5FC5\u7136\u5B58\u5728\u73AF\u3002</li></ol><div class="language-go line-numbers-mode"><pre><code><span class="token keyword">func</span> <span class="token function">DependencySort</span><span class="token punctuation">(</span>txs <span class="token keyword">map</span><span class="token punctuation">[</span>chainhash<span class="token punctuation">.</span>Hash<span class="token punctuation">]</span><span class="token operator">*</span>wire<span class="token punctuation">.</span>MsgTx<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>wire<span class="token punctuation">.</span>MsgTx <span class="token punctuation">{</span>
	graph <span class="token operator">:=</span> <span class="token function">makeGraph</span><span class="token punctuation">(</span>txs<span class="token punctuation">)</span>
	s <span class="token operator">:=</span> <span class="token function">graphRoots</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span>

    <span class="token comment">//\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5,\u5C31\u662F\u6240\u6709\u7684\u4EA4\u6613\u90FD\u662F\u72EC\u7ACB\u7684,\u4E92\u76F8\u4E0D\u4F9D\u8D56.</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">len</span><span class="token punctuation">(</span>txs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> s
	<span class="token punctuation">}</span>
    <span class="token comment">/*
    s\u4E2D\u4FDD\u5B58\u7684\u5168\u90FD\u662F\u5165\u5EA6\u4E3A0\u7684\u8282\u70B9,
    sorted\u4E2D\u7684\u662F\u5DF2\u7ECF\u6309\u7167\u4F9D\u8D56\u6392\u8FC7\u5E8F\u7684Tx
    */</span>
	sorted <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>wire<span class="token punctuation">.</span>MsgTx<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>txs<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u6B65\u9AA41,\u53D6\u4E00\u4E2A\u5165\u5EA6\u4E3A0\u7684\u8282\u70B9</span>
		tx <span class="token operator">:=</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        s <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
		sorted <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>sorted<span class="token punctuation">,</span> tx<span class="token punctuation">)</span>

        n <span class="token operator">:=</span> graph<span class="token punctuation">[</span>tx<span class="token punctuation">.</span><span class="token function">TxHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token comment">//\u6B65\u9AA42: \u4ECE\u56FE\u4E2D\u5220\u9664\u8BE5\u9876\u70B9\u548C\u6240\u6709\u4EE5\u5B83\u4E3A\u8D77\u70B9\u7684\u6709\u5411\u8FB9\u3002</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> mHash <span class="token operator">:=</span> <span class="token keyword">range</span> n<span class="token punctuation">.</span>outEdges <span class="token punctuation">{</span>
			m <span class="token operator">:=</span> graph<span class="token punctuation">[</span><span class="token operator">*</span>mHash<span class="token punctuation">]</span>
			<span class="token keyword">if</span> m<span class="token punctuation">.</span>inDegree <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
				m<span class="token punctuation">.</span>inDegree<span class="token operator">--</span>
                graph<span class="token punctuation">[</span><span class="token operator">*</span>mHash<span class="token punctuation">]</span> <span class="token operator">=</span> m
                <span class="token comment">//\u5165\u5EA6\u4E3A0\u7684,\u52A0\u5165s</span>
				<span class="token keyword">if</span> m<span class="token punctuation">.</span>inDegree <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
					s <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> m<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u7ED3\u675F\u7684\u65F6\u5019\u6240\u6709\u7684Tx\u5DF2\u7ECF\u6309\u7167\u4F9D\u8D56\u6392\u597D\u5E8F\u4E86</span>
	<span class="token keyword">return</span> sorted
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div>`,31),o=[e];function c(l,u,r,i,k,b){return a(),s("div",null,o)}var d=n(t,[["render",c]]);export{h as __pageData,d as default};
