import{_ as s,c as n,o as a,N as l}from"./chunks/framework.3a9190c5.js";const A=JSON.parse('{"title":"6.libra的mempool模块解读-1","description":"","frontmatter":{"title":"6.libra的mempool模块解读-1","date":"2019-07-02T03:00:34.000Z","draft":false,"tags":["rust","blockchain","libra"],"series":["libra"],"categories":["技术相关"]},"headers":[],"relativePath":"blockchain/libra/6.libria_mempool_1.md"}'),p={name:"blockchain/libra/6.libria_mempool_1.md"},o=l(`<ul><li><a href="#基本功能"> 基本功能</a></li><li><a href="#mempool的对外接口"> mempool的对外接口</a><ul><li><a href="#接受新的tx"> 接受新的Tx</a></li><li><a href="#remove_transaction-移除已打包交易"> remove_transaction 移除已打包交易</a></li><li><a href="#为consensus模块提供下一块交易数据"> 为consensus模块提供下一块交易数据</a></li><li><a href="#其他几个函数"> 其他几个函数</a></li></ul></li></ul><p>Mempool模块主要用于缓存未打包的合法交易,该模块和比特币,以太坊源码中的TxPool功能等价,只要包含两个功能:</p><ol><li>接收本地收到的Tx并验证</li><li>和其他节点之间互相同步Tx. 因为Libra使用的是不会分叉的PBFT共识,所以缓冲池的实现以及管理要简单许多.</li></ol><h2 id="基本功能" tabindex="-1">基本功能 <a class="header-anchor" href="#基本功能" aria-label="Permalink to &quot;基本功能&quot;">​</a></h2><p>mempool的功能主要是接收来自AC模块的交易,同时和其他节点之间通过网络同步交易. mempool主要用于保存可能打包的交易,主要是指验证合法的交易(包括签名合法,账户金额足够). 可以简单分类:</p><ol><li>各方面都齐备,可以进入下一块的交易. 主要是seq_number连起来的.</li><li>因为seq_number没有连续不能被打包的交易 (比如当前AccountA的Tx中包含了[2,3,4,7,8]交易,但是5没有,所以[7,8]是不可能被打包的)</li></ol><p>同时libra中也有和以太坊一样的GasPrice概念(功能也一样),因此如果对于同一账号,seq_number相同的情况下,会选择GasPrice高的那个Tx. 根据以上讨论,可以看出实际上Libra唯一的ID可以不认为是交易数据的哈希值,可以把(Address,seq_number)作为唯一的ID,当然这个在比特币以太坊等公链中也行的通. 因为在Libra中把(Address,seq_number)二元组作为Tx唯一的ID,所以其代码设计中对于Tx的管理和以太坊也不太一样.</p><p>那么什么是mempool呢? 可以通俗的认为就是一个<code>HashMap&lt;AccountAddress, BTreeMap&lt;u64, MempoolTransaction&gt;&gt;</code>, 其中这里的u64就是对应账户的seq_number. 其所有功能都是围绕着这个数据结构展开.</p><h2 id="mempool的对外接口" tabindex="-1">mempool的对外接口 <a class="header-anchor" href="#mempool的对外接口" aria-label="Permalink to &quot;mempool的对外接口&quot;">​</a></h2><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">pub</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">trait</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Mempool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //主要用于接受来自AC的新增Tx</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add_transaction_with_validation</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">grpcio</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">RpcContext</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> req</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> super</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">mempool</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">AddTransactionWithValidationRequest</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sink</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">grpcio</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">UnarySink</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">super</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">mempool</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">AddTransactionWithValidationResponse</span><span style="color:#89DDFF;">&gt;);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //服务于consensus模块,从mempool中获取下一块可以打包的交易</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_block</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">grpcio</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">RpcContext</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> req</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> super</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">mempool</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">GetBlockRequest</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sink</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">grpcio</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">UnarySink</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">super</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">mempool</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">GetBlockResponse</span><span style="color:#89DDFF;">&gt;);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //服务于consensus模块,当交易被打包以后,缓存的相关Tx就可以移除了.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">commit_transactions</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">grpcio</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">RpcContext</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> req</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> super</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">mempool</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">CommitTransactionsRequest</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sink</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">grpcio</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">UnarySink</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">super</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">mempool</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">CommitTransactionsResponse</span><span style="color:#89DDFF;">&gt;);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //健康检查,主要是检查缓冲区是否放得下更多Tx</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">health_check</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">grpcio</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">RpcContext</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> req</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> super</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">mempool</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">HealthCheckRequest</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sink</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">grpcio</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">UnarySink</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">super</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">mempool</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">HealthCheckResponse</span><span style="color:#89DDFF;">&gt;);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>MempoolService的实现位于<code>mempool/src/mempool_service.rs</code>,这里的实现就是对于grpc接口数据的处理,真正的处理逻辑位于<code>CoreMempool</code></p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">derive</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Clone</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#F78C6C;">pub</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">crate</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MempoolService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">pub</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">crate</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> core_mempool</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Arc</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Mutex</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">CoreMempool</span><span style="color:#89DDFF;">&gt;&gt;,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">pub</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Mempool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // stores metadata of all transactions in mempool (of all states)</span></span>
<span class="line"><span style="color:#A6ACCD;">    transactions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TransactionStore</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> //这是系统的核心</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    sequence_number_cache</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LruCache</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">AccountAddress</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#676E95;font-style:italic;"> //这里保存的是AccountAddress对应的下一个可以打包的Tx对应的seq_number</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // temporary DS. TODO: eventually retire it</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // for each transaction, entry with timestamp is added when transaction enters mempool</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // used to measure e2e latency of transaction in system, as well as time it takes to pick it up</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // by consensus</span></span>
<span class="line"><span style="color:#A6ACCD;">    metrics_cache</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TtlCache</span><span style="color:#89DDFF;">&lt;(</span><span style="color:#FFCB6B;">AccountAddress</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">i64</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#676E95;font-style:italic;"> //这个是为了</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //一个交易在缓冲池中不能呆的太久,如果迟迟不能被打包会被定期清理掉.这个时间就是其在缓冲池中呆的最长时间</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">pub</span><span style="color:#A6ACCD;"> system_transaction_timeout</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Duration</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/// TransactionStore is in-memory storage for all transactions in mempool</span></span>
<span class="line"><span style="color:#F78C6C;">pub</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TransactionStore</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // main DS</span></span>
<span class="line"><span style="color:#A6ACCD;">    transactions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HashMap</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">AccountAddress</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AccountTransactions</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 地址=&gt;{seq=&gt;Tx} 二重map,所有收集到的合法的Tx */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // indexes</span></span>
<span class="line"><span style="color:#A6ACCD;">    priority_index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PriorityIndex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 按照gas_price,expiration_time,address,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                                    * sequence_number顺序排序的所有可以打包的Tx */</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // TTLIndex based on client-specified expiration time</span></span>
<span class="line"><span style="color:#A6ACCD;">    expiration_time_index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TTLIndex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 这个过期时间是用户提交的,这个时间虽然是Duration,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                                      * 但是其实也是绝对时间,保存所有合法的Tx */</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // TTLIndex based on system expiration time</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // we keep it separate from \`expiration_time_index\` so Mempool can&#39;t be clogged</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //  by old transactions even if it hasn&#39;t received commit callbacks for a while</span></span>
<span class="line"><span style="color:#A6ACCD;">    system_ttl_index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TTLIndex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 这个时间是由mempool控制,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                                 * 在进入缓冲池的时候会设置成当时的时间加上过期时间,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                                 * 保存所有的合法Tx */</span></span>
<span class="line"><span style="color:#A6ACCD;">    timeline_index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TimelineIndex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 里面保存的timeline_id,用于mempool之间的Tx同步,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                                    * 这里面按序保存着可以打包的Tx */</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // keeps track of &quot;non-ready&quot; txns (transactions that can&#39;t be included in next block)</span></span>
<span class="line"><span style="color:#A6ACCD;">    parking_lot_index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ParkingLotIndex</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> //暂时不满足条件,不能打包的Tx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">    capacity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">usize</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    capacity_per_user</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">usize</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="接受新的tx" tabindex="-1">接受新的Tx <a class="header-anchor" href="#接受新的tx" aria-label="Permalink to &quot;接受新的Tx&quot;">​</a></h3><p>在<code>add_transaction_with_validation</code>中只是简单解析一下参数就很快进入到<code>CoreMempool</code>的<code>add_txn</code>中,我们重点解析一下这个函数.</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">    /// Used to add a transaction to the Mempool</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /// Performs basic validation: checks account&#39;s balance and sequence number</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">pub</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">crate</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add_txn</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        txn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SignedTransaction</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        gas_amount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        db_sequence_number</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;"> //已经确认的txn&#39;s sender的seq_number</span></span>
<span class="line"><span style="color:#A6ACCD;">        balance</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//这个账户的金额</span></span>
<span class="line"><span style="color:#A6ACCD;">        timeline_state</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TimelineState</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MempoolAddTransactionStatus</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">debug!</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[Mempool] Adding transaction to mempool: </span><span style="color:#89DDFF;">{}</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">{}&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sender</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">            db_sequence_number</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">signedTransaction:</span><span style="color:#89DDFF;">{</span><span style="color:#C3E88D;">:?</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> txn</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //账户余额都不够付gas费了,直接护额略</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">check_balance</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> balance</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> gas_amount</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MempoolAddTransactionStatus</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">InsufficientBalance</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cached_value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sequence_number_cache</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_mut</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sender</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sequence_number </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">match</span><span style="color:#A6ACCD;"> cached_value </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">Some</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> db_sequence_number</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">None</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> db_sequence_number</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sequence_number_cache</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sender</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> sequence_number</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> //可能sequence_number需要更新了. 如果发生了expiration呢?</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // don&#39;t accept old transactions (e.g. seq is less than account&#39;s current seq_number)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> txn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sequence_number</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> sequence_number </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MempoolAddTransactionStatus</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">InvalidSeqNumber</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //交易在缓冲池中的过期时间</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> expiration_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SystemTime</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">now</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">duration_since</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">UNIX_EPOCH</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">expect</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">init timestamp failure</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">system_transaction_timeout</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">metrics_cache</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sender</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> txn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sequence_number</span><span style="color:#89DDFF;">()),</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">Utc</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">now</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">timestamp_millis</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">Duration</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from_secs</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //MempoolTransaction指的就是在缓冲池中的Tx,为了缓冲池管理方便,增添了过期时间以及TimelineState,还有gasAmount,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //主要是为了索引</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> txn_info </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MempoolTransaction</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expiration_time</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> gas_amount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> timeline_state</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //真正的Tx,无论能否立即被打包,都在TransactionStore中保存着</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> status </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">transactions</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txn_info</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sequence_number</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        OP_COUNTERS</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">inc</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#82AAFF;">format!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">insert.</span><span style="color:#89DDFF;">{</span><span style="color:#C3E88D;">:?</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> status</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">        status</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h3 id="remove-transaction-移除已打包交易" tabindex="-1">remove_transaction 移除已打包交易 <a class="header-anchor" href="#remove-transaction-移除已打包交易" aria-label="Permalink to &quot;remove_transaction 移除已打包交易&quot;">​</a></h3><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/// This function will be called once the transaction has been stored</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /// 共识模块确定Tx被打包了,那么缓冲池中的Tx就可以移除了. is_rejected表示没有被打包</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /// 同时is_rejected为false的时候,sequence_number也告诉mempool目前sender之前的Tx都被打包了,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /// 本地的seqence_number也要更新到这里了</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">pub</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">crate</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">remove_transaction</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        sender</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">AccountAddress</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        sequence_number</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        is_rejected</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bool</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">debug!</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[Mempool] Removing transaction from mempool: </span><span style="color:#89DDFF;">{}</span><span style="color:#C3E88D;">:</span><span style="color:#89DDFF;">{}&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            sender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sequence_number</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log_latency</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">sender</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> sequence_number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">e2e.latency</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">metrics_cache</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(&amp;(*</span><span style="color:#A6ACCD;">sender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sequence_number</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // update current cached sequence number for account</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cached_value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> self</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sequence_number_cache</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">sender</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unwrap_or_default</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> new_sequence_number </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> is_rejected </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">sequence_number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cached_value</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cached_value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sequence_number </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //sequence_number_cache保存的就是下一个有效的seq_number</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sequence_number_cache</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">sender</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> new_sequence_number</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //核心处理其实还在\`TransactionStore\`中</span></span>
<span class="line"><span style="color:#A6ACCD;">        self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">transactions</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">commit_transaction</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">sender</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sequence_number</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h3 id="为consensus模块提供下一块交易数据" tabindex="-1">为consensus模块提供下一块交易数据 <a class="header-anchor" href="#为consensus模块提供下一块交易数据" aria-label="Permalink to &quot;为consensus模块提供下一块交易数据&quot;">​</a></h3><p>get_block功能非常简单,就是跳出来下一块可以打包的交易,主要就是seq_number连起来的交易.因为不合法的交易早就已经被踢了.</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">    /// Fetches next block of transactions for consensus</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /// \`batch_size\` - size of requested block</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /// \`seen_txns\` - transactions that were sent to Consensus but were not committed yet</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    ///  Mempool should filter out such transactions</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /// 共识模块需要从mempool中拉取下一个块可用的Tx集合</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">pub</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">crate</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_block</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        batch_size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> seen</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HashSet</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TxnPointer</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Vec</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">SignedTransaction</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">           get_block 实际上是找寻可以进入下一块的交易:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">           1. 已经送到共识模块中,但是还没有确认(确认后会从缓冲池中移除)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">           2.  这个Tx的seq刚好就是下一个可以打包的.比如上一块中AccountA的seq是3,那么现在seq=4的Tx就可以进入block</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">           3. 或者当前块中已经包含了seq=4的,那么seq=5的就可以进入</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        */</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">vec!</span><span style="color:#89DDFF;">[];</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // Helper DS. Helps to mitigate scenarios where account submits several transactions</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // with increasing gas price (e.g. user submits transactions with sequence number 1, 2</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // and gas_price 1, 10 respectively)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // Later txn has higher gas price and will be observed first in priority index iterator,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // but can&#39;t be executed before first txn. Once observed, such txn will be saved in</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // \`skipped\` DS and rechecked once it&#39;s ancestor becomes available</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> skipped </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HashSet</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // iterate over the queue of transactions based on gas price</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        //带标签的break用法</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#FFCB6B;">main</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> txn </span><span style="color:#F78C6C;">in</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">transactions</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">iter_queue</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> seen</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">contains</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#FFCB6B;">TxnPointer</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">continue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> seq </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> txn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sequence_number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            这里打包是按照地址选,尽可能的把同一个地址的Tx都打包到一个block中去</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            */</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> account_sequence_number </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sequence_number_cache</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_mut</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">address</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> seen_previous </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> seq </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> seen</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">contains</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">address</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> seq </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            // include transaction if it&#39;s &quot;next&quot; for given account or</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            // we&#39;ve already sent its ancestor to Consensus</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> seen_previous </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> account_sequence_number </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Some</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> seq</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> ptr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TxnPointer</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                seen</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> batch_size </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                    //batch_size表示这块最多有多少个交易</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                // check if we can now include some transactions</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                // that were skipped before for given account</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">                //这是回头遍历,比如先走过了seq=7的,那么发现seq=6合适的时候,就还可以再把seq=7加入</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">mut</span><span style="color:#A6ACCD;"> skipped_txn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">address</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> seq </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> skipped</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">contains</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">skipped_txn</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    seen</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">skipped_txn</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                    result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">skipped_txn</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">u64</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> batch_size </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                        </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#FFCB6B;">main</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">                    skipped_txn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">address</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> skipped_txn</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                skipped</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">insert</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">TxnPointer</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">txn</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // convert transaction pointers to real values</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Vec</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> result</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">into_iter</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            //filter_map 行为等于filter &amp; map</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter_map</span><span style="color:#89DDFF;">(|(</span><span style="color:#A6ACCD;">address</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> seq</span><span style="color:#89DDFF;">)|</span><span style="color:#A6ACCD;"> self</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">transactions</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">address</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> seq</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">collect</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> transaction </span><span style="color:#F78C6C;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">block </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            self</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log_latency</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">                transaction</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sender</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">                transaction</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sequence_number</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">txn_pre_consensus_ms</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        block</span><span style="color:#676E95;font-style:italic;"> //就是一个Tx的集合,没有任何附加信息</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><h3 id="其他几个函数" tabindex="-1">其他几个函数 <a class="header-anchor" href="#其他几个函数" aria-label="Permalink to &quot;其他几个函数&quot;">​</a></h3><p><code>gc_by_system_ttl</code>: 就是为了清除在mempool中呆的太久的交易,否则mempool因为空间已满而无法进来有效的交易 <code>gc_by_expiration_time</code>: 是在新的一块来临的时候,依据新块时间可以非常确定<strong>那些用户指定的在这个之前必须打包的交易</strong>必须被清理掉,因为再也不可能被打包了. <code>read_timeline</code>: 主要用于节点间mempool中的Tx同步用,就是为每一个Tx都给一个本地唯一的单增的编号,这样推送的时候就知道推送到哪里了,避免重复.</p><p>下一篇我会讲解<code>TransactionStore</code>,他是维护mempool中Tx的核心数据结构.</p>`,23),e=[o];function c(t,r,D,y,F,i){return a(),n("div",null,e)}const b=s(p,[["render",c]]);export{A as __pageData,b as default};
