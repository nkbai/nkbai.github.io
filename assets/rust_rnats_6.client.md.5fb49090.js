import{_ as n,c as s,o as a,a as p}from"./app.8e8e8923.js";const d='{"title":"\u4ECE\u96F6\u5B9E\u73B0\u6D88\u606F\u4E2D\u95F4\u4EF6-client","description":"","frontmatter":{"title":"\u4ECE\u96F6\u5B9E\u73B0\u6D88\u606F\u4E2D\u95F4\u4EF6-client","date":"2020-02-20T01:57:03.000Z","draft":false,"tags":["rust"],"categories":["\u6280\u672F\u76F8\u5173"]},"headers":[{"level":2,"title":"\u529F\u80FD\u8BBE\u8BA1","slug":"\u529F\u80FD\u8BBE\u8BA1"},{"level":2,"title":"\u6570\u636E\u7ED3\u6784\u5B9A\u4E49","slug":"\u6570\u636E\u7ED3\u6784\u5B9A\u4E49"},{"level":3,"title":"\u63A5\u53E3-connect","slug":"\u63A5\u53E3-connect"},{"level":3,"title":"\u63A5\u53E3-pub_message","slug":"\u63A5\u53E3-pub-message"},{"level":3,"title":"\u63A5\u53E3-sub_message","slug":"\u63A5\u53E3-sub-message"},{"level":3,"title":"receive_task","slug":"receive-task"},{"level":2,"title":"API\u7684\u4F7F\u7528","slug":"api\u7684\u4F7F\u7528"},{"level":3,"title":"pub","slug":"pub"},{"level":3,"title":"sub","slug":"sub"},{"level":2,"title":"\u4EE3\u7801\u5B9E\u73B0","slug":"\u4EE3\u7801\u5B9E\u73B0"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust/rnats/6.client.md"}',t={},e=p(`<h2 id="\u529F\u80FD\u8BBE\u8BA1" tabindex="-1">\u529F\u80FD\u8BBE\u8BA1 <a class="header-anchor" href="#\u529F\u80FD\u8BBE\u8BA1" aria-hidden="true">#</a></h2><p>client\u5B9E\u73B0\u529F\u80FD\u76F8\u5BF9\u6BD4\u8F83\u5355\u4E00,\u5C31\u662F\u80FD\u591F\u5411\u670D\u52A1\u5668pub\u6D88\u606F,\u7136\u540E\u5C31\u4F1A\u8BF4\u8BA2\u9605\u6D88\u606F,\u8BA2\u9605\u7684\u4E3B\u9898\u6536\u5230\u6D88\u606F\u4EE5\u540E\u80FD\u591F\u5F97\u5230\u901A\u77E5.\u56E0\u6B64\u603B\u7ED3\u8D77\u6765\u5C31\u662F\u4E0B\u9762\u4E09\u4E2A\u529F\u80FD:</p><ol><li>\u63D0\u4F9Bpub\u63A5\u53E3</li><li>\u63D0\u4F9Bsub\u63A5\u53E3</li><li>\u5904\u7406sub\u540E\u6536\u5230\u7684\u6D88\u606F</li></ol><h2 id="\u6570\u636E\u7ED3\u6784\u5B9A\u4E49" tabindex="-1">\u6570\u636E\u7ED3\u6784\u5B9A\u4E49 <a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784\u5B9A\u4E49" aria-hidden="true">#</a></h2><p>\u63D0\u4F9B\u7ED9\u7528\u6237\u7684\u63A5\u53E3\u662F\u4E0A\u9762\u7684\u4E09\u4E2A, \u4E3A\u4E86\u5B9E\u73B0\u8FD9\u4E09\u4E2A\u63A5\u53E3,client\u4E00\u5B9A\u8981\u6709\u7684\u5C31\u662F<code>writer</code>\u4EE5\u53CA<code>handler</code>. \u800Csid\u5219\u662F\u56E0\u4E3A\u4E00\u4E2Aclient\u53EF\u4EE5\u6709\u591A\u4E2Asub,\u6BCF\u4E00\u4E2Asub\u8981\u6709\u552F\u4E00\u7684id,\u4E3B\u8981\u662F\u7F16\u53F7\u7528. <code>stop</code>\u5219\u662F\u4E3A\u4E86client\u6B63\u5E38\u5173\u95ED\u4F7F\u7528.</p><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Client</span> <span class="token punctuation">{</span>
    addr<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    writer<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">WriteHalf</span><span class="token operator">&lt;</span><span class="token class-name">TcpStream</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> stop<span class="token punctuation">:</span> <span class="token namespace">oneshot<span class="token punctuation">::</span></span><span class="token class-name">Sender</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    sid<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    handler<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span>  
                  <span class="token namespace">mpsc<span class="token punctuation">::</span></span><span class="token class-name">UnboundedSender</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u63A5\u53E3-connect" tabindex="-1">\u63A5\u53E3-connect <a class="header-anchor" href="#\u63A5\u53E3-connect" aria-hidden="true">#</a></h3><p>connect\u7684\u529F\u80FD\u975E\u5E38\u76F4\u767D\u5C31\u662F\u521B\u5EFA\u548C\u670D\u52A1\u5668\u7684\u8FDE\u63A5,\u540C\u65F6\u540E\u53F0\u4F1A\u542F\u52A8\u4E00\u4E2A\u4EFB\u52A1\u6765\u5904\u7406tcp\u8FDE\u63A5,\u4E3B\u8981\u662F\u63A5\u6536\u6D88\u606F.</p><div class="language-rust line-numbers-mode"><pre><code> <span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">connect</span><span class="token punctuation">(</span>addr<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Client</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="\u63A5\u53E3-pub-message" tabindex="-1">\u63A5\u53E3-pub_message <a class="header-anchor" href="#\u63A5\u53E3-pub-message" aria-hidden="true">#</a></h3><p>\u5411\u670D\u52A1\u5668\u53D1\u5E03\u4E00\u6761pub\u6D88\u606F</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">pub_message</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> 
  subject<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">,</span> 
  msg<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
     <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u63A5\u53E3-sub-message" tabindex="-1">\u63A5\u53E3-sub_message <a class="header-anchor" href="#\u63A5\u53E3-sub-message" aria-hidden="true">#</a></h3><p>\u5411\u670D\u52A1\u5668\u53D1\u5E03\u4E00\u6761sub\u6D88\u606F,\u7136\u540E\u7B49\u5F85\u670D\u52A1\u5668\u63A8\u9001\u76F8\u5173\u6D88\u606F. \u9700\u8981\u8BF4\u660E\u7684\u662F\u8FD9\u91CC\u7684\u53C2\u6570<code>subject</code>\u548C<code>queue</code>\u5B8C\u5168\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528String,&amp;str\u5373\u53EF. \u8FD9\u5E94\u8BE5\u662Frust\u7684\u4E00\u4E2Abug,\u57281.41\u548Cnightly 1.43\u90FD\u662F\u7F16\u8BD1\u4E0D\u8FC7\u53BB\u7684.\u6240\u4EE5\u9000\u800C\u6C42\u5176\u6B21,\u4F7F\u7528\u4E86String.</p><div class="language-rust line-numbers-mode"><pre><code>    <span class="token comment">//sub\u6D88\u606F\u683C\u5F0F\u4E3ASUB subject {queue} {sid}\\r\\n</span>
    <span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sub_message</span><span class="token punctuation">(</span>
        <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span>
        subject<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        queue<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        handler<span class="token punctuation">:</span> <span class="token class-name">MessageHandler</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="receive-task" tabindex="-1">receive_task <a class="header-anchor" href="#receive-task" aria-hidden="true">#</a></h3><p><code>receive_task</code>\u4E3B\u8981\u662F\u505A\u6D88\u606F\u7684\u63A5\u6536,\u89E3\u6790,\u4EE5\u53CA\u5C06\u6D88\u606F\u6D3E\u53D1\u7ED9\u5408\u9002\u7684handler. \u8FD9\u4E2A\u5176\u5B9E\u662F\u672C\u6A21\u5757\u6700\u590D\u6742\u7684\u5730\u65B9,\u603B\u4F53\u4E0A\u6BD4\u8F83\u76F4\u89C2. \u4E3B\u8981\u6709\u4EE5\u4E0B\u4E24\u70B9</p><ol><li>\u4F7F\u7528futures::select\u8FD9\u4E2A\u5B8F\u6765\u8F85\u52A9\u5B9E\u73B0\u540C\u65F6\u76D1\u63A7\u591A\u4E2Afuture</li><li>TcpStream\u5982\u679Cread\u5230size\u4E3A0,\u8BF4\u660E\u8FDE\u63A5\u5DF2\u7ECF\u5173\u95ED,\u65E0\u9700\u7EE7\u7EED</li></ol><div class="language-rust line-numbers-mode"><pre><code>    <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">receive_task</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span> reader<span class="token punctuation">:</span> <span class="token class-name">ReadHalf</span><span class="token operator">&lt;</span><span class="token class-name">TcpStream</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        stop<span class="token punctuation">:</span> <span class="token namespace">oneshot<span class="token punctuation">::</span></span><span class="token class-name">Receiver</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        handler<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span>
                 <span class="token namespace">mpsc<span class="token punctuation">::</span></span><span class="token class-name">UnboundedSender</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        writer<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">WriteHalf</span><span class="token operator">&lt;</span><span class="token class-name">TcpStream</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> 
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="api\u7684\u4F7F\u7528" tabindex="-1">API\u7684\u4F7F\u7528 <a class="header-anchor" href="#api\u7684\u4F7F\u7528" aria-hidden="true">#</a></h2><h3 id="pub" tabindex="-1">pub <a class="header-anchor" href="#pub" aria-hidden="true">#</a></h3><div class="language-rust line-numbers-mode"><pre><code> c<span class="token punctuation">.</span><span class="token function">pub_message</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;hello{}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token keyword">await</span><span class="token operator">?</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="sub" tabindex="-1">sub <a class="header-anchor" href="#sub" aria-hidden="true">#</a></h3><div class="language-rust line-numbers-mode"><pre><code> c<span class="token punctuation">.</span><span class="token function">sub_message</span><span class="token punctuation">(</span>
        <span class="token string">&quot;test&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">None</span><span class="token punctuation">,</span>
        <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>msg<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;recevied:{}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token keyword">str</span><span class="token punctuation">::</span><span class="token function">from_utf8_unchecked</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1">\u4EE3\u7801\u5B9E\u73B0 <a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code>
<span class="token keyword">type</span> <span class="token type-definition class-name">MessageHandler</span> <span class="token operator">=</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">FnMut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>result<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token operator">+</span> <span class="token class-name">Sync</span> <span class="token operator">+</span> <span class="token class-name">Send</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//#[derive(Debug)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Client</span> <span class="token punctuation">{</span>
    addr<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    writer<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">WriteHalf</span><span class="token operator">&lt;</span><span class="token class-name">TcpStream</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token keyword">pub</span> stop<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token namespace">oneshot<span class="token punctuation">::</span></span><span class="token class-name">Sender</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
    sid<span class="token punctuation">:</span> <span class="token keyword">u64</span><span class="token punctuation">,</span>
    handler<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">MessageHandler</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
    <span class="token comment">//1. \u5EFA\u7ACB\u5230\u670D\u52A1\u5668\u7684\u8FDE\u63A5</span>
    <span class="token comment">//2. \u542F\u52A8\u540E\u53F0\u4EFB\u52A1</span>
    <span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">connect</span><span class="token punctuation">(</span>addr<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Client</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> conn <span class="token operator">=</span> <span class="token class-name">TcpStream</span><span class="token punctuation">::</span><span class="token function">connect</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token punctuation">(</span>reader<span class="token punctuation">,</span> writer<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">tokio<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token function">split</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token punctuation">(</span>tx<span class="token punctuation">,</span> rx<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">tokio<span class="token punctuation">::</span>sync<span class="token punctuation">::</span>oneshot<span class="token punctuation">::</span></span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
            addr<span class="token punctuation">:</span> addr<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            writer<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Mutex</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>writer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            stop<span class="token punctuation">:</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>tx<span class="token punctuation">)</span><span class="token punctuation">,</span>
            sid<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            handler<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> handler <span class="token operator">=</span> c<span class="token punctuation">.</span>handler<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> writer <span class="token operator">=</span> c<span class="token punctuation">.</span>writer<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*
        tokio::spawn \u53EF\u4EE5\u8BA4\u4E3A\u548Cgo\u8BED\u8A00\u4E2D\u7684
        go func(){}()
        */</span>
        <span class="token namespace">tokio<span class="token punctuation">::</span></span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">move</span> <span class="token punctuation">{</span>
            <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">receive_task</span><span class="token punctuation">(</span>reader<span class="token punctuation">,</span> rx<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> writer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    \u4ECE\u670D\u52A1\u5668\u63A5\u6536pub\u6D88\u606F
    \u7136\u540E\u63A8\u9001\u7ED9\u76F8\u5173\u7684\u8BA2\u9605\u65B9\u3002
    */</span>
    <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">receive_task</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span> reader<span class="token punctuation">:</span> <span class="token class-name">ReadHalf</span><span class="token operator">&lt;</span><span class="token class-name">TcpStream</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        stop<span class="token punctuation">:</span> <span class="token namespace">oneshot<span class="token punctuation">::</span></span><span class="token class-name">Receiver</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        handler<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">MessageHandler</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        writer<span class="token punctuation">:</span> <span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">WriteHalf</span><span class="token operator">&lt;</span><span class="token class-name">TcpStream</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> buf <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">512</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> parser <span class="token operator">=</span> <span class="token class-name">Parser</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">use</span> <span class="token namespace">futures<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> stop <span class="token operator">=</span> stop<span class="token punctuation">.</span><span class="token function">fuse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">loop</span> <span class="token punctuation">{</span>
            <span class="token macro property">select!</span> <span class="token punctuation">{</span>
                _<span class="token operator">=</span>stop<span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;client closed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                r <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> buf<span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fuse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                     <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token punctuation">{</span>
                        <span class="token keyword">match</span> r <span class="token punctuation">{</span>
                            <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                                <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;read err {}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">let</span> _ <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
                                <span class="token keyword">return</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token class-name">Ok</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">,</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                        <span class="token comment">//EOF,\u8BF4\u660E\u5BF9\u65B9\u5173\u95ED\u4E86\u8FDE\u63A5</span>
                        <span class="token keyword">return</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">let</span> <span class="token keyword">mut</span> buf2 <span class="token operator">=</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">[</span><span class="token punctuation">..</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">loop</span> <span class="token punctuation">{</span>
                        <span class="token keyword">let</span> r <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>buf2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">let</span> <span class="token punctuation">(</span>r<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">match</span> r <span class="token punctuation">{</span>
                            <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                                <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;parse err {}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">let</span> _ <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
                                <span class="token keyword">return</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token class-name">Ok</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> r<span class="token punctuation">,</span>
                        <span class="token punctuation">}</span><span class="token punctuation">;</span>
                        <span class="token comment">//                println!(&quot;receive msg {:?}&quot;, r);</span>
                        <span class="token keyword">match</span> r <span class="token punctuation">{</span>
                            <span class="token class-name">ParseResult</span><span class="token punctuation">::</span><span class="token class-name">NoMsg</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                                <span class="token keyword">break</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token class-name">ParseResult</span><span class="token punctuation">::</span><span class="token class-name">MsgArg</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                                <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">process_message</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token operator">&amp;</span>handler<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
                                parser<span class="token punctuation">.</span><span class="token function">clear_msg_buf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                        <span class="token comment">//\u7F13\u51B2\u533A\u5904\u7406\u5B8C\u6BD5</span>
                        <span class="token keyword">if</span> n <span class="token operator">==</span> buf<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        buf2 <span class="token operator">=</span> <span class="token operator">&amp;</span>buf2<span class="token punctuation">[</span>n<span class="token punctuation">..</span><span class="token punctuation">]</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/*
    \u6839\u636E\u6D88\u606F\u7684subject\uFF0C\u627E\u5230\u8BA2\u9605\u65B9\uFF0C
    \u7136\u540E\u63A8\u9001\u7ED9\u4ED6\u4EEC
    */</span>
    <span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">process_message</span><span class="token punctuation">(</span>
        msg<span class="token punctuation">:</span> <span class="token class-name">MsgArg</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        handler<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Arc</span><span class="token operator">&lt;</span><span class="token class-name">Mutex</span><span class="token operator">&lt;</span><span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">MessageHandler</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//        println!(&quot;broadcast msg {}&quot;, msg.subject);</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> handler <span class="token operator">=</span> handler<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> h <span class="token operator">=</span> handler<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span> <span class="token operator">=</span> h <span class="token punctuation">{</span>
            <span class="token keyword">let</span> _ <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//pub\u6D88\u606F\u683C\u5F0F\u4E3APUB subject size\\r\\n{message}</span>
    <span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">pub_message</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> subject<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">,</span> msg<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> writer <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>writer<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;PUB {} {}\\r\\n&quot;</span><span class="token punctuation">,</span> subject<span class="token punctuation">,</span> msg<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _ <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">write_all</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _ <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">write_all</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
        writer<span class="token punctuation">.</span><span class="token function">write_all</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//sub\u6D88\u606F\u683C\u5F0F\u4E3ASUB subject {queue} {sid}\\r\\n</span>
    <span class="token comment">//\u53EF\u80FD\u7531\u4E8Erustc\u7684bug,\u5BFC\u81F4\u5982\u679Csubject\u662F&amp;str,\u5219\u4F1A\u62A5\u9519E0700,\u6682\u65F6\u4F7F\u7528String\u6765\u66FF\u4EE3</span>
    <span class="token keyword">pub</span> <span class="token keyword">async</span> <span class="token keyword">fn</span> <span class="token function-definition function">sub_message</span><span class="token punctuation">(</span>
        <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span>
        subject<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
        queue<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        handler<span class="token punctuation">:</span> <span class="token class-name">MessageHandler</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>sid <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> writer <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>writer<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span> <span class="token operator">=</span> queue <span class="token punctuation">{</span>
            <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;SUB {} {} {}\\r\\n&quot;</span><span class="token punctuation">,</span> subject<span class="token punctuation">.</span><span class="token function">as_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> queue<span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span>sid<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token macro property">format!</span><span class="token punctuation">(</span><span class="token string">&quot;SUB {} {}\\r\\n&quot;</span><span class="token punctuation">,</span> subject<span class="token punctuation">.</span><span class="token function">as_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span>sid<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>handler<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>subject<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        writer<span class="token punctuation">.</span><span class="token function">write_all</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">await</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">close</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>stop<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>stop<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span> stop<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;stop err {:?}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br></div></div><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u76F8\u5173\u4EE3\u7801\u90FD\u5728\u6211\u7684github <a href="https://github.com/nkbai/learnrustbynats" target="_blank" rel="noopener noreferrer">rnats</a> \u6B22\u8FCE\u56F4\u89C2</p>`,28),o=[e];function c(l,u,r,k,i,b){return a(),s("div",null,o)}var w=n(t,[["render",c]]);export{d as __pageData,w as default};
