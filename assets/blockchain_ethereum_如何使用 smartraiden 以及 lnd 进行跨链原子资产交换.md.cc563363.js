import{_ as a,c as s,o as n,N as e}from"./chunks/framework.3a9190c5.js";const C=JSON.parse('{"title":"如何使用 smartraiden 以及 lnd 进行跨链原子资产交换","description":"","frontmatter":{"title":"如何使用 smartraiden 以及 lnd 进行跨链原子资产交换","date":"2018-08-30T13:01:43.000Z","draft":false,"markup":"mmark"},"headers":[],"relativePath":"blockchain/ethereum/如何使用 smartraiden 以及 lnd 进行跨链原子资产交换.md"}'),l={name:"blockchain/ethereum/如何使用 smartraiden 以及 lnd 进行跨链原子资产交换.md"},t=e(`<h1 id="去中心化交易所-mvp" tabindex="-1">去中心化交易所 MVP <a class="header-anchor" href="#去中心化交易所-mvp" aria-label="Permalink to &quot;去中心化交易所 MVP&quot;">​</a></h1><p>smartraiden 和 lighting network 进行跨链原子资产交换</p><h3 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h3><ol><li>Alice 在某个信息发布网站上发布信息,希望用1个 BTC 置换100个 SMT</li><li>Bob 看到以后,和 Alice 进行沟通,达成交换意见 那么Alice 和 Bob 如何\b不需要借助任何第三方实现原子资产置换呢</li></ol><h3 id="实现方法" tabindex="-1">实现方法 <a class="header-anchor" href="#实现方法" aria-label="Permalink to &quot;实现方法&quot;">​</a></h3><h4 id="_1-bob和-alice-分别启动自己的-exchange-服务" tabindex="-1">1. Bob和 Alice 分别启动自己的 ExChange 服务 <a class="header-anchor" href="#_1-bob和-alice-分别启动自己的-exchange-服务" aria-label="Permalink to &quot;1. Bob和 Alice 分别启动自己的 ExChange 服务&quot;">​</a></h4><p>Exchange 服务会启动响应的SmartRaiden和Lnd 假设 Alice 在SmartRaiden的节点\b使用的私钥为 SA_Priv, 公钥为 SA, 在 Lnd 节点使用的私钥为 LA_Priv, 公钥为 LA 假设 Bob 在 SmartRaiden 节点使用的私钥为 SB_Priv, 公钥为 SB, 在 Lnd 节点使用的私钥为 LB_Priv, 公钥为 LB</p><h4 id="_2-bob-的exchange服务" tabindex="-1">2. Bob 的Exchange\b服务 <a class="header-anchor" href="#_2-bob-的exchange服务" aria-label="Permalink to &quot;2. Bob 的Exchange\b服务&quot;">​</a></h4><h5 id="_2-1-bob发起交易-指定secret-金额为100-token-为-smt-接收方为-sa" tabindex="-1">2.1 Bob发起交易,指定Secret,金额为100,token 为 SMT,接收方为 SA <a class="header-anchor" href="#_2-1-bob发起交易-指定secret-金额为100-token-为-smt-接收方为-sa" aria-label="Permalink to &quot;2.1 Bob发起交易,指定Secret,金额为100,token 为 SMT,接收方为 SA&quot;">​</a></h5><ul><li>--&gt;调用 Transfer 接口</li></ul><h5 id="_2-2-bob等待是否收到一个金额为1btc-密码-hash-为-sha256-secret" tabindex="-1">2.2 Bob\b等待是否收到一个金额为1BTC,密码 hash 为 Sha256(Secret), <a class="header-anchor" href="#_2-2-bob等待是否收到一个金额为1btc-密码-hash-为-sha256-secret" aria-label="Permalink to &quot;2.2 Bob\b等待是否收到一个金额为1BTC,密码 hash 为 Sha256(Secret),&quot;">​</a></h5><ul><li>--&gt;通过 listinvoices接口轮询</li></ul><h5 id="_2-3-收到以后-允许自己的-smartraiden-响应-secretrequest" tabindex="-1">2.3 收到以后,允许自己的 SmartRaiden 响应 SecretRequest <a class="header-anchor" href="#_2-3-收到以后-允许自己的-smartraiden-响应-secretrequest" aria-label="Permalink to &quot;2.3 收到以后,允许自己的 SmartRaiden 响应 SecretRequest&quot;">​</a></h5><ul><li>--&gt;通过/api/1/allowrevealsecret 接口</li></ul><h4 id="_3-alice-的exchange-服务" tabindex="-1">3. Alice 的ExChange 服务 <a class="header-anchor" href="#_3-alice-的exchange-服务" aria-label="Permalink to &quot;3. Alice 的ExChange 服务&quot;">​</a></h4><h5 id="_3-1-alice-在-smartraiden-上等待是否收到了来自-bob-的100个-smt交易" tabindex="-1">3.1 Alice 在 SmartRaiden 上等待是否收到了来自 Bob 的100个 SMT交易 <a class="header-anchor" href="#_3-1-alice-在-smartraiden-上等待是否收到了来自-bob-的100个-smt交易" aria-label="Permalink to &quot;3.1 Alice 在 SmartRaiden 上等待是否收到了来自 Bob 的100个 SMT交易&quot;">​</a></h5><ul><li>--&gt;通过/api/1/getunfinishedreceivedtransfer/:tokenaddress/:locksecrethash接口轮询 <h5 id="_3-2-一旦收到-alice-校验该交易是否有效-比如-expiration-时间是否足够-必须大于125分钟-500spectrum-块" tabindex="-1">3.2 一旦收到, Alice 校验该交易是否有效,比如 Expiration 时间是否足够,必须大于125分钟(500Spectrum 块) <a class="header-anchor" href="#_3-2-一旦收到-alice-校验该交易是否有效-比如-expiration-时间是否足够-必须大于125分钟-500spectrum-块" aria-label="Permalink to &quot;3.2 一旦收到, Alice 校验该交易是否有效,比如 Expiration 时间是否足够,必须大于125分钟(500Spectrum 块)&quot;">​</a></h5><h5 id="_3-3-如果都一致-那么通过向自己的-lnd-注册这个-paymentreq-并指定过期时间为100分钟-secrethash" tabindex="-1">3.3 如果都一致,那么通过向自己的 Lnd 注册这个 PaymentReq,并指定过期时间为100分钟,\bsecretHash <a class="header-anchor" href="#_3-3-如果都一致-那么通过向自己的-lnd-注册这个-paymentreq-并指定过期时间为100分钟-secrethash" aria-label="Permalink to &quot;3.3 如果都一致,那么通过向自己的 Lnd 注册这个 PaymentReq,并指定过期时间为100分钟,\bsecretHash&quot;">​</a></h5></li><li>--&gt;SendPaymentSync 接口 <h5 id="_3-5-检测-lnd-是否收到了密码-如果收到了-立即向-自己的smartraiden-注册密码" tabindex="-1">3.5 检测 Lnd 是否收到了密码,如果收到了,立即向 自己的SmartRaiden 注册密码 <a class="header-anchor" href="#_3-5-检测-lnd-是否收到了密码-如果收到了-立即向-自己的smartraiden-注册密码" aria-label="Permalink to &quot;3.5 检测 Lnd 是否收到了密码,如果收到了,立即向 自己的SmartRaiden 注册密码&quot;">​</a></h5></li><li>--&gt;\b根据 SendPaymentSync 的返回得到密码,调用/api/1/registersecret注册密码</li></ul><h3 id="时序图" tabindex="-1">时序图 <a class="header-anchor" href="#时序图" aria-label="Permalink to &quot;时序图&quot;">​</a></h3><pre class="mermaid loading">sequenceDiagram
    participant ae as  Alice&#39;s Exchange
    participant al as Alice&#39;s Lnd
    participant as as Alice&#39;s smartraiden
   participant space
    participant bs as Bob&#39;s smartraiden
    participant bl as Bob&#39;s Lnd
     participant be as Bob&#39;s Exchange
    
    be-&gt;&gt;ae:可以用我的100SMT 换你的1个 BTC?
    ae-&gt;&gt;be:没问题
    be-&gt;&gt;bs: send Transfer to Alice ,Secret,100,SMT
    be-&gt;&gt;bl: 准备好接收金额为1BTC,密码为 Secret 的交易
    bs-&gt;&gt;as: MediatedTransfer(Secret,100SMT,from Bob to Alice,Expiration=600)
    as-&gt;&gt;ae:收到了有效的 MediatedTransfer
    ae-&gt;&gt;al:向bob发起闪电网络交易(1BTC,secertHash,Expiration=10Block)
    al-&gt;&gt;bl:send payment to bob(1BTC,secertHash,Expiration=10Block)
    bl-&gt;&gt;al:凭 Secret 换回1BTC
    bl-&gt;&gt;be: 收到了有效的 HTLC
    loop bob wait
        be-&gt;&gt;be: 收到了来自 Alice 的1BTC?
    end    
    be-&gt;&gt;bs:响应来自\bAlice&#39;s smartraiden 的 SecretRequest
    bs-&gt;&gt;as: send secret to Alice,开始正常雷电交易
    loop alice wait
        al-&gt;&gt;al: 是否收到了 Secret( 包括链上注册的密码)
    end
    ae-&gt;&gt;as: 注册密码</pre><h3 id="smartraiden-接口设计" tabindex="-1">smartraiden 接口设计 <a class="header-anchor" href="#smartraiden-接口设计" aria-label="Permalink to &quot;smartraiden 接口设计&quot;">​</a></h3><ol><li>发起交易 POST /api/1/transfer/:token/:receipt</li></ol><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TransferData</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Initiator      </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;initiator_address&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Target         </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;target_address&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Token          </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;token_address&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Amount         </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">big</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Int </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;amount&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Secret       </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;secret&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Fee            </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">big</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Int </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;fee&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">    IsDirect       </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;is_direct&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol start="2"><li>允许响应 SecretRequest POST /api/1/allowrevealsecret/</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;lock_secret_hash&quot;:&quot;0xaaaa&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;token_address&quot;:&quot;0xbbbbb&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>设置交易发起方对应的这个 SecretRequest 允许响应 3. 查询未完成收到交易 GET /api/1/getunfinishedreceivedtransfer/:tokenaddress/:locksecrethash</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TransferData</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Initiator      </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;initiator_address&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Target         </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;target_address&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Token          </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;token_address&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Amount         </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">big</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Int </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;amount&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">    LockSecretHash       </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">json:&quot;lock_secret_hash&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">    Expiration </span><span style="color:#C792EA;">uint64</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//相对于当前块还有多少块过期</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="4"><li>注册密码 POST /api/1/registersecret</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;secret&quot;:&quot;0xaaaaaaa&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;token_address&quot;:&quot;0xbbbbbbb&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>将密码注册到相应的 channel 中,并且将 secret 也注册到对应的 TargetStateManager</p><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><p>闪电网络中密码的 hash 值计算方式为 rHash := sha256.Sum256(paymentPreimage[:])</p>`,31),r=[t];function o(p,c,i,b,d,u){return n(),s("div",null,r)}const D=a(l,[["render",o]]);export{C as __pageData,D as default};
