import{_ as n,c as s,o as a,a as p}from"./app.3ef0f76b.js";const m='{"title":"202. \u5FEB\u4E50\u6570","description":"","frontmatter":{"title":"202. \u5FEB\u4E50\u6570","date":"2020-03-22T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-23)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-23"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2020-03-23.md"}',e={},t=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-23" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-23) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-23" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u7F16\u5199\u4E00\u4E2A\u7B97\u6CD5\u6765\u5224\u65AD\u4E00\u4E2A\u6570\u662F\u4E0D\u662F\u201C\u5FEB\u4E50\u6570\u201D\u3002</p><p>\u4E00\u4E2A\u201C\u5FEB\u4E50\u6570\u201D\u5B9A\u4E49\u4E3A\uFF1A\u5BF9\u4E8E\u4E00\u4E2A\u6B63\u6574\u6570\uFF0C\u6BCF\u4E00\u6B21\u5C06\u8BE5\u6570\u66FF\u6362\u4E3A\u5B83\u6BCF\u4E2A\u4F4D\u7F6E\u4E0A\u7684\u6570\u5B57\u7684\u5E73\u65B9\u548C\uFF0C\u7136\u540E\u91CD\u590D\u8FD9\u4E2A\u8FC7\u7A0B\u76F4\u5230\u8FD9\u4E2A\u6570\u53D8\u4E3A 1\uFF0C\u4E5F\u53EF\u80FD\u662F\u65E0\u9650\u5FAA\u73AF\u4F46\u59CB\u7EC8\u53D8\u4E0D\u5230 1\u3002\u5982\u679C\u53EF\u4EE5\u53D8\u4E3A 1\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u6570\u5C31\u662F\u5FEB\u4E50\u6570\u3002</p><p>\u793A\u4F8B:</p><p>\u8F93\u5165: 19 \u8F93\u51FA: true \u89E3\u91CA: 12 + 92 = 82 82 + 22 = 68 62 + 82 = 100 12 + 02 + 02 = 1</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/happy-number" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/happy-number</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u5728\u6C42\u5E73\u65B9\u548C\u7684\u8FC7\u7A0B\u4E2D\u5982\u679C\u78B0\u5230\u91CD\u590D,\u5E76\u4E14\u91CD\u590D\u7684\u503C\u4E0D\u662F1,\u5219\u4E0D\u662F\u5FEB\u4E50\u6570. \u5982\u679C\u662F1,\u81EA\u7136\u662F\u5FEB\u4E50\u6570.</p><p>\u95EE\u9898? \u5982\u4F55\u8BC1\u660E\u4E00\u5B9A\u4F1A\u51FA\u73B0\u5FAA\u73AF\u5462? \u4E00\u4E2A\u7B80\u5355\u7684\u63A8\u8BBA,\u4E0D\u4F1A\u51FA\u73B0\u65E0\u9650\u5FAA\u73AF\u4E0D\u91CD\u590D\u7684\u60C5\u51B5,\u56E0\u4E3A\u6574\u6570\u7684\u8303\u56F4\u662F\u6709\u9650\u7684,\u4E00\u5B9A\u4F1A\u51FA\u73B0\u91CD\u590D.</p><p>\u5982\u4F55\u5224\u65AD\u91CD\u590D\u6CA1\u6709\u5462?</p><ol><li>set</li><li>\u5FEB\u6162\u6307\u9488</li></ol><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">bit_square</span><span class="token punctuation">(</span><span class="token keyword">mut</span> n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> n <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> i <span class="token operator">=</span> n <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
            s <span class="token operator">+=</span> i <span class="token operator">*</span> i<span class="token punctuation">;</span>
            n <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        s
    <span class="token punctuation">}</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">is_happy</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> fast <span class="token operator">=</span> n<span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> slow <span class="token operator">=</span> n<span class="token punctuation">;</span>
        <span class="token keyword">loop</span> <span class="token punctuation">{</span>
            slow <span class="token operator">=</span> <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">bit_square</span><span class="token punctuation">(</span>slow<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fast <span class="token operator">=</span> <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">bit_square</span><span class="token punctuation">(</span>fast<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fast <span class="token operator">=</span> <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">bit_square</span><span class="token punctuation">(</span>fast<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> slow <span class="token operator">==</span> fast <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        slow <span class="token operator">==</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">is_happy</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u77E5\u9053\u4E86\u4E00\u5B9A\u4F1A\u51FA\u73B0\u91CD\u590D,\u7136\u540E\u53BB\u8BC1\u660E\u5F88\u5BB9\u6613,\u4F46\u662F\u600E\u4E48\u60F3\u5230\u8FD9\u4E2A\u7ED3\u8BBA\u5C31\u4E0D\u90A3\u4E48\u76F4\u89C2\u4E86.</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,19),o=[t];function l(c,r,u,i,k,b){return a(),s("div",null,o)}var h=n(e,[["render",l]]);export{m as __pageData,h as default};
