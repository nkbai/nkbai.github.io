import{_ as n,c as s,o as a,a as t}from"./app.4bbc222c.js";const m='{"title":"1143. \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217","description":"","frontmatter":{"title":"1143. \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217","date":"2020-03-03T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-04)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-04"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2020-03-04.md"}',p={},e=t(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-04" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-04) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-04" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u7ED9\u5B9A\u4E24\u4E2A\u5B57\u7B26\u4E32\xA0text1 \u548C\xA0text2\uFF0C\u8FD4\u56DE\u8FD9\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u3002</p><p>\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\xA0\u5B50\u5E8F\u5217\xA0\u662F\u6307\u8FD9\u6837\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF1A\u5B83\u662F\u7531\u539F\u5B57\u7B26\u4E32\u5728\u4E0D\u6539\u53D8\u5B57\u7B26\u7684\u76F8\u5BF9\u987A\u5E8F\u7684\u60C5\u51B5\u4E0B\u5220\u9664\u67D0\u4E9B\u5B57\u7B26\uFF08\u4E5F\u53EF\u4EE5\u4E0D\u5220\u9664\u4EFB\u4F55\u5B57\u7B26\uFF09\u540E\u7EC4\u6210\u7684\u65B0\u5B57\u7B26\u4E32\u3002 \u4F8B\u5982\uFF0C&quot;ace&quot; \u662F &quot;abcde&quot; \u7684\u5B50\u5E8F\u5217\uFF0C\u4F46 &quot;aec&quot; \u4E0D\u662F &quot;abcde&quot; \u7684\u5B50\u5E8F\u5217\u3002\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u300C\u516C\u5171\u5B50\u5E8F\u5217\u300D\u662F\u8FD9\u4E24\u4E2A\u5B57\u7B26\u4E32\u6240\u5171\u540C\u62E5\u6709\u7684\u5B50\u5E8F\u5217\u3002</p><p>\u82E5\u8FD9\u4E24\u4E2A\u5B57\u7B26\u4E32\u6CA1\u6709\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u5219\u8FD4\u56DE 0\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165\uFF1Atext1 = &quot;abcde&quot;, text2 = &quot;ace&quot; \u8F93\u51FA\uFF1A3 \u89E3\u91CA\uFF1A\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u662F &quot;ace&quot;\uFF0C\u5B83\u7684\u957F\u5EA6\u4E3A 3\u3002 \u793A\u4F8B 2:</p><p>\u8F93\u5165\uFF1Atext1 = &quot;abc&quot;, text2 = &quot;abc&quot; \u8F93\u51FA\uFF1A3 \u89E3\u91CA\uFF1A\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u662F &quot;abc&quot;\uFF0C\u5B83\u7684\u957F\u5EA6\u4E3A 3\u3002 \u793A\u4F8B 3:</p><p>\u8F93\u5165\uFF1Atext1 = &quot;abc&quot;, text2 = &quot;def&quot; \u8F93\u51FA\uFF1A0 \u89E3\u91CA\uFF1A\u4E24\u4E2A\u5B57\u7B26\u4E32\u6CA1\u6709\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u8FD4\u56DE 0\u3002</p><p>\u63D0\u793A:</p><p>1 &lt;= text1.length &lt;= 1000 1 &lt;= text2.length &lt;= 1000 \u8F93\u5165\u7684\u5B57\u7B26\u4E32\u53EA\u542B\u6709\u5C0F\u5199\u82F1\u6587\u5B57\u7B26\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/longest-common-subsequence" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/longest-common-subsequence</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u548C\u7F16\u8F91\u8DDD\u79BB\u7C7B\u4F3C \u9996\u5148\u5177\u6709\u6700\u4F18\u5B50\u95EE\u9898,bcde\u548Cce\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u662F2,\u90A3\u4E48abcde\u548Cace\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u5C31\u662F3 dp[i][j] \u8868\u793A\u7B2C\u4E00\u4E2A\u5B57\u7B26\u4E32\u4ECEi\u5230\u7ED3\u5C3E,\u7B2C\u4E8C\u4E2A\u5B57\u7B26\u4E32\u4ECEj\u5230\u7ED3\u5C3E\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217. \u90A3\u4E48\u6700\u7EC8\u7B54\u6848\u662Fdp[0][0] dp[i][j]= 1+dp[i+1][j+1] if s1[i]==s2[j] else max(dp[i+1][j],dp[i][j+1] )</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">longest_common_subsequence</span><span class="token punctuation">(</span>text1<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> text2<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> s1 <span class="token operator">=</span> text1<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> s2 <span class="token operator">=</span> text2<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> dp <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span> s2<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> s1<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">..</span>s1<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">..</span>s2<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> s2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> t1 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token keyword">let</span> t2 <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">longest_common_subsequence</span><span class="token punctuation">(</span><span class="token string">&quot;abcde&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ace&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">longest_common_subsequence</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">longest_common_subsequence</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;def&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u52A8\u6001\u89C4\u5212\u7684\u524D\u63D0:</p><ol><li>\u6700\u4F18\u5B50\u95EE\u9898</li><li>\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B</li></ol><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,22),o=[e];function c(u,l,i,k,r,b){return a(),s("div",null,o)}var f=n(p,[["render",c]]);export{m as __pageData,f as default};
