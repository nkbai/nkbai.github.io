import{_ as n,c as s,o as a,a as p}from"./app.7ecda22b.js";const d='{"title":"1297. \u5B50\u4E32\u7684\u6700\u5927\u51FA\u73B0\u6B21\u6570-2","description":"","frontmatter":{"title":"1297. \u5B50\u4E32\u7684\u6700\u5927\u51FA\u73B0\u6B21\u6570-2","date":"2020-03-05T19:57:03.000Z","draft":false,"tags":["rust","leetcode"],"series":["leetcode"],"categories":["\u6280\u672F\u76F8\u5173"],"plugins":["viz"]},"headers":[{"level":2,"title":"\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-06)","slug":"\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-06"},{"level":2,"title":"\u9898\u76EE\u63CF\u8FF0","slug":"\u9898\u76EE\u63CF\u8FF0"},{"level":2,"title":"\u89E3\u9898\u601D\u8DEF","slug":"\u89E3\u9898\u601D\u8DEF"},{"level":2,"title":"\u89E3\u9898\u8FC7\u7A0B","slug":"\u89E3\u9898\u8FC7\u7A0B"},{"level":2,"title":"\u4E00\u70B9\u611F\u609F","slug":"\u4E00\u70B9\u611F\u609F"},{"level":2,"title":"\u5176\u4ED6","slug":"\u5176\u4ED6"}],"relativePath":"rust-leetcode/2020-03-06.md"}',t={},e=p(`<h2 id="\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-06" tabindex="-1">\u6BCF\u5929\u4E00\u9053Rust-LeetCode(2020-03-06) <a class="header-anchor" href="#\u6BCF\u5929\u4E00\u9053rust-leetcode-2020-03-06" aria-hidden="true">#</a></h2><p>\u575A\u6301\u6BCF\u5929\u4E00\u9053\u9898,\u5237\u9898\u5B66\u4E60Rust.</p><h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1">\u9898\u76EE\u63CF\u8FF0 <a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a></h2><p>\u7ED9\u4F60\u4E00\u4E2A\u5B57\u7B26\u4E32\xA0s \uFF0C\u8BF7\u4F60\u8FD4\u56DE\u6EE1\u8DB3\u4EE5\u4E0B\u6761\u4EF6\u4E14\u51FA\u73B0\u6B21\u6570\u6700\u5927\u7684\xA0\u4EFB\u610F\xA0\u5B50\u4E32\u7684\u51FA\u73B0\u6B21\u6570\uFF1A</p><p>\u5B50\u4E32\u4E2D\u4E0D\u540C\u5B57\u6BCD\u7684\u6570\u76EE\u5FC5\u987B\u5C0F\u4E8E\u7B49\u4E8E maxLetters \u3002 \u5B50\u4E32\u7684\u957F\u5EA6\u5FC5\u987B\u5927\u4E8E\u7B49\u4E8E\xA0minSize \u4E14\u5C0F\u4E8E\u7B49\u4E8E\xA0maxSize \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1As = &quot;aababcaab&quot;, maxLetters = 2, minSize = 3, maxSize = 4 \u8F93\u51FA\uFF1A2 \u89E3\u91CA\uFF1A\u5B50\u4E32 &quot;aab&quot; \u5728\u539F\u5B57\u7B26\u4E32\u4E2D\u51FA\u73B0\u4E86 2 \u6B21\u3002 \u5B83\u6EE1\u8DB3\u6240\u6709\u7684\u8981\u6C42\uFF1A2 \u4E2A\u4E0D\u540C\u7684\u5B57\u6BCD\uFF0C\u957F\u5EA6\u4E3A 3 \uFF08\u5728 minSize \u548C maxSize \u8303\u56F4\u5185\uFF09\u3002 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1As = &quot;aaaa&quot;, maxLetters = 1, minSize = 3, maxSize = 3 \u8F93\u51FA\uFF1A2 \u89E3\u91CA\uFF1A\u5B50\u4E32 &quot;aaa&quot; \u5728\u539F\u5B57\u7B26\u4E32\u4E2D\u51FA\u73B0\u4E86 2 \u6B21\uFF0C\u4E14\u5B83\u4EEC\u6709\u91CD\u53E0\u90E8\u5206\u3002 \u793A\u4F8B 3\uFF1A</p><p>\u8F93\u5165\uFF1As = &quot;aabcabcab&quot;, maxLetters = 2, minSize = 2, maxSize = 3 \u8F93\u51FA\uFF1A3 \u793A\u4F8B 4\uFF1A</p><p>\u8F93\u5165\uFF1As = &quot;abcde&quot;, maxLetters = 2, minSize = 3, maxSize = 3 \u8F93\u51FA\uFF1A0</p><p>\u63D0\u793A\uFF1A</p><p>1 &lt;= s.length &lt;= 10^5 1 &lt;= maxLetters &lt;= 26 1 &lt;= minSize &lt;= maxSize &lt;= min(26, s.length) s\xA0\u53EA\u5305\u542B\u5C0F\u5199\u82F1\u6587\u5B57\u6BCD\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1A<a href="https://leetcode-cn.com/problems/maximum-number-of-occurrences-of-a-substring" target="_blank" rel="noopener noreferrer">https://leetcode-cn.com/problems/maximum-number-of-occurrences-of-a-substring</a> \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1">\u89E3\u9898\u601D\u8DEF <a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u9010\u4E2A\u5B57\u7B26\u67E5\u627E\u6EE1\u8DB3\u6761\u4EF6\u7684\u5B57\u7B26\u4E32 \u56E0\u4E3A\u89C4\u5B9A\u4E86MaxSize\u4E3A26,\u6240\u4EE5\u590D\u6742\u5EA6\u6700\u5927\u4E3AO(N) =26N, N\u4E3A\u5B57\u7B26\u4E32\u7684\u957F\u5EA6 \u7136\u540E\u7528\u4E00\u4E2Amap\u6765\u7EDF\u8BA1\u6BCF\u4E00\u4E2A\u6EE1\u8DB3\u6761\u4EF6\u7684\u5B57\u7B26\u4E32\u51FA\u73B0\u7684\u6B21\u6570. \u7A7A\u95F4\u590D\u6742\u5EA6\u4E5F\u662FO(N),\u53EA\u9700\u5B58\u50A8\u6BCF\u4E00\u4E2A\u5B50\u4E32\u7684\u6307\u9488\u5373\u53EF</p><p>\u4F18\u5316\u7A7A\u95F4:</p><ol><li>\u5F88\u5BB9\u6613\u63A8\u5BFC\u51FA,\u5047\u8BBEmin_size=3,max_size=7 \u5982\u679C\u4E00\u4E2A\u957F\u5EA6\u4E3A5\u7684\u5B50\u4E32\u51FA\u73B0\u6B21\u6570\u662F4,\u90A3\u4E48\u957F\u5EA6\u4E3A3\u7684\u5B50\u4E32\u51FA\u73B0\u6B21\u6570\u4E00\u5B9A\u662F\u5927\u4E8E\u7B49\u4E8E4 \u6240\u4EE5,\u53EF\u4EE5\u5FFD\u7565max_size\u8FD9\u4E2A\u53C2\u6570</li><li>\u4E25\u683C\u6BCF\u6B65\u90FD\u5411\u524D\u8D70\u4E00\u6B65,\u4E0D\u56DE\u5934 \u987A\u4FBF\u8BF4\u4E00\u4E0B,KMP\u7B97\u6CD5\u4E5F\u662F\u8FD9\u4E2A\u601D\u8DEF,</li></ol><p>\u4F18\u5316\u4EE5\u540E\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u8FD8\u662FO(N),\u53EA\u4E0D\u8FC7\u5C31\u662FN. \u7A7A\u95F4\u590D\u6742\u5EA6\u6CA1\u53D8.</p><h2 id="\u89E3\u9898\u8FC7\u7A0B" tabindex="-1">\u89E3\u9898\u8FC7\u7A0B <a class="header-anchor" href="#\u89E3\u9898\u8FC7\u7A0B" aria-hidden="true">#</a></h2><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Solution</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">max_freq</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> max_letters<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> min_size<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> max_size<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> min_size <span class="token keyword">as</span> <span class="token keyword">usize</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> m<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">usize</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">HashMap</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> max_letters <span class="token operator">=</span> max_letters <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> min_size <span class="token operator">=</span> min_size <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _max_size <span class="token operator">=</span> max_size <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> count <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> cmax_letters <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>min_size <span class="token punctuation">{</span>
            <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
            count<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> count<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
                cmax_letters <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u7528\u524Dmin_size\u4E2A\u5B57\u7B26\u6765\u521D\u59CB\u5316</span>
        <span class="token keyword">if</span> cmax_letters <span class="token operator">&lt;=</span> max_letters <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span>min_size<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            max <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u6EE1\u8DB3\u957F\u5EA6\u8981\u6C42</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> min_size<span class="token punctuation">..</span>s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> start <span class="token operator">=</span> i <span class="token operator">-</span> min_size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> end <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">let</span> pos_before_start <span class="token operator">=</span> start <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> pos_before_start_index <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>pos_before_start<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span> <span class="token keyword">as</span> <span class="token keyword">u8</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
            count<span class="token punctuation">[</span>pos_before_start_index<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> count<span class="token punctuation">[</span>pos_before_start_index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
                cmax_letters <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            count<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> count<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
                cmax_letters <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u4E0D\u6EE1\u8DB3\u5B57\u7B26\u4E2A\u6570\u7684,\u8DF3\u8FC7,\u6BD4\u5982max_letters=1,\u5F53\u524D\u5B57\u7B26\u4E32\u662Faba</span>
            <span class="token keyword">if</span> cmax_letters <span class="token operator">&gt;</span> max_letters <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">let</span> entry <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">entry</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">[</span>start<span class="token punctuation">..=</span>end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or_default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">*</span>entry <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> max <span class="token operator">&lt;</span> <span class="token operator">*</span>entry <span class="token punctuation">{</span>
                max <span class="token operator">=</span> <span class="token operator">*</span>entry<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// println!(</span>
            <span class="token comment">//     &quot;found start={},end={},s={},count={}&quot;,</span>
            <span class="token comment">//     start,</span>
            <span class="token comment">//     end,</span>
            <span class="token comment">//     unsafe { std::str::from_utf8_unchecked(&amp;s[start..=end]) },</span>
            <span class="token comment">//     *entry</span>
            <span class="token comment">// );</span>
        <span class="token punctuation">}</span>
        max <span class="token keyword">as</span> <span class="token keyword">i32</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token attribute attr-name">#[cfg(test)]</span>
<span class="token keyword">mod</span> <span class="token module-declaration namespace">test</span> <span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token keyword">super</span><span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>
    <span class="token attribute attr-name">#[test]</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">max_freq</span><span class="token punctuation">(</span><span class="token string">&quot;aababcaabz&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">max_freq</span><span class="token punctuation">(</span><span class="token string">&quot;aaaa&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">max_freq</span><span class="token punctuation">(</span><span class="token string">&quot;aabcabcab&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token class-name">Solution</span><span class="token punctuation">::</span><span class="token function">max_freq</span><span class="token punctuation">(</span><span class="token string">&quot;abcde&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br></div></div><h2 id="\u4E00\u70B9\u611F\u609F" tabindex="-1">\u4E00\u70B9\u611F\u609F <a class="header-anchor" href="#\u4E00\u70B9\u611F\u609F" aria-hidden="true">#</a></h2><p>\u7B80\u5316\u7684\u4EE3\u7801,\u4E0D\u4EC5\u53EF\u7EF4\u62A4\u66F4\u597D,\u6027\u80FD\u4E5F\u66F4\u597D. \u5F88\u591A\u65F6\u5019\u8FFD\u6C42\u6027\u80FD\u7684\u540C\u65F6,\u4EE3\u7801\u7684\u8D28\u91CF\u4E5F\u4F1A\u63D0\u9AD8.</p><h2 id="\u5176\u4ED6" tabindex="-1">\u5176\u4ED6 <a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a></h2><p>\u6B22\u8FCE\u5173\u6CE8\u6211\u7684<a href="https://github.com/nkbai/rust-leetcode" target="_blank" rel="noopener noreferrer">github</a>,\u672C\u9879\u76EE\u6587\u7AE0\u6240\u6709\u4EE3\u7801\u90FD\u53EF\u4EE5\u627E\u5230.</p>`,24),o=[e];function c(l,u,r,k,i,m){return a(),s("div",null,o)}var y=n(t,[["render",c]]);export{d as __pageData,y as default};
