import{_ as s,c as a,o as n,N as l}from"./chunks/framework.3a9190c5.js";const A=JSON.parse('{"title":"我对rust atomic的理解","description":"","frontmatter":{"title":"我对rust atomic的理解","date":"2022-01-04T13:57:03.000Z","draft":false,"tags":["rust"],"categories":["技术相关"]},"headers":[],"relativePath":"rust/rust_atomic.md"}'),p={name:"rust/rust_atomic.md"},e=l(`<p>最近rust 日报公众号发了一篇文章,有一个哥们做了<a href="https://github.com/blasrodri/atomic-story" target="_blank" rel="noreferrer">rust atomic的测试</a>,主要是帮助大家理解atomic的工作机制. 我顺道来解释一下atomic是怎么工作的以及为什么会是这样.</p><h2 id="atomic-介绍" tabindex="-1">atomic 介绍 <a class="header-anchor" href="#atomic-介绍" aria-label="Permalink to &quot;atomic 介绍&quot;">​</a></h2><p>atomic的话题比较复杂, 涉及的内容较多,说一下,我的理解,主要从两个方面.</p><ol><li>操作的原子性,也就是CAS,主要解决a+=1这种操作的原子性问题.</li><li>执行顺序问题,这个才是atomic比较难理解的地方.</li></ol><h3 id="atomic的执行顺序" tabindex="-1">atomic的执行顺序 <a class="header-anchor" href="#atomic的执行顺序" aria-label="Permalink to &quot;atomic的执行顺序&quot;">​</a></h3><p>Order主要有五种模式:</p><ul><li>Relaxed load,store都能用</li><li>Release 仅能用于store</li><li>Acquire 仅能用于load</li><li>AcqRel load,store都能用,实际上可以认为是Release和Acquire的合体,有点类似于语法糖.</li><li>SeqCst load,store都能用</li></ul><p>如何理解这五种模式呢?</p><h4 id="relaxed模式" tabindex="-1">Relaxed模式 <a class="header-anchor" href="#relaxed模式" aria-label="Permalink to &quot;Relaxed模式&quot;">​</a></h4><p>实现了CAS功能,也就是只保证原子的操作性,不保证执行顺序.</p><h4 id="acquire-release-acqrel" tabindex="-1">Acquire,Release,AcqRel <a class="header-anchor" href="#acquire-release-acqrel" aria-label="Permalink to &quot;Acquire,Release,AcqRel&quot;">​</a></h4><p>如何理解执行顺序呢? 这个的关键地方是性能,为了让程序更快的执行,我们的编译器和CPU可以做很多优化. 比如优化指令的执行顺序,这不仅涉及到编译器,也涉及到CPU,都可能会对执行令进行重排. 但是有时候我们想阻止这种重排行为,该怎么告诉编译器和cpu呢?</p><p><strong>这就是atomic的Order.</strong></p><p><strong>Release 告诉cpu不要把我这条指令前面的指令放到我后面执行,而Acquire则是告诉CPU,不要把我后面的执行放到我前面执行.</strong></p><p>这个很难记,但是其实很容易理解,我们对比lock来理解,lock主要用来保护一个临界区域,主要是保护从lock到unlock的一段指令的执行. 而<strong>lock类似于Acquire,unlock类似于Release</strong>,就是为了保证这段指令的执行.</p><h4 id="seqcst" tabindex="-1">SeqCst <a class="header-anchor" href="#seqcst" aria-label="Permalink to &quot;SeqCst&quot;">​</a></h4><p>指令前的不能挪到后面执行,指令后面的不能挪到前面执行. 所以如果你<strong>搞不清楚的时候就用这个</strong>,但是它的问题也很明显:</p><p><strong>因为顺序不能自由调整,性能上不如Release/Acquire配合</strong></p><h2 id="代码的理解" tabindex="-1">代码的理解 <a class="header-anchor" href="#代码的理解" aria-label="Permalink to &quot;代码的理解&quot;">​</a></h2><p>这里把代码粘贴在这里,方便大家阅读:</p><div class="language-rust line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">cfg</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#C792EA;">mod</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tests</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">sync</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">atomic</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Ordering</span><span style="color:#89DDFF;">::{</span><span style="color:#FFCB6B;">Acquire</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> Relaxed</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> Release</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> SeqCst</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">sync</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">atomic</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">Ordering</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> loom</span><span style="color:#89DDFF;">::{</span></span>
<span class="line"><span style="color:#FFCB6B;">        sync</span><span style="color:#89DDFF;">::{</span><span style="color:#FFCB6B;">atomic</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">AtomicUsize</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> Arc</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#FFCB6B;">        thread</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#FFCB6B;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">two_numbers_with_a_dependency</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        read_ordering_a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Ordering</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        read_ordering_b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Ordering</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        write_ordering_a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Ordering</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        write_ordering_b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Ordering</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">loom</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">model</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">move</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> num_a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Arc</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AtomicUsize</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> num_b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Arc</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AtomicUsize</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> num_a2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num_a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> num_b2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num_b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> tb </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">thread</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">spawn</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">move</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> idx </span><span style="color:#F78C6C;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">..</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    num_a2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">store</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">idx </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> read_ordering_a</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                    num_b2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">store</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> read_ordering_b</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">thread</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">spawn</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">move</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> _ </span><span style="color:#F78C6C;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">..</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> nb </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num_b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">load</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">write_ordering_b</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> na </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num_a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">load</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">write_ordering_a</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#82AAFF;">assert!</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">na </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> nb</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">            tb</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">unwrap</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">should_panic</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">atomics_relaxed_failing</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">two_numbers_with_a_dependency</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Relaxed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Relaxed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Relaxed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Relaxed</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">should_panic</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">atomics_writer_release_reader_relaxed_failing</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">two_numbers_with_a_dependency</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Release</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Release</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Relaxed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Relaxed</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">atomics_writer_release_reader_seqcst_and_relaxed</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">two_numbers_with_a_dependency</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Release</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Release</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Relaxed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SeqCst</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">atomics_seq_cst_does_not_fail</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">two_numbers_with_a_dependency</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">SeqCst</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SeqCst</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SeqCst</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SeqCst</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">#[</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">atomics_acquire_release_does_not_fail</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">two_numbers_with_a_dependency</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Release</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Release</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Acquire</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Acquire</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><p>顺便说一下loom,这个一个帮助并发测试的工具,方便发现潜在的竞争冲突问题.</p><h4 id="atomics-relaxed-failing" tabindex="-1">atomics_relaxed_failing <a class="header-anchor" href="#atomics-relaxed-failing" aria-label="Permalink to &quot;atomics_relaxed_failing&quot;">​</a></h4><p>这个失败,很自然,他不能保证顺序的执行,所以不能保证读到数据之间的逻辑性.</p><h4 id="two-numbers-with-a-dependency" tabindex="-1">two_numbers_with_a_dependency <a class="header-anchor" href="#two-numbers-with-a-dependency" aria-label="Permalink to &quot;two_numbers_with_a_dependency&quot;">​</a></h4><p>这个失败的原因是,保证store的顺序,但是load的顺序不能保证.</p><h4 id="atomics-writer-release-reader-seqcst-and-relaxed" tabindex="-1">atomics_writer_release_reader_seqcst_and_relaxed <a class="header-anchor" href="#atomics-writer-release-reader-seqcst-and-relaxed" aria-label="Permalink to &quot;atomics_writer_release_reader_seqcst_and_relaxed&quot;">​</a></h4><p>这个可以成功的原因是<code>write_ordering_b</code>是seqCst,他保证了load的顺序,而Release保证了store的顺序.</p><h4 id="atomics-seq-cst-does-not-fail" tabindex="-1">atomics_seq_cst_does_not_fail <a class="header-anchor" href="#atomics-seq-cst-does-not-fail" aria-label="Permalink to &quot;atomics_seq_cst_does_not_fail&quot;">​</a></h4><p>这个是最严苛的模式,所以性能也是最低的.</p><h4 id="atomics-acquire-release-does-not-fail" tabindex="-1">atomics_acquire_release_does_not_fail <a class="header-anchor" href="#atomics-acquire-release-does-not-fail" aria-label="Permalink to &quot;atomics_acquire_release_does_not_fail&quot;">​</a></h4><p>这个不仅保证了正确性,同时也是性能最优.</p>`,32),o=[e];function r(c,t,F,D,y,C){return n(),a("div",null,o)}const b=s(p,[["render",r]]);export{A as __pageData,b as default};
